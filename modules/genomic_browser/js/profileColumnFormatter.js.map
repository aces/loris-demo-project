{"version":3,"sources":["webpack:///modules/genomic_browser/js/profileColumnFormatter.js","webpack:///webpack/bootstrap fe6dbfacf561d62c6695?e802**************************","webpack:///./modules/genomic_browser/jsx/profileColumnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","formatColumn","column","cell","rowData","rowHeaders","loris","hiddenHeaders","indexOf","row","forEach","header","index","this","reactElement","url","BaseURL","React","createElement","href","subprojectList","onClick","loadFilteredMenuClickHandler","candID","style","cursor","toLowerCase","DCCID","window"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAE,WACAE,GAAAJ,SACAK,QAAA,EAUA,OANAP,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,QAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBAqCA,OATAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,GAGAV,oBAAA,KDMM,SAASI,OAAQD,SAEtB,YEtCD,SAASQ,cAAaC,OAAQC,KAAMC,QAASC,YAE3C,GAAIC,MAAMC,cAAcC,QAAQN,SAAU,EACxC,MAAO,KAIT,IAAIO,OACJJ,YAAWK,QAAQ,SAASC,OAAQC,OAClCH,IAAIE,QAAUP,QAAQQ,QACrBC,KAEH,IAAIC,cAAe,IACnB,QAAQZ,QACN,IAAK,QACH,GAAMa,KAAMT,MAAMU,QAAU,IAAMZ,QAAQ,GAAK,GAC/CU,cACEG,MAAAC,cAAA,UAAID,MAAAC,cAAA,KAAGC,KAAMJ,KAAMZ,MAErB,MAEF,KAAK,aACHW,aACEG,MAAAC,cAAA,UAAKZ,MAAMc,eAAejB,MAE5B,MACF,KAAK,OAEDW,aADW,MAATX,KAEAc,MAAAC,cAAA,UACED,MAAAC,cAAA,KAAGC,KAAK,IAAIE,QAASf,MAAMgB,6BACzB,oCACCC,OAAQnB,QAAQ,MACfD,OAKNc,MAAAC,cAAA,UAAKf,KAGT,MACF,KAAK,MACL,IAAK,MACL,IAAK,MAEDW,aADW,MAATX,KAEAc,MAAAC,cAAA,UACED,MAAAC,cAAA,QACEM,OAAQC,OAAQ,WAChBJ,QAASf,MAAMgB,6BACb,mBAAqBpB,OAAOwB,cAAgB,aAAcC,MAAOvB,QAAQ,MAG1ED,OAMLc,MAAAC,cAAA,UAAKf,KAGT,MACF,SACEW,aACCG,MAAAC,cAAA,UAAKf,MAGV,MAAOW,cAGTc,OAAO3B,aAAeA","file":"./modules/genomic_browser/js/profileColumnFormatter.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  // If a column if set as hidden, don't display it\n\t  if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t    return null;\n\t  }\n\t\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t\n\t  var reactElement = null;\n\t  switch (column) {\n\t    case 'PSCID':\n\t      {\n\t        var url = loris.BaseURL + \"/\" + rowData[1] + \"/\";\n\t        reactElement = React.createElement(\n\t          \"td\",\n\t          null,\n\t          React.createElement(\n\t            \"a\",\n\t            { href: url },\n\t            cell\n\t          )\n\t        );\n\t        break;\n\t      }\n\t    case 'Subproject':\n\t      reactElement = React.createElement(\n\t        \"td\",\n\t        null,\n\t        loris.subprojectList[cell]\n\t      );\n\t      break;\n\t    case 'File':\n\t      if (cell === 'Y') {\n\t        reactElement = React.createElement(\n\t          \"td\",\n\t          null,\n\t          React.createElement(\n\t            \"a\",\n\t            { href: \"#\", onClick: loris.loadFilteredMenuClickHandler('genomic_browser/viewGenomicFile/', { candID: rowData[1] }) },\n\t            cell\n\t          )\n\t        );\n\t      } else {\n\t        reactElement = React.createElement(\n\t          \"td\",\n\t          null,\n\t          cell\n\t        );\n\t      }\n\t      break;\n\t    case 'CNV':\n\t    case 'CPG':\n\t    case 'SNP':\n\t      if (cell === 'Y') {\n\t        reactElement = React.createElement(\n\t          \"td\",\n\t          null,\n\t          React.createElement(\n\t            \"span\",\n\t            {\n\t              style: { cursor: 'pointer' },\n\t              onClick: loris.loadFilteredMenuClickHandler('genomic_browser/' + column.toLowerCase() + '_browser/', { DCCID: rowData[1] })\n\t            },\n\t            cell\n\t          )\n\t        );\n\t      } else {\n\t        reactElement = React.createElement(\n\t          \"td\",\n\t          null,\n\t          cell\n\t        );\n\t      }\n\t      break;\n\t    default:\n\t      reactElement = React.createElement(\n\t        \"td\",\n\t        null,\n\t        cell\n\t      );\n\t  }\n\t  return reactElement;\n\t}\n\t\n\twindow.formatColumn = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/genomic_browser/js/profileColumnFormatter.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fe6dbfacf561d62c6695","/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  var row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  let reactElement = null;\n  switch (column) {\n    case 'PSCID': {\n      const url = loris.BaseURL + \"/\" + rowData[1] + \"/\";\n      reactElement = (\n        <td><a href={url}>{cell}</a></td>\n      );\n      break;\n    }\n    case 'Subproject':\n      reactElement = (\n        <td>{loris.subprojectList[cell]}</td>\n      );\n      break;\n    case 'File':\n      if (cell === 'Y') {\n        reactElement = (\n          <td>\n            <a href=\"#\" onClick={loris.loadFilteredMenuClickHandler(\n              'genomic_browser/viewGenomicFile/',\n              {candID: rowData[1]}\n            )}>{cell}</a>\n          </td>\n        );\n      } else {\n        reactElement = (\n          <td>{cell}</td>\n        );\n      }\n      break;\n    case 'CNV':\n    case 'CPG':\n    case 'SNP':\n      if (cell === 'Y') {\n        reactElement = (\n          <td>\n            <span\n              style={{cursor: 'pointer'}}\n              onClick={loris.loadFilteredMenuClickHandler(\n                'genomic_browser/' + column.toLowerCase() + '_browser/', {DCCID: rowData[1]}\n              )}\n            >\n              {cell}\n            </span>\n          </td>\n        );\n      } else {\n        reactElement = (\n          <td>{cell}</td>\n        );\n      }\n      break;\n    default:\n      reactElement = (\n       <td>{cell}</td>\n     );\n  }\n  return reactElement;\n}\n\nwindow.formatColumn = formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/genomic_browser/jsx/profileColumnFormatter.js"],"sourceRoot":""}