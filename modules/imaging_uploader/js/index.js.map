{"version":3,"sources":["webpack:///modules/imaging_uploader/js/index.js","webpack:///webpack/bootstrap b8c11c8c10bff5349ad6?8aea*******************************","webpack:///./modules/imaging_uploader/jsx/index.js","webpack:///./jsx/Panel.js?b4c8***","webpack:///./jsx/Tabs.js?82f5*","webpack:///./jsx/FilterForm.js?52c5**","webpack:///./modules/imaging_uploader/jsx/ImagingUploader.js","webpack:///./modules/imaging_uploader/jsx/LogPanel.js","webpack:///./modules/imaging_uploader/jsx/UploadForm.js","webpack:///./jsx/ProgressBar.js","webpack:///./modules/imaging_uploader/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_ImagingUploader","_ImagingUploader2","$","imagingUploader","React","createElement","className","Module","DataURL","loris","BaseURL","ReactDOM","render","document","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Panel","_React$Component","this","_this","getPrototypeOf","state","collapsed","initCollapsed","panelClass","toggleCollapsed","bind","setState","glyphClass","panelHeading","title","onClick","data-toggle","data-target","style","cursor","role","height","children","Component","propTypes","PropTypes","string","defaultProps","Tabs","hash","window","location","activeTab","updateURL","substr","defaultTab","tabs","handleClick","getTabs","getTabPanes","tabId","e","onTabChange","scrollDistance","scrollTop","map","tab","tabClass","href","tabID","label","tabPanes","Children","child","cloneElement","tabStyle","marginLeft","marginBottom","array","isRequired","bool","VerticalTabs","_React$Component2","_this2","TabPane","_React$Component3","apply","arguments","classList","TabId","Title","_typeof","Symbol","iterator","_Panel","_Panel2","FilterForm","clearFilter","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","filter","keys","forEach","filterKey","exactMatch","onUpdate","clear","formChildren","isValidElement","type","onUserInput","callbackFunc","callbackName","name","elementName","displayName","queryFieldName","filterValue","push","JSON","parse","stringify","fieldName","fieldValue","set","formElements","FormElement","console","warn","object","func","_FilterForm","_FilterForm2","_Tabs","_LogPanel","_LogPanel2","_UploadForm","_UploadForm2","_columnFormatter","_columnFormatter2","ImagingUploader","isLoaded","fetchData","updateFilter","resetFilters","ajax","method","dataType","success","data","Data","error","imagingUploaderFilter","tabList","filterRef","f","ref","TextboxElement","form","candID","pSCID","SelectElement","visitLabel","ButtonElement","StaticDataTable","Headers","getFormattedCell","Filter","mriList","maxUploadSize","LogPanel","logText","logType","initHelper","onLogTypeChange","setServerPolling","monitorProgress","uploadProgress","UploadProgress","on","event","getUploadRow","css","currentTarget","setUploadRow","setProgressFromServer","summary","uploadId","getUploadId","post","getProgressText","getPipelineStatus","PIPELINE_STATUS_RUNNING","poll","getSummaryInterval","setInterval","dotUpdateInterval","updateDots","animatedCharInterval","updateAnimatedCharIndex","clearInterval","logTypes","detailed","options","emptyOption","TextareaElement","disabled","rows","_ProgressBar","_ProgressBar2","UploadForm","formData","hasError","errorMessage","onFormChange","getDisabledStatus","submitForm","uploadFile","IsPhantom","field","assign","phantomScans","mriFile","fileName","pcv","pcvu","properName","RegExp","properNameExt","match","swal","text","confirmButtonText","fieldMsg","undefined","fileNameParts","split","visitLabelOffset","fileNameRemains","indexOf","find","status","showCancelButton","cancelButtonText","isConfirm","overwriteFile","formObj","FormData","append","url","cache","contentType","processData","xhr","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentage","Math","round","total","hasOwnProperty","textStatus","errorThrown","responseJSON","errors","toString","btnClass","notes","fileUpload","required","FileElement","StaticElement","buttonClass","ProgressBar","progressStyle","display","backgroundColor","position","labelStyle","top","left","zIndex","width","color","textAlign","lineHeight","fontWeight","aria-valuemin","aria-valuemax","aria-valuenow","number","formatColumn","column","cell","rowData","rowHeaders","dccid","loadFilteredMenuClickHandler","DCCID","openViolatedScans","patientName","PatientName","hiddenHeaders","row","header","index","cellStyle","whiteSpace","created","inserted","CandID","violatedScans","numViolatedScans"],"mappings":"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","file":"./modules/imaging_uploader/js/index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _ImagingUploader = __webpack_require__(16);\n\t\n\tvar _ImagingUploader2 = _interopRequireDefault(_ImagingUploader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Render imaging_uploader on page load\n\t */\n\t$(function () {\n\t  var imagingUploader = React.createElement(\n\t    \"div\",\n\t    { className: \"page-imaging-uploader\" },\n\t    React.createElement(_ImagingUploader2.default, {\n\t      Module: \"imaging_uploader\",\n\t      DataURL: loris.BaseURL + \"/imaging_uploader/?format=json\"\n\t    })\n\t  );\n\t\n\t  ReactDOM.render(imagingUploader, document.getElementById(\"lorisworkspace\"));\n\t}); /* global ReactDOM */\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/**\n\t * Allows to dynamically render vertical tabs corresponding to tab panes.\n\t */\n\t\n\tvar VerticalTabs = function (_React$Component2) {\n\t  _inherits(VerticalTabs, _React$Component2);\n\t\n\t  function VerticalTabs(props) {\n\t    _classCallCheck(this, VerticalTabs);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (VerticalTabs.__proto__ || Object.getPrototypeOf(VerticalTabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this2.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this2.props.defaultTab) {\n\t      activeTab = _this2.props.defaultTab;\n\t    } else if (_this2.props.tabs.length > 0) {\n\t      activeTab = _this2.props.tabs[0].id;\n\t    }\n\t\n\t    _this2.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this2.handleClick = _this2.handleClick.bind(_this2);\n\t    _this2.getTabs = _this2.getTabs.bind(_this2);\n\t    _this2.getTabPanes = _this2.getTabPanes.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(VerticalTabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tabbable col-md-3 col-sm-3' },\n\t          React.createElement(\n\t            'ul',\n\t            { className: 'nav nav-pills nav-stacked', role: 'tablist', style: tabStyle },\n\t            tabs\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content col-md-9 col-sm-9' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return VerticalTabs;\n\t}(React.Component);\n\t\n\tVerticalTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tVerticalTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  // Set updateURL to default to true but allow for change\n\t  // Nested tabs should set this variable to false\n\t  updateURL: true\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component3) {\n\t  _inherits(TabPane, _React$Component3);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.VerticalTabs = VerticalTabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t      if (key) {\n\t        filter[key] = {};\n\t        if (value) {\n\t          // all defined/non-null values must have some length, else empty string\n\t          filter[key].value = Object.keys(value).length > 0 ? value : '';\n\t        } else {\n\t          // null and undefined handled here\n\t          filter[key].value = '';\n\t        }\n\t        filter[key].exactMatch = type === \"SelectElement\" || type === \"select\";\n\t      }\n\t      if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure key is of string type and value is of string or object type\n\t      // before sending them to querystring\n\t      if (typeof fieldName !== 'string' || typeof fieldValue !== 'string' && (typeof fieldValue === 'undefined' ? 'undefined' : _typeof(fieldValue)) !== 'object') {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, formElements[fieldName].type);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(13);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _Tabs = __webpack_require__(9);\n\t\n\tvar _LogPanel = __webpack_require__(17);\n\t\n\tvar _LogPanel2 = _interopRequireDefault(_LogPanel);\n\t\n\tvar _UploadForm = __webpack_require__(18);\n\t\n\tvar _UploadForm2 = _interopRequireDefault(_UploadForm);\n\t\n\tvar _columnFormatter = __webpack_require__(20);\n\t\n\tvar _columnFormatter2 = _interopRequireDefault(_columnFormatter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ImagingUploader = function (_React$Component) {\n\t  _inherits(ImagingUploader, _React$Component);\n\t\n\t  function ImagingUploader(props) {\n\t    _classCallCheck(this, ImagingUploader);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ImagingUploader.__proto__ || Object.getPrototypeOf(ImagingUploader)).call(this, props));\n\t\n\t    _this.state = {\n\t      isLoaded: false,\n\t      filter: {}\n\t    };\n\t\n\t    // Bind component instance to custom methods\n\t    _this.fetchData = _this.fetchData.bind(_this);\n\t    _this.updateFilter = _this.updateFilter.bind(_this);\n\t    _this.resetFilters = _this.resetFilters.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ImagingUploader, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchData();\n\t    }\n\t\n\t    /**\n\t     * Retrive data from the provided URL and save it in state\n\t     * Additionaly add hiddenHeaders to global loris vairable\n\t     * for easy access by columnFormatter.\n\t     */\n\t\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData() {\n\t      $.ajax(this.props.DataURL, {\n\t        method: \"GET\",\n\t        dataType: 'json',\n\t        success: function (data) {\n\t          this.setState({\n\t            Data: data,\n\t            isLoaded: true\n\t          });\n\t        }.bind(this),\n\t        error: function error(_error) {\n\t          console.error(_error);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateFilter',\n\t    value: function updateFilter(filter) {\n\t      this.setState({ filter: filter });\n\t    }\n\t  }, {\n\t    key: 'resetFilters',\n\t    value: function resetFilters() {\n\t      this.imagingUploaderFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var tabList = [{ id: \"browse\", label: \"Browse\" }, { id: \"upload\", label: \"Upload\" }];\n\t\n\t      var filterRef = function (f) {\n\t        this.imagingUploaderFilter = f;\n\t      }.bind(this);\n\t\n\t      return React.createElement(\n\t        _Tabs.Tabs,\n\t        { tabs: tabList, defaultTab: 'browse', updateURL: true },\n\t        React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[0].id },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-5' },\n\t              React.createElement(\n\t                _FilterForm2.default,\n\t                {\n\t                  Module: 'imaging_uploader',\n\t                  name: 'imaging_filter',\n\t                  id: 'imaging_filter',\n\t                  ref: filterRef,\n\t                  onUpdate: this.updateFilter,\n\t                  filter: this.state.filter\n\t                },\n\t                React.createElement(TextboxElement, this.state.Data.form.candID),\n\t                React.createElement(TextboxElement, this.state.Data.form.pSCID),\n\t                React.createElement(SelectElement, this.state.Data.form.visitLabel),\n\t                React.createElement(ButtonElement, { type: 'reset', label: 'Clear Filters', onUserInput: this.resetFilters })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-7' },\n\t              React.createElement(_LogPanel2.default, null)\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { id: 'mri_upload_table' },\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.state.Data.Data,\n\t              Headers: this.state.Data.Headers,\n\t              getFormattedCell: _columnFormatter2.default,\n\t              Filter: this.state.filter\n\t            })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[1].id },\n\t          React.createElement(_UploadForm2.default, {\n\t            form: this.state.Data.form,\n\t            mriList: this.state.Data.mriList,\n\t            maxUploadSize: this.state.Data.maxUploadSize\n\t          })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ImagingUploader;\n\t}(React.Component);\n\t\n\tImagingUploader.propTypes = {};\n\tImagingUploader.defaultProps = {};\n\t\n\texports.default = ImagingUploader;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global UploadProgress */\n\t\n\t/**\n\t * Log Panel Component\n\t *\n\t * Panel component that displays logs for a selected MRI upload whether it is\n\t * in progress or already completed or failed.\n\t *\n\t * @author Alex Ilea\n\t * @version 1.0.0\n\t * @since 2017/04/01\n\t *\n\t */\n\tvar LogPanel = function (_React$Component) {\n\t  _inherits(LogPanel, _React$Component);\n\t\n\t  function LogPanel(props) {\n\t    _classCallCheck(this, LogPanel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LogPanel.__proto__ || Object.getPrototypeOf(LogPanel)).call(this, props));\n\t\n\t    _this.state = {\n\t      logText: \"<select a row in the table below to view the upload logs>\",\n\t      logType: \"summary\"\n\t    };\n\t\n\t    _this.initHelper = _this.initHelper.bind(_this);\n\t    _this.onLogTypeChange = _this.onLogTypeChange.bind(_this);\n\t    _this.setServerPolling = _this.setServerPolling.bind(_this);\n\t    _this.monitorProgress = _this.monitorProgress.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LogPanel, [{\n\t    key: \"componentDidMount\",\n\t    value: function componentDidMount() {\n\t      this.initHelper();\n\t    }\n\t  }, {\n\t    key: \"initHelper\",\n\t    value: function initHelper() {\n\t      var uploadProgress = new UploadProgress();\n\t      this.uploadProgress = uploadProgress;\n\t\n\t      $('#mri_upload_table').on('click', 'tbody tr', function (event) {\n\t        // Stop server polling if any was taking place\n\t        if (uploadProgress.getUploadRow() !== null) {\n\t          $(uploadProgress.getUploadRow()).css('background-color', 'white');\n\t          this.setServerPolling(false);\n\t        }\n\t\n\t        // If user clicked on the same row, it is interpreted as a de-selection:\n\t        // deselect row and set log text to 'nothing selected'\n\t        if (event.currentTarget === uploadProgress.getUploadRow()) {\n\t          uploadProgress.setUploadRow(null);\n\t          uploadProgress.setProgressFromServer(null);\n\t          this.setState({\n\t            logText: '<select a row in the table below to view the upload logs>'\n\t          });\n\t          return;\n\t        }\n\t\n\t        uploadProgress.setUploadRow(event.currentTarget);\n\t        $(event.currentTarget).css('background-color', '#EFEFFB');\n\t        this.monitorProgress(this.state.logType);\n\t      }.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Monitors the progress of an MRI pipeline run on the server by repeatedly\n\t     * issuing POST requests for this information at regular intervals.\n\t     * As soon as the server indicates that the pipeline has finished running, polling\n\t     * will end.\n\t     *\n\t     * @param {string} logType - summary or details\n\t     */\n\t\n\t  }, {\n\t    key: \"monitorProgress\",\n\t    value: function monitorProgress(logType) {\n\t      var summary = logType === \"summary\";\n\t      var uploadProgress = this.uploadProgress;\n\t      var uploadId = uploadProgress.getUploadId();\n\t\n\t      // If no row was selected\n\t      if (!uploadId) {\n\t        return;\n\t      }\n\t\n\t      $.post(loris.BaseURL + \"/imaging_uploader/ajax/getUploadSummary.php\", {\n\t        uploadId: uploadId,\n\t        summary: summary\n\t      }, function (data) {\n\t        uploadProgress.setProgressFromServer(data);\n\t        this.setState({ logText: uploadProgress.getProgressText() });\n\t        // If the pipeline is still running, start polling\n\t        // If the pipeline is not running, end the polling (if any was started)\n\t        this.setServerPolling(uploadProgress.getPipelineStatus() === UploadProgress.PIPELINE_STATUS_RUNNING);\n\t      }.bind(this)); // post call\n\t    }\n\t\n\t    /**\n\t     * Starts/stops polling on the server.\n\t     * @param {bool} poll - pool boolean\n\t     */\n\t\n\t  }, {\n\t    key: \"setServerPolling\",\n\t    value: function setServerPolling(poll) {\n\t      var uploadProgress = this.uploadProgress;\n\t\n\t      if (poll) {\n\t        // START POLLING\n\t        // If there were no POST requests being issued, start issuing some.\n\t        if (!this.setServerPolling.getSummaryInterval) {\n\t          this.setServerPolling.getSummaryInterval = setInterval(this.monitorProgress, 5000);\n\t        }\n\t        // If there were no updates to the string of dots, start updating\n\t        if (!this.setServerPolling.dotUpdateInterval) {\n\t          this.setServerPolling.dotUpdateInterval = setInterval(function () {\n\t            uploadProgress.updateDots();\n\t            this.setState({\n\t              logText: uploadProgress.getProgressText()\n\t            });\n\t          }, 3000);\n\t        }\n\t        // If there were no updates to the animated chars, start updating\n\t        if (!this.setServerPolling.animatedCharInterval) {\n\t          this.setServerPolling.animatedCharInterval = setInterval(function () {\n\t            uploadProgress.updateAnimatedCharIndex();\n\t            this.setState({\n\t              logText: uploadProgress.getProgressText()\n\t            });\n\t          }, 250);\n\t        }\n\t      } else {\n\t        // STOP POLLING\n\t        // Stop issuing POST requests (if any polling was taking place)\n\t        if (this.setServerPolling.getSummaryInterval) {\n\t          clearInterval(this.setServerPolling.getSummaryInterval);\n\t          this.setServerPolling.getSummaryInterval = null;\n\t        }\n\t        // Stop updating the series of dots string (if such an update was going on)\n\t        if (this.setServerPolling.dotUpdateInterval) {\n\t          clearInterval(this.setServerPolling.dotUpdateInterval);\n\t          this.setServerPolling.dotUpdateInterval = null;\n\t        }\n\t        // Stop updating the animated char (if such an update was going on)\n\t        if (this.setServerPolling.animatedCharInterval) {\n\t          clearInterval(this.setServerPolling.animatedCharInterval);\n\t          this.setServerPolling.animatedCharInterval = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"onLogTypeChange\",\n\t    value: function onLogTypeChange(name, value) {\n\t      // Update log box\n\t      this.monitorProgress(value);\n\t      this.setState({ logType: value });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var logTypes = {\n\t        summary: 'Summary',\n\t        detailed: 'Detailed'\n\t      };\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        { id: \"log_panel\", title: \"Log Viewer\" },\n\t        React.createElement(\n\t          FormElement,\n\t          { name: \"log_form\" },\n\t          React.createElement(SelectElement, {\n\t            name: \"LogType\",\n\t            label: \"Logs to display\",\n\t            options: logTypes,\n\t            onUserInput: this.onLogTypeChange,\n\t            value: this.state.logType,\n\t            emptyOption: false\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: \"UploadLogs\",\n\t            disabled: true,\n\t            id: \"mri_upload_logs\",\n\t            value: this.state.logText,\n\t            rows: 6\n\t          })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LogPanel;\n\t}(React.Component);\n\t\n\tLogPanel.propTypes = {};\n\tLogPanel.defaultProps = {};\n\t\n\texports.default = LogPanel;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _ProgressBar = __webpack_require__(19);\n\t\n\tvar _ProgressBar2 = _interopRequireDefault(_ProgressBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Imaging Upload Form\n\t *\n\t * Form component allowing to upload MRI images to LORIS\n\t *\n\t * @author Alex Ilea\n\t * @author Victoria Foing\n\t * @version 1.0.0\n\t * @since 2017/04/01\n\t *\n\t */\n\tvar UploadForm = function (_React$Component) {\n\t  _inherits(UploadForm, _React$Component);\n\t\n\t  function UploadForm(props) {\n\t    _classCallCheck(this, UploadForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (UploadForm.__proto__ || Object.getPrototypeOf(UploadForm)).call(this, props));\n\t\n\t    var form = JSON.parse(JSON.stringify(_this.props.form));\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      form: form,\n\t      hasError: {},\n\t      errorMessage: {},\n\t      uploadProgress: -1\n\t    };\n\t\n\t    _this.onFormChange = _this.onFormChange.bind(_this);\n\t    _this.getDisabledStatus = _this.getDisabledStatus.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.uploadFile = _this.uploadFile.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(UploadForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Disable fields on initial load\n\t      this.onFormChange(this.state.form.IsPhantom.name, null);\n\t    }\n\t\n\t    /*\n\t     Updates values in formData\n\t     Deletes CandID, PSCID, and VisitLabel values if Phantom Scans is set to No\n\t     */\n\t\n\t  }, {\n\t    key: 'onFormChange',\n\t    value: function onFormChange(field, value) {\n\t      if (!field) return;\n\t\n\t      var form = JSON.parse(JSON.stringify(this.state.form));\n\t      var formData = Object.assign({}, this.state.formData);\n\t\n\t      if (field === 'IsPhantom') {\n\t        if (value !== 'N') {\n\t          delete formData.candID;\n\t          delete formData.pSCID;\n\t          delete formData.visitLabel;\n\t        }\n\t      }\n\t\n\t      formData[field] = value;\n\t\n\t      this.setState({\n\t        form: form,\n\t        formData: formData\n\t      });\n\t    }\n\t\n\t    /*\n\t     Returns false if Phantom Scans is set to No, and true otherwise\n\t     Result disables the element that calls the function\n\t     */\n\t\n\t  }, {\n\t    key: 'getDisabledStatus',\n\t    value: function getDisabledStatus(phantomScans) {\n\t      if (phantomScans === 'N') {\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Validate required fields\n\t      var data = this.state.formData;\n\t\n\t      if (!data.mriFile || !data.IsPhantom) {\n\t        return;\n\t      }\n\t\n\t      var fileName = data.mriFile.name;\n\t      if (data.IsPhantom === 'N') {\n\t        if (!data.candID || !data.pSCID || !data.visitLabel) {\n\t          return;\n\t        }\n\t        // Make sure file follows PSCID_CandID_VL[_*].zip|.tgz|.tar.gz format\n\t        var pcv = data.pSCID + '_' + data.candID + '_' + data.visitLabel;\n\t        var pcvu = pcv + '_';\n\t        var properName = new RegExp(\"^\" + pcv + \".(zip|tgz|tar.gz)\");\n\t        var properNameExt = new RegExp(\"^\" + pcvu + \".*(.(zip|tgz|tar.gz))\");\n\t        if (!fileName.match(properName) && !fileName.match(properNameExt)) {\n\t          swal({\n\t            title: \"Filename does not match other fields!\",\n\t            text: \"Filename and values in the PSCID, CandID \" + \"and Visit Label fields of the form do not match. Please \" + \"verify that the information entered in the \" + \"fields or the filename are correct.\",\n\t            type: \"error\",\n\t            confirmButtonText: \"OK\"\n\t          });\n\t          var fieldMsg = \"Field does not match the filename!\";\n\t\n\t          var errorMessage = {\n\t            mriFile: \"Filename does not match other fields!\",\n\t            candID: undefined,\n\t            pSCID: undefined,\n\t            visitLabel: undefined\n\t          };\n\t\n\t          var hasError = {\n\t            mriFile: true,\n\t            candID: false,\n\t            pSCID: false,\n\t            visitLabel: false\n\t          };\n\t\n\t          // check filename fields individually to decide\n\t          // which fields to apply error message\n\t          // use limit of 2 to avoid splitting the visit label\n\t          var fileNameParts = fileName.split('_', 2);\n\t          if (data.pSCID !== fileNameParts[0]) {\n\t            errorMessage.pSCID = fieldMsg;\n\t            hasError.pSCID = true;\n\t          }\n\t\n\t          if (data.candID !== fileNameParts[1]) {\n\t            errorMessage.candID = fieldMsg;\n\t            hasError.candID = true;\n\t          }\n\t\n\t          // offset for visit label is size of the two parts plus 2 _'s\n\t          var visitLabelOffset = fileNameParts[0].length + fileNameParts[1].length + 2;\n\t          var fileNameRemains = fileName.substr(visitLabelOffset);\n\t          // only check that this part of the filename begins with\n\t          // the field, last part of file name includes optional\n\t          // specifiers + file extension\n\t          if (fileNameRemains.indexOf(data.visitLabel) !== 0) {\n\t            errorMessage.visitLabel = fieldMsg;\n\t            hasError.visitLabel = true;\n\t          }\n\t\n\t          this.setState({ errorMessage: errorMessage, hasError: hasError });\n\t          return;\n\t        }\n\t      }\n\t\n\t      // Checks if a file with a given fileName has already been uploaded\n\t      var mriFile = this.props.mriList.find(function (mriFile) {\n\t        return mriFile.fileName.indexOf(fileName) > -1;\n\t      });\n\t\n\t      // New File\n\t      if (!mriFile) {\n\t        this.uploadFile();\n\t        return;\n\t      }\n\t\n\t      // File uploaded and completed mri pipeline\n\t      if (mriFile.status === \"Success\") {\n\t        swal({\n\t          title: \"File already exists!\",\n\t          text: \"A file with this name has already successfully passed the MRI pipeline!\\n\",\n\t          type: \"error\",\n\t          confirmButtonText: 'OK'\n\t        });\n\t        return;\n\t      }\n\t\n\t      // File in the middle of insertion pipeline\n\t      if (mriFile.status === \"In Progress...\") {\n\t        swal({\n\t          title: \"File is currently processing!\",\n\t          text: \"A file with this name is currently going through the MRI pipeline!\\n\",\n\t          type: \"error\",\n\t          confirmButtonText: 'OK'\n\t        });\n\t        return;\n\t      }\n\t\n\t      // File uploaded but failed during mri pipeline\n\t      if (mriFile.status === \"Failure\") {\n\t        swal({\n\t          title: \"Are you sure?\",\n\t          text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Yes, I am sure!',\n\t          cancelButtonText: \"No, cancel it!\"\n\t        }, function (isConfirm) {\n\t          if (isConfirm) {\n\t            this.uploadFile(true);\n\t          } else {\n\t            swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n\t          }\n\t        }.bind(this));\n\t      }\n\t\n\t      // Pipeline has not been triggered yet\n\t      if (mriFile.status === \"Not Started\") {\n\t        swal({\n\t          title: \"Are you sure?\",\n\t          text: \"A file with this name has been uploaded but has not yet started the MRI pipeline.\" + \"\\n Would you like to override the existing file?\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Yes, I am sure!',\n\t          cancelButtonText: 'No, cancel it!'\n\t        }, function (isConfirm) {\n\t          if (isConfirm) {\n\t            this.uploadFile(true);\n\t          } else {\n\t            swal(\"Cancelled\", \"Your upload has been cancelled.\", \"error\");\n\t          }\n\t        }.bind(this));\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    /*\n\t     Uploads file to the server, listening to the progress\n\t     in order to get the percentage uploaded as value for the progress bar\n\t     */\n\t\n\t  }, {\n\t    key: 'uploadFile',\n\t    value: function uploadFile(overwriteFile) {\n\t      var _this2 = this;\n\t\n\t      var formData = this.state.formData;\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t      formObj.append(\"fire_away\", \"Upload\");\n\t      if (overwriteFile) {\n\t        formObj.append(\"overwrite\", true);\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: loris.BaseURL + \"/imaging_uploader/\",\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          xhr.upload.addEventListener(\"progress\", function (evt) {\n\t            if (evt.lengthComputable) {\n\t              var percentage = Math.round(evt.loaded / evt.total * 100);\n\t              this.setState({ uploadProgress: percentage });\n\t            }\n\t          }.bind(this), false);\n\t          return xhr;\n\t        }.bind(this),\n\t        // Upon successful upload:\n\t        // - Resets errorMessage and hasError so no errors are displayed on form\n\t        // - Displays pop up window with success message\n\t        // - Returns to Browse tab\n\t        success: function success(data) {\n\t          var errorMessage = _this2.state.errorMessage;\n\t          var hasError = _this2.state.hasError;\n\t          for (var i in errorMessage) {\n\t            if (errorMessage.hasOwnProperty(i)) {\n\t              errorMessage[i] = \"\";\n\t              hasError[i] = false;\n\t            }\n\t          }\n\t          _this2.setState({ errorMessage: errorMessage, hasError: hasError });\n\t          swal({\n\t            title: \"Upload Successful!\",\n\t            type: \"success\"\n\t          }, function () {\n\t            window.location.assign(loris.BaseURL + \"/imaging_uploader/\");\n\t          });\n\t        },\n\t        // Upon errors in upload:\n\t        // - Displays pop up window with submission error message\n\t        // - Updates errorMessage and hasError so relevant errors are displayed on form\n\t        // - Returns to Upload tab\n\t        error: function error(_error, textStatus, errorThrown) {\n\t          swal({\n\t            title: \"Submission error!\",\n\t            type: \"error\"\n\t          });\n\t          var errorMessage = _this2.state.errorMessage;\n\t          var hasError = _this2.state.hasError;\n\t          errorMessage = (_error.responseJSON || {}).errors || 'Submission error!';\n\t          for (var i in errorMessage) {\n\t            if (errorMessage.hasOwnProperty(i)) {\n\t              errorMessage[i] = errorMessage[i].toString();\n\t              if (errorMessage[i].length) {\n\t                hasError[i] = true;\n\t              } else {\n\t                hasError[i] = false;\n\t              }\n\t            }\n\t          }\n\t          _this2.setState({ uploadProgress: -1, errorMessage: errorMessage, hasError: hasError });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Bind form elements to formData\n\t      var form = this.state.form;\n\t      form.IsPhantom.value = this.state.formData.IsPhantom;\n\t      form.candID.value = this.state.formData.candID;\n\t      form.pSCID.value = this.state.formData.pSCID;\n\t      form.visitLabel.value = this.state.formData.visitLabel;\n\t      form.mriFile.value = this.state.formData.mriFile;\n\t\n\t      // Hide button when progress bar is shown\n\t      var btnClass = this.state.uploadProgress > -1 ? \"btn btn-primary hide\" : undefined;\n\t\n\t      var notes = React.createElement(\n\t        'span',\n\t        null,\n\t        'File cannot exceed ',\n\t        this.props.maxUploadSize,\n\t        React.createElement('br', null),\n\t        'File must be of type .tgz or tar.gz or .zip',\n\t        React.createElement('br', null),\n\t        'For files that are not Phantom Scans, file name must begin with',\n\t        React.createElement(\n\t          'b',\n\t          null,\n\t          ' [PSCID]_[CandID]_[Visit Label]'\n\t        ),\n\t        React.createElement('br', null),\n\t        'For example, for CandID ',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          '100000'\n\t        ),\n\t        ', PSCID ',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          'ABC123'\n\t        ),\n\t        ', and Visit Label ',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          'V1'\n\t        ),\n\t        ' the file name should be prefixed by:',\n\t        React.createElement(\n\t          'b',\n\t          null,\n\t          ' ABC123_100000_V1'\n\t        ),\n\t        React.createElement('br', null)\n\t      );\n\t\n\t      // Returns individual form elements\n\t      // For CandID, PSCID, and Visit Label, disabled and required\n\t      // are updated depending on Phantom Scan value\n\t      // For all elements, hasError and errorMessage\n\t      // are updated depending on what values are submitted\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-md-7' },\n\t          React.createElement(\n\t            'h3',\n\t            null,\n\t            'Upload an imaging scan'\n\t          ),\n\t          React.createElement('br', null),\n\t          React.createElement(\n\t            FormElement,\n\t            {\n\t              name: 'upload_form',\n\t              fileUpload: true\n\t            },\n\t            React.createElement(SelectElement, {\n\t              name: 'IsPhantom',\n\t              label: 'Phantom Scans',\n\t              options: this.props.form.IsPhantom.options,\n\t              onUserInput: this.onFormChange,\n\t              required: true,\n\t              hasError: this.state.hasError.IsPhantom,\n\t              errorMessage: this.state.errorMessage.IsPhantom,\n\t              value: this.state.formData.IsPhantom\n\t            }),\n\t            React.createElement(TextboxElement, {\n\t              name: 'candID',\n\t              label: 'CandID',\n\t              onUserInput: this.onFormChange,\n\t              disabled: this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              required: !this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              hasError: this.state.hasError.candID,\n\t              errorMessage: this.state.errorMessage.candID,\n\t              value: this.state.formData.candID\n\t            }),\n\t            React.createElement(TextboxElement, {\n\t              name: 'pSCID',\n\t              label: 'PSCID',\n\t              onUserInput: this.onFormChange,\n\t              disabled: this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              required: !this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              hasError: this.state.hasError.pSCID,\n\t              errorMessage: this.state.errorMessage.pSCID,\n\t              value: this.state.formData.pSCID\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'visitLabel',\n\t              label: 'Visit Label',\n\t              options: this.props.form.visitLabel.options,\n\t              onUserInput: this.onFormChange,\n\t              disabled: this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              required: !this.getDisabledStatus(this.state.formData.IsPhantom),\n\t              hasError: this.state.hasError.visitLabel,\n\t              errorMessage: this.state.errorMessage.visitLabel,\n\t              value: this.state.formData.visitLabel\n\t            }),\n\t            React.createElement(FileElement, {\n\t              name: 'mriFile',\n\t              label: 'File to Upload',\n\t              onUserInput: this.onFormChange,\n\t              required: true,\n\t              hasError: this.state.hasError.mriFile,\n\t              errorMessage: this.state.errorMessage.mriFile,\n\t              value: this.state.formData.mriFile\n\t            }),\n\t            React.createElement(StaticElement, {\n\t              label: 'Notes',\n\t              text: notes\n\t            }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-sm-9 col-sm-offset-3' },\n\t                React.createElement(_ProgressBar2.default, { value: this.state.uploadProgress })\n\t              )\n\t            ),\n\t            React.createElement(ButtonElement, {\n\t              onUserInput: this.submitForm,\n\t              buttonClass: btnClass\n\t            })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return UploadForm;\n\t}(React.Component);\n\t\n\tUploadForm.propTypes = {};\n\tUploadForm.defaultProps = {};\n\t\n\texports.default = UploadForm;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * React ProgressBar.\n\t *\n\t * Updates UI automatically when passed a progress value between 0 and 100.\n\t * To hide progress bar before/after upload, set value to -1.\n\t *\n\t * Note: This component relies on Bootstrap 3 progress-bar classes\n\t * (http://getbootstrap.com/components/#progress)\n\t */\n\tvar ProgressBar = function (_React$Component) {\n\t  _inherits(ProgressBar, _React$Component);\n\t\n\t  function ProgressBar() {\n\t    _classCallCheck(this, ProgressBar);\n\t\n\t    return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ProgressBar, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var progressStyle = {\n\t        display: this.props.value < 0 ? 'none' : 'block',\n\t        backgroundColor: '#d3d3d3',\n\t        height: '30px',\n\t        position: 'relative'\n\t      };\n\t\n\t      var labelStyle = {\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        zIndex: 1000,\n\t        width: '100%',\n\t        color: '#fff',\n\t        textAlign: 'center',\n\t        lineHeight: '30px',\n\t        fontWeight: '600'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'progress', style: progressStyle },\n\t        React.createElement('div', {\n\t          className: 'progress-bar progress-bar-striped active',\n\t          role: 'progressbar',\n\t          'aria-valuemin': '0',\n\t          'aria-valuemax': '100',\n\t          'aria-valuenow': this.props.value,\n\t          style: { width: this.props.value + '%' }\n\t        }),\n\t        React.createElement(\n\t          'span',\n\t          { style: labelStyle },\n\t          this.props.value,\n\t          '%'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ProgressBar;\n\t}(React.Component);\n\t\n\tProgressBar.propTypes = {\n\t  value: React.PropTypes.number\n\t};\n\tProgressBar.defaultProps = {\n\t  value: 0\n\t};\n\t\n\texports.default = ProgressBar;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported formatColumn */\n\t\n\tloris.hiddenHeaders = ['PatientName'];\n\t\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  // If a column if set as hidden, don't display it\n\t  if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t    return null;\n\t  }\n\t\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t\n\t  // Default cell style\n\t  var cellStyle = {\n\t    whiteSpace: 'nowrap'\n\t  };\n\t\n\t  if (column === 'Progress') {\n\t    if (cell === 'Failure') {\n\t      cellStyle.color = '#fff';\n\t      return React.createElement(\n\t        'td',\n\t        { className: 'label-danger', style: cellStyle },\n\t        cell\n\t      );\n\t    }\n\t\n\t    if (cell === 'In Progress...') {\n\t      cellStyle.color = '#fff';\n\t      return React.createElement(\n\t        'td',\n\t        { className: 'label-warning', style: cellStyle },\n\t        cell\n\t      );\n\t    }\n\t\n\t    var created = row['Number Of MincCreated'];\n\t    var inserted = row['Number Of MincInserted'];\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      cell,\n\t      ' (',\n\t      inserted,\n\t      ' out of ',\n\t      created,\n\t      ')'\n\t    );\n\t  }\n\t\n\t  if (column === 'Tarchive Info') {\n\t    if (!cell || cell === \"0\") {\n\t      return React.createElement('td', null);\n\t    }\n\t\n\t    var url = loris.BaseURL + '/dicom_archive/viewDetails/?tarchiveID=' + cell;\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      React.createElement(\n\t        'a',\n\t        { href: url },\n\t        'View Details'\n\t      )\n\t    );\n\t  }\n\t\n\t  if (column === 'Number Of MincInserted') {\n\t    if (cell > 0) {\n\t      return React.createElement(\n\t        'td',\n\t        { style: cellStyle },\n\t        React.createElement(\n\t          'a',\n\t          { onClick: handleClick.bind(null, row.CandID) },\n\t          cell\n\t        )\n\t      );\n\t    }\n\t  }\n\t\n\t  if (column === 'Number Of MincCreated') {\n\t    var violatedScans = void 0;\n\t    if (row['Number Of MincCreated'] - row['Number Of MincInserted'] > 0) {\n\t      var numViolatedScans = row['Number Of MincCreated'] - row['Number Of MincInserted'];\n\t\n\t      var patientName = row.PatientName;\n\t      violatedScans = React.createElement(\n\t        'a',\n\t        { onClick: openViolatedScans.bind(null, patientName) },\n\t        '(',\n\t        numViolatedScans,\n\t        ' violated scans)'\n\t      );\n\t    }\n\t\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      cell,\n\t      '\\xA0',\n\t      violatedScans\n\t    );\n\t  }\n\t\n\t  /**\n\t   * Handles clicks on 'Number Of MincInserted' cells\n\t   *\n\t   * @param {string} dccid - dccid\n\t   * @param {object} e - event info\n\t   */\n\t  function handleClick(dccid, e) {\n\t    loris.loadFilteredMenuClickHandler('imaging_browser/', {\n\t      DCCID: dccid\n\t    })(e);\n\t  }\n\t\n\t  /**\n\t   * Opens MRI Violations for when there are violated scans\n\t   *\n\t   * @param {string} patientName - Patient name of the form PSCID_DCCID_VisitLabel\n\t   * @param {object} e - event info\n\t   */\n\t  function openViolatedScans(patientName, e) {\n\t    loris.loadFilteredMenuClickHandler('mri_violations/', {\n\t      PatientName: patientName\n\t    })(e);\n\t  }\n\t\n\t  return React.createElement(\n\t    'td',\n\t    { style: cellStyle },\n\t    cell\n\t  );\n\t}\n\t\n\texports.default = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/imaging_uploader/js/index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8c11c8c10bff5349ad6","/* global ReactDOM */\n\nimport ImagingUploader from './ImagingUploader';\n\n/**\n * Render imaging_uploader on page load\n */\n$(function() {\n  const imagingUploader = (\n    <div className=\"page-imaging-uploader\">\n      <ImagingUploader\n        Module=\"imaging_uploader\"\n        DataURL={loris.BaseURL + \"/imaging_uploader/?format=json\"}\n      />\n    </div>\n  );\n\n  ReactDOM.render(imagingUploader, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/index.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/**\n * Allows to dynamically render vertical tabs corresponding to tab panes.\n */\n\nclass VerticalTabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <div className=\"tabbable col-md-3 col-sm-3\">\n          <ul className=\"nav nav-pills nav-stacked\" role=\"tablist\" style={tabStyle}>\n            {tabs}\n          </ul>\n        </div>\n        <div className=\"tab-content col-md-9 col-sm-9\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nVerticalTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nVerticalTabs.defaultProps = {\n  onTabChange: function() {},\n  // Set updateURL to default to true but allow for change\n  // Nested tabs should set this variable to false\n  updateURL: true\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  VerticalTabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n    if (key) {\n      filter[key] = {};\n      if (value) {     // all defined/non-null values must have some length, else empty string\n        filter[key].value = Object.keys(value).length > 0 ? value : '';\n      } else {         // null and undefined handled here\n        filter[key].value = '';\n      }\n      filter[key].exactMatch = (type === \"SelectElement\" || type === \"select\");\n    }\n    if (filter && key && value === '') {\n      delete filter[key];\n    }\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure key is of string type and value is of string or object type\n    // before sending them to querystring\n    if (typeof fieldName !== 'string' ||\n        (typeof fieldValue !== 'string' && typeof fieldValue !== 'object')) {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, formElements[fieldName].type);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","import FilterForm from 'FilterForm';\nimport {Tabs, TabPane} from 'Tabs';\n\nimport LogPanel from './LogPanel';\nimport UploadForm from './UploadForm';\nimport formatColumn from './columnFormatter';\n\nclass ImagingUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      filter: {}\n    };\n\n    // Bind component instance to custom methods\n    this.fetchData = this.fetchData.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /**\n   * Retrive data from the provided URL and save it in state\n   * Additionaly add hiddenHeaders to global loris vairable\n   * for easy access by columnFormatter.\n   */\n  fetchData() {\n    $.ajax(this.props.DataURL, {\n      method: \"GET\",\n      dataType: 'json',\n      success: function(data) {\n        this.setState({\n          Data: data,\n          isLoaded: true\n        });\n      }.bind(this),\n      error: function(error) {\n        console.error(error);\n      }\n    });\n  }\n\n  updateFilter(filter) {\n    this.setState({filter});\n  }\n\n  resetFilters() {\n    this.imagingUploaderFilter.clearFilter();\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    const tabList = [\n      {id: \"browse\", label: \"Browse\"},\n      {id: \"upload\", label: \"Upload\"}\n    ];\n\n    const filterRef = function(f) {\n      this.imagingUploaderFilter = f;\n    }.bind(this);\n\n    return (\n      <Tabs tabs={tabList} defaultTab=\"browse\" updateURL={true}>\n        <TabPane TabId={tabList[0].id}>\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <FilterForm\n                Module=\"imaging_uploader\"\n                name=\"imaging_filter\"\n                id=\"imaging_filter\"\n                ref={filterRef}\n                onUpdate={this.updateFilter}\n                filter={this.state.filter}\n              >\n                <TextboxElement {... this.state.Data.form.candID} />\n                <TextboxElement {... this.state.Data.form.pSCID} />\n                <SelectElement {... this.state.Data.form.visitLabel} />\n                <ButtonElement type=\"reset\" label=\"Clear Filters\" onUserInput={this.resetFilters}/>\n              </FilterForm>\n            </div>\n            <div className=\"col-md-7\">\n              <LogPanel />\n            </div>\n          </div>\n          <div id=\"mri_upload_table\">\n            <StaticDataTable\n              Data={this.state.Data.Data}\n              Headers={this.state.Data.Headers}\n              getFormattedCell={formatColumn}\n              Filter={this.state.filter}\n            />\n          </div>\n        </TabPane>\n        <TabPane TabId={tabList[1].id}>\n          <UploadForm\n            form={this.state.Data.form}\n            mriList={this.state.Data.mriList}\n            maxUploadSize={this.state.Data.maxUploadSize}\n          />\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nImagingUploader.propTypes = {};\nImagingUploader.defaultProps = {};\n\nexport default ImagingUploader;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/ImagingUploader.js","/* global UploadProgress */\n\nimport Panel from 'Panel';\n\n/**\n * Log Panel Component\n *\n * Panel component that displays logs for a selected MRI upload whether it is\n * in progress or already completed or failed.\n *\n * @author Alex Ilea\n * @version 1.0.0\n * @since 2017/04/01\n *\n */\nclass LogPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logText: \"<select a row in the table below to view the upload logs>\",\n      logType: \"summary\"\n    };\n\n    this.initHelper = this.initHelper.bind(this);\n    this.onLogTypeChange = this.onLogTypeChange.bind(this);\n    this.setServerPolling = this.setServerPolling.bind(this);\n    this.monitorProgress = this.monitorProgress.bind(this);\n  }\n\n  componentDidMount() {\n    this.initHelper();\n  }\n\n  initHelper() {\n    const uploadProgress = new UploadProgress();\n    this.uploadProgress = uploadProgress;\n\n    $('#mri_upload_table').on('click', 'tbody tr', function(event) {\n      // Stop server polling if any was taking place\n      if (uploadProgress.getUploadRow() !== null) {\n        $(uploadProgress.getUploadRow()).css('background-color', 'white');\n        this.setServerPolling(false);\n      }\n\n      // If user clicked on the same row, it is interpreted as a de-selection:\n      // deselect row and set log text to 'nothing selected'\n      if (event.currentTarget === uploadProgress.getUploadRow()) {\n        uploadProgress.setUploadRow(null);\n        uploadProgress.setProgressFromServer(null);\n        this.setState({\n          logText: '<select a row in the table below to view the upload logs>'\n        });\n        return;\n      }\n\n      uploadProgress.setUploadRow(event.currentTarget);\n      $(event.currentTarget).css('background-color', '#EFEFFB');\n      this.monitorProgress(this.state.logType);\n    }.bind(this));\n  }\n\n  /**\n   * Monitors the progress of an MRI pipeline run on the server by repeatedly\n   * issuing POST requests for this information at regular intervals.\n   * As soon as the server indicates that the pipeline has finished running, polling\n   * will end.\n   *\n   * @param {string} logType - summary or details\n   */\n  monitorProgress(logType) {\n    const summary = (logType === \"summary\");\n    const uploadProgress = this.uploadProgress;\n    const uploadId = uploadProgress.getUploadId();\n\n    // If no row was selected\n    if (!uploadId) {\n      return;\n    }\n\n    $.post(loris.BaseURL + \"/imaging_uploader/ajax/getUploadSummary.php\", {\n      uploadId: uploadId,\n      summary: summary\n    }, function(data) {\n      uploadProgress.setProgressFromServer(data);\n      this.setState({logText: uploadProgress.getProgressText()});\n      // If the pipeline is still running, start polling\n      // If the pipeline is not running, end the polling (if any was started)\n      this.setServerPolling(\n        uploadProgress.getPipelineStatus() === UploadProgress.PIPELINE_STATUS_RUNNING\n      );\n    }.bind(this));  // post call\n  }\n\n  /**\n   * Starts/stops polling on the server.\n   * @param {bool} poll - pool boolean\n   */\n  setServerPolling(poll) {\n    const uploadProgress = this.uploadProgress;\n\n    if (poll) {\n      // START POLLING\n      // If there were no POST requests being issued, start issuing some.\n      if (!this.setServerPolling.getSummaryInterval) {\n        this.setServerPolling.getSummaryInterval = setInterval(\n          this.monitorProgress, 5000\n        );\n      }\n      // If there were no updates to the string of dots, start updating\n      if (!this.setServerPolling.dotUpdateInterval) {\n        this.setServerPolling.dotUpdateInterval = setInterval(function() {\n          uploadProgress.updateDots();\n          this.setState({\n            logText: uploadProgress.getProgressText()\n          });\n        }, 3000);\n      }\n      // If there were no updates to the animated chars, start updating\n      if (!this.setServerPolling.animatedCharInterval) {\n        this.setServerPolling.animatedCharInterval = setInterval(function() {\n          uploadProgress.updateAnimatedCharIndex();\n          this.setState({\n            logText: uploadProgress.getProgressText()\n          });\n        }, 250);\n      }\n    } else {\n      // STOP POLLING\n      // Stop issuing POST requests (if any polling was taking place)\n      if (this.setServerPolling.getSummaryInterval) {\n        clearInterval(this.setServerPolling.getSummaryInterval);\n        this.setServerPolling.getSummaryInterval = null;\n      }\n      // Stop updating the series of dots string (if such an update was going on)\n      if (this.setServerPolling.dotUpdateInterval) {\n        clearInterval(this.setServerPolling.dotUpdateInterval);\n        this.setServerPolling.dotUpdateInterval = null;\n      }\n      // Stop updating the animated char (if such an update was going on)\n      if (this.setServerPolling.animatedCharInterval) {\n        clearInterval(this.setServerPolling.animatedCharInterval);\n        this.setServerPolling.animatedCharInterval = null;\n      }\n    }\n  }\n\n  onLogTypeChange(name, value) {\n    // Update log box\n    this.monitorProgress(value);\n    this.setState({logType: value});\n  }\n\n  render() {\n    const logTypes = {\n      summary: 'Summary',\n      detailed: 'Detailed'\n    };\n\n    return (\n      <Panel id=\"log_panel\" title=\"Log Viewer\">\n        <FormElement name=\"log_form\">\n          <SelectElement\n            name=\"LogType\"\n            label=\"Logs to display\"\n            options={logTypes}\n            onUserInput={this.onLogTypeChange}\n            value={this.state.logType}\n            emptyOption={false}\n          />\n          <TextareaElement\n            name=\"UploadLogs\"\n            disabled={true}\n            id=\"mri_upload_logs\"\n            value={this.state.logText}\n            rows={6}\n          />\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nLogPanel.propTypes = {};\nLogPanel.defaultProps = {};\n\nexport default LogPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/LogPanel.js","import ProgressBar from 'ProgressBar';\n\n/**\n * Imaging Upload Form\n *\n * Form component allowing to upload MRI images to LORIS\n *\n * @author Alex Ilea\n * @author Victoria Foing\n * @version 1.0.0\n * @since 2017/04/01\n *\n */\nclass UploadForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const form = JSON.parse(JSON.stringify(this.props.form));\n\n    this.state = {\n      formData: {},\n      form: form,\n      hasError: {},\n      errorMessage: {},\n      uploadProgress: -1\n    };\n\n    this.onFormChange = this.onFormChange.bind(this);\n    this.getDisabledStatus = this.getDisabledStatus.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  componentDidMount() {\n    // Disable fields on initial load\n    this.onFormChange(this.state.form.IsPhantom.name, null);\n  }\n\n  /*\n   Updates values in formData\n   Deletes CandID, PSCID, and VisitLabel values if Phantom Scans is set to No\n   */\n  onFormChange(field, value) {\n    if (!field) return;\n\n    const form = JSON.parse(JSON.stringify(this.state.form));\n    const formData = Object.assign({}, this.state.formData);\n\n    if (field === 'IsPhantom') {\n      if (value !== 'N') {\n        delete formData.candID;\n        delete formData.pSCID;\n        delete formData.visitLabel;\n      }\n    }\n\n    formData[field] = value;\n\n    this.setState({\n      form: form,\n      formData: formData\n    });\n  }\n\n  /*\n   Returns false if Phantom Scans is set to No, and true otherwise\n   Result disables the element that calls the function\n   */\n  getDisabledStatus(phantomScans) {\n    if (phantomScans === 'N') {\n      return false;\n    }\n    return true;\n  }\n\n  submitForm() {\n    // Validate required fields\n    const data = this.state.formData;\n\n    if (!data.mriFile || !data.IsPhantom) {\n      return;\n    }\n\n    const fileName = data.mriFile.name;\n    if (data.IsPhantom === 'N') {\n      if (!data.candID || !data.pSCID || !data.visitLabel) {\n        return;\n      }\n      // Make sure file follows PSCID_CandID_VL[_*].zip|.tgz|.tar.gz format\n      const pcv = data.pSCID + '_' + data.candID + '_' + data.visitLabel;\n      const pcvu = pcv + '_';\n      const properName = new RegExp(\"^\" + pcv + \".(zip|tgz|tar.gz)\");\n      const properNameExt = new RegExp(\"^\" + pcvu + \".*(.(zip|tgz|tar.gz))\");\n      if (!fileName.match(properName) && !fileName.match(properNameExt)) {\n        swal({\n          title: \"Filename does not match other fields!\",\n          text: \"Filename and values in the PSCID, CandID \" +\n          \"and Visit Label fields of the form do not match. Please \" +\n          \"verify that the information entered in the \" +\n          \"fields or the filename are correct.\",\n          type: \"error\",\n          confirmButtonText: \"OK\"\n        });\n        let fieldMsg = \"Field does not match the filename!\";\n\n        let errorMessage = {\n          mriFile: \"Filename does not match other fields!\",\n          candID: undefined,\n          pSCID: undefined,\n          visitLabel: undefined\n        };\n\n        let hasError = {\n          mriFile: true,\n          candID: false,\n          pSCID: false,\n          visitLabel: false\n        };\n\n        // check filename fields individually to decide\n        // which fields to apply error message\n        // use limit of 2 to avoid splitting the visit label\n        let fileNameParts = fileName.split('_', 2);\n        if (data.pSCID !== fileNameParts[0]) {\n          errorMessage.pSCID = fieldMsg;\n          hasError.pSCID = true;\n        }\n\n        if (data.candID !== fileNameParts[1]) {\n          errorMessage.candID = fieldMsg;\n          hasError.candID = true;\n        }\n\n        // offset for visit label is size of the two parts plus 2 _'s\n        let visitLabelOffset = fileNameParts[0].length + fileNameParts[1].length + 2;\n        let fileNameRemains = fileName.substr(visitLabelOffset);\n        // only check that this part of the filename begins with\n        // the field, last part of file name includes optional\n        // specifiers + file extension\n        if (fileNameRemains.indexOf(data.visitLabel) !== 0) {\n          errorMessage.visitLabel = fieldMsg;\n          hasError.visitLabel = true;\n        }\n\n        this.setState({errorMessage, hasError});\n        return;\n      }\n    }\n\n    // Checks if a file with a given fileName has already been uploaded\n    const mriFile = this.props.mriList.find(\n      mriFile => mriFile.fileName.indexOf(fileName) > -1\n    );\n\n    // New File\n    if (!mriFile) {\n      this.uploadFile();\n      return;\n    }\n\n    // File uploaded and completed mri pipeline\n    if (mriFile.status === \"Success\") {\n      swal({\n        title: \"File already exists!\",\n        text: \"A file with this name has already successfully passed the MRI pipeline!\\n\",\n        type: \"error\",\n        confirmButtonText: 'OK'\n      });\n      return;\n    }\n\n    // File in the middle of insertion pipeline\n    if (mriFile.status === \"In Progress...\") {\n      swal({\n        title: \"File is currently processing!\",\n        text: \"A file with this name is currently going through the MRI pipeline!\\n\",\n        type: \"error\",\n        confirmButtonText: 'OK'\n      });\n      return;\n    }\n\n    // File uploaded but failed during mri pipeline\n    if (mriFile.status === \"Failure\") {\n      swal({\n        title: \"Are you sure?\",\n        text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes, I am sure!',\n        cancelButtonText: \"No, cancel it!\"\n      }, function(isConfirm) {\n        if (isConfirm) {\n          this.uploadFile(true);\n        } else {\n          swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n        }\n      }.bind(this));\n    }\n\n    // Pipeline has not been triggered yet\n    if (mriFile.status === \"Not Started\") {\n      swal({\n        title: \"Are you sure?\",\n        text: \"A file with this name has been uploaded but has not yet started the MRI pipeline.\" +\n          \"\\n Would you like to override the existing file?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes, I am sure!',\n        cancelButtonText: 'No, cancel it!'\n      }, function(isConfirm) {\n        if (isConfirm) {\n          this.uploadFile(true);\n        } else {\n          swal(\"Cancelled\", \"Your upload has been cancelled.\", \"error\");\n        }\n      }.bind(this));\n    }\n\n    return;\n  }\n\n  /*\n   Uploads file to the server, listening to the progress\n   in order to get the percentage uploaded as value for the progress bar\n   */\n  uploadFile(overwriteFile) {\n    const formData = this.state.formData;\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n    formObj.append(\"fire_away\", \"Upload\");\n    if (overwriteFile) {\n      formObj.append(\"overwrite\", true);\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + \"/imaging_uploader/\",\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        const xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n          if (evt.lengthComputable) {\n            const percentage = Math.round((evt.loaded / evt.total) * 100);\n            this.setState({uploadProgress: percentage});\n          }\n        }.bind(this), false);\n        return xhr;\n      }.bind(this),\n      // Upon successful upload:\n      // - Resets errorMessage and hasError so no errors are displayed on form\n      // - Displays pop up window with success message\n      // - Returns to Browse tab\n      success: data => {\n        let errorMessage = this.state.errorMessage;\n        let hasError = this.state.hasError;\n        for (let i in errorMessage) {\n          if (errorMessage.hasOwnProperty(i)) {\n            errorMessage[i] = \"\";\n            hasError[i] = false;\n          }\n        }\n        this.setState({errorMessage: errorMessage, hasError: hasError});\n        swal({\n          title: \"Upload Successful!\",\n          type: \"success\"\n        }, function() {\n          window.location.assign(loris.BaseURL + \"/imaging_uploader/\");\n        });\n      },\n      // Upon errors in upload:\n      // - Displays pop up window with submission error message\n      // - Updates errorMessage and hasError so relevant errors are displayed on form\n      // - Returns to Upload tab\n      error: (error, textStatus, errorThrown) => {\n        swal({\n          title: \"Submission error!\",\n          type: \"error\"\n        });\n        let errorMessage = this.state.errorMessage;\n        let hasError = this.state.hasError;\n        errorMessage = (error.responseJSON || {}).errors || 'Submission error!';\n        for (let i in errorMessage) {\n          if (errorMessage.hasOwnProperty(i)) {\n            errorMessage[i] = errorMessage[i].toString();\n            if (errorMessage[i].length) {\n              hasError[i] = true;\n            } else {\n              hasError[i] = false;\n            }\n          }\n        }\n        this.setState({uploadProgress: -1, errorMessage: errorMessage, hasError: hasError});\n      }\n    });\n  }\n\n  render() {\n    // Bind form elements to formData\n    const form = this.state.form;\n    form.IsPhantom.value = this.state.formData.IsPhantom;\n    form.candID.value = this.state.formData.candID;\n    form.pSCID.value = this.state.formData.pSCID;\n    form.visitLabel.value = this.state.formData.visitLabel;\n    form.mriFile.value = this.state.formData.mriFile;\n\n    // Hide button when progress bar is shown\n    const btnClass = (\n      (this.state.uploadProgress > -1) ? \"btn btn-primary hide\" : undefined\n    );\n\n    const notes = (\n        <span>\n          File cannot exceed {this.props.maxUploadSize}<br/>\n          File must be of type .tgz or tar.gz or .zip<br/>\n          For files that are not Phantom Scans, file name must begin with\n          <b> [PSCID]_[CandID]_[Visit Label]</b><br/>\n          For example, for CandID <i>100000</i>, PSCID <i>ABC123</i>, and\n          Visit Label <i>V1</i> the file name should be prefixed by:\n          <b> ABC123_100000_V1</b><br/>\n        </span>\n    );\n\n    // Returns individual form elements\n    // For CandID, PSCID, and Visit Label, disabled and required\n    // are updated depending on Phantom Scan value\n    // For all elements, hasError and errorMessage\n    // are updated depending on what values are submitted\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <h3>Upload an imaging scan</h3>\n          <br/>\n          <FormElement\n            name=\"upload_form\"\n            fileUpload={true}\n          >\n            <SelectElement\n              name=\"IsPhantom\"\n              label=\"Phantom Scans\"\n              options={this.props.form.IsPhantom.options}\n              onUserInput={this.onFormChange}\n              required={true}\n              hasError={this.state.hasError.IsPhantom}\n              errorMessage={this.state.errorMessage.IsPhantom}\n              value={this.state.formData.IsPhantom}\n            />\n            <TextboxElement\n              name=\"candID\"\n              label=\"CandID\"\n              onUserInput={this.onFormChange}\n              disabled={this.getDisabledStatus(this.state.formData.IsPhantom)}\n              required={!this.getDisabledStatus(this.state.formData.IsPhantom)}\n              hasError={this.state.hasError.candID}\n              errorMessage={this.state.errorMessage.candID}\n              value={this.state.formData.candID}\n            />\n            <TextboxElement\n              name=\"pSCID\"\n              label=\"PSCID\"\n              onUserInput={this.onFormChange}\n              disabled={this.getDisabledStatus(this.state.formData.IsPhantom)}\n              required={!this.getDisabledStatus(this.state.formData.IsPhantom)}\n              hasError={this.state.hasError.pSCID}\n              errorMessage={this.state.errorMessage.pSCID}\n              value={this.state.formData.pSCID}\n            />\n            <SelectElement\n              name=\"visitLabel\"\n              label=\"Visit Label\"\n              options={this.props.form.visitLabel.options}\n              onUserInput={this.onFormChange}\n              disabled={this.getDisabledStatus(this.state.formData.IsPhantom)}\n              required={!this.getDisabledStatus(this.state.formData.IsPhantom)}\n              hasError={this.state.hasError.visitLabel}\n              errorMessage={this.state.errorMessage.visitLabel}\n              value={this.state.formData.visitLabel}\n            />\n            <FileElement\n              name=\"mriFile\"\n              label=\"File to Upload\"\n              onUserInput={this.onFormChange}\n              required={true}\n              hasError={this.state.hasError.mriFile}\n              errorMessage={this.state.errorMessage.mriFile}\n              value={this.state.formData.mriFile}\n            />\n            <StaticElement\n              label=\"Notes\"\n              text={notes}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-9 col-sm-offset-3\">\n                <ProgressBar value={this.state.uploadProgress}/>\n              </div>\n            </div>\n            <ButtonElement\n              onUserInput={this.submitForm}\n              buttonClass={btnClass}\n            />\n          </FormElement>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadForm.propTypes = {};\nUploadForm.defaultProps = {};\n\nexport default UploadForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/UploadForm.js","/**\n * React ProgressBar.\n *\n * Updates UI automatically when passed a progress value between 0 and 100.\n * To hide progress bar before/after upload, set value to -1.\n *\n * Note: This component relies on Bootstrap 3 progress-bar classes\n * (http://getbootstrap.com/components/#progress)\n */\nclass ProgressBar extends React.Component {\n  render() {\n    const progressStyle = {\n      display: (this.props.value < 0 ? 'none' : 'block'),\n      backgroundColor: '#d3d3d3',\n      height: '30px',\n      position: 'relative'\n    };\n\n    const labelStyle = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1000,\n      width: '100%',\n      color: '#fff',\n      textAlign: 'center',\n      lineHeight: '30px',\n      fontWeight: '600'\n    };\n\n    return (\n      <div className=\"progress\" style={progressStyle}>\n        <div\n          className=\"progress-bar progress-bar-striped active\"\n          role=\"progressbar\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          aria-valuenow={this.props.value}\n          style={{width: (this.props.value + '%')}}\n        >\n        </div>\n        <span style={labelStyle}>{this.props.value}%</span>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: React.PropTypes.number\n};\nProgressBar.defaultProps = {\n  value: 0\n};\n\nexport default ProgressBar;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/ProgressBar.js","/* exported formatColumn */\n\nloris.hiddenHeaders = ['PatientName'];\n\n/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  const row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  // Default cell style\n  const cellStyle = {\n    whiteSpace: 'nowrap'\n  };\n\n  if (column === 'Progress') {\n    if (cell === 'Failure') {\n      cellStyle.color = '#fff';\n      return (\n        <td className=\"label-danger\" style={cellStyle}>\n          {cell}\n        </td>\n      );\n    }\n\n    if (cell === 'In Progress...') {\n      cellStyle.color = '#fff';\n      return (\n        <td className=\"label-warning\" style={cellStyle}>\n          {cell}\n        </td>\n      );\n    }\n\n    const created = row['Number Of MincCreated'];\n    const inserted = row['Number Of MincInserted'];\n    return (\n      <td style={cellStyle}>\n        {cell} ({inserted} out of {created})\n      </td>\n    );\n  }\n\n  if (column === 'Tarchive Info') {\n    if (!cell || cell === \"0\") {\n      return (<td></td>);\n    }\n\n    const url = loris.BaseURL + '/dicom_archive/viewDetails/?tarchiveID=' + cell;\n    return (\n      <td style={cellStyle}>\n        <a href={url}>View Details</a>\n      </td>\n    );\n  }\n\n  if (column === 'Number Of MincInserted') {\n    if (cell > 0) {\n      return (\n        <td style={cellStyle}>\n          <a onClick={handleClick.bind(null, row.CandID)}>{cell}</a>\n        </td>\n      );\n    }\n  }\n\n  if (column === 'Number Of MincCreated') {\n    let violatedScans;\n    if (row['Number Of MincCreated'] - row['Number Of MincInserted'] > 0) {\n      let numViolatedScans =\n           row['Number Of MincCreated'] - row['Number Of MincInserted'];\n\n      let patientName = row.PatientName;\n      violatedScans = <a onClick={openViolatedScans.bind(null, patientName)}>\n         ({numViolatedScans} violated scans)\n       </a>;\n    }\n\n    return (\n         <td style={cellStyle}>\n             {cell}\n             &nbsp;\n             {violatedScans}\n         </td>\n    );\n  }\n\n  /**\n   * Handles clicks on 'Number Of MincInserted' cells\n   *\n   * @param {string} dccid - dccid\n   * @param {object} e - event info\n   */\n  function handleClick(dccid, e) {\n    loris.loadFilteredMenuClickHandler('imaging_browser/', {\n      DCCID: dccid\n    })(e);\n  }\n\n    /**\n     * Opens MRI Violations for when there are violated scans\n     *\n     * @param {string} patientName - Patient name of the form PSCID_DCCID_VisitLabel\n     * @param {object} e - event info\n     */\n  function openViolatedScans(patientName, e) {\n    loris.loadFilteredMenuClickHandler('mri_violations/', {\n      PatientName: patientName\n    })(e);\n  }\n\n  return (<td style={cellStyle}>{cell}</td>);\n}\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/columnFormatter.js"],"sourceRoot":""}