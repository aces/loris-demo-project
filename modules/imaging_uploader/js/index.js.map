{"version":3,"sources":["webpack:///modules/imaging_uploader/js/index.js","webpack:///webpack/bootstrap 2cbc61aff34bad956ada?d79a******************************","webpack:///./modules/imaging_uploader/jsx/index.js","webpack:///./jsx/Panel.js?b4c8**","webpack:///./jsx/Tabs.js?82f5*","webpack:///./jsx/FilterForm.js?52c5*","webpack:///./modules/imaging_uploader/jsx/ImagingUploader.js","webpack:///./modules/imaging_uploader/jsx/LogPanel.js","webpack:///./modules/imaging_uploader/jsx/UploadForm.js","webpack:///./jsx/ProgressBar.js","webpack:///./modules/imaging_uploader/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_ImagingUploader","_ImagingUploader2","$","imagingUploader","React","createElement","className","Module","DataURL","loris","BaseURL","ReactDOM","render","document","getElementById","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Panel","_React$Component","this","_this","getPrototypeOf","state","collapsed","initCollapsed","panelClass","toggleCollapsed","bind","setState","glyphClass","panelHeading","title","onClick","data-toggle","data-target","style","cursor","role","height","children","Component","propTypes","PropTypes","string","defaultProps","Tabs","hash","window","location","activeTab","updateURL","substr","defaultTab","tabs","handleClick","getTabs","getTabPanes","tabId","e","onTabChange","scrollDistance","scrollTop","map","tab","tabClass","href","tabID","label","tabPanes","Children","child","cloneElement","tabStyle","marginLeft","marginBottom","array","isRequired","bool","TabPane","_React$Component2","apply","arguments","classList","TabId","Title","_Panel","_Panel2","FilterForm","clearFilter","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","filter","keys","forEach","filterKey","exactMatch","onUpdate","clear","formChildren","isValidElement","type","onUserInput","callbackFunc","callbackName","name","elementName","displayName","queryFieldName","filterValue","push","JSON","parse","stringify","fieldName","fieldValue","set","formElements","FormElement","console","warn","object","func","_FilterForm","_FilterForm2","_Tabs","_LogPanel","_LogPanel2","_UploadForm","_UploadForm2","_columnFormatter","_columnFormatter2","ImagingUploader","isLoaded","fetchData","updateFilter","ajax","method","dataType","success","data","Data","error","tabList","TextboxElement","form","candID","pSCID","SelectElement","visitLabel","ButtonElement","StaticDataTable","Headers","getFormattedCell","Filter","mriList","maxUploadSize","LogPanel","logText","logType","initHelper","onLogTypeChange","setServerPolling","monitorProgress","uploadProgress","UploadProgress","on","event","getUploadRow","css","currentTarget","setUploadRow","setProgressFromServer","summary","uploadId","getUploadId","post","getProgressText","getPipelineStatus","PIPELINE_STATUS_RUNNING","poll","getSummaryInterval","setInterval","dotUpdateInterval","updateDots","animatedCharInterval","updateAnimatedCharIndex","clearInterval","logTypes","detailed","options","emptyOption","TextareaElement","disabled","rows","_ProgressBar","_ProgressBar2","UploadForm","IsPhantom","required","mri_file","formData","onFormChange","submitForm","uploadFile","field","assign","fileName","mriFile","find","indexOf","status","swal","text","confirmButtonText","showCancelButton","cancelButtonText","isConfirm","overwriteFile","formObj","FormData","append","url","cache","contentType","processData","xhr","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentage","Math","round","total","errMessage","replace","open","write","close","err","btnClass","undefined","notes","fileUpload","StaticElement","buttonClass","ProgressBar","progressStyle","display","backgroundColor","position","labelStyle","top","left","zIndex","width","color","textAlign","lineHeight","fontWeight","aria-valuemin","aria-valuemax","aria-valuenow","number","formatColumn","column","cell","rowData","rowHeaders","dccid","loadFilteredMenuClickHandler","DCCID","openViolatedScans","patientName","PatientName","hiddenHeaders","row","header","index","cellStyle","whiteSpace","created","inserted","CandID","violatedScans","numViolatedScans"],"mappings":"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","file":"./modules/imaging_uploader/js/index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _ImagingUploader = __webpack_require__(15);\n\t\n\tvar _ImagingUploader2 = _interopRequireDefault(_ImagingUploader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Render imaging_uploader on page load\n\t */\n\t$(function () {\n\t  var imagingUploader = React.createElement(\n\t    \"div\",\n\t    { className: \"page-imaging-uploader\" },\n\t    React.createElement(_ImagingUploader2.default, {\n\t      Module: \"imaging_uploader\",\n\t      DataURL: loris.BaseURL + \"/imaging_uploader/?format=json\"\n\t    })\n\t  );\n\t\n\t  ReactDOM.render(imagingUploader, document.getElementById(\"lorisworkspace\"));\n\t}); /* global ReactDOM */\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  updateURL: false\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component2) {\n\t  _inherits(TabPane, _React$Component2);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t\n\t      if (key && value) {\n\t        filter[key] = {};\n\t        filter[key].value = value;\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure both key/value are string before sending them to querystring\n\t      if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n/* 14 */,\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(13);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _Tabs = __webpack_require__(9);\n\t\n\tvar _LogPanel = __webpack_require__(16);\n\t\n\tvar _LogPanel2 = _interopRequireDefault(_LogPanel);\n\t\n\tvar _UploadForm = __webpack_require__(17);\n\t\n\tvar _UploadForm2 = _interopRequireDefault(_UploadForm);\n\t\n\tvar _columnFormatter = __webpack_require__(19);\n\t\n\tvar _columnFormatter2 = _interopRequireDefault(_columnFormatter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ImagingUploader = function (_React$Component) {\n\t  _inherits(ImagingUploader, _React$Component);\n\t\n\t  function ImagingUploader(props) {\n\t    _classCallCheck(this, ImagingUploader);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ImagingUploader.__proto__ || Object.getPrototypeOf(ImagingUploader)).call(this, props));\n\t\n\t    _this.state = {\n\t      isLoaded: false,\n\t      filter: {}\n\t    };\n\t\n\t    // Bind component instance to custom methods\n\t    _this.fetchData = _this.fetchData.bind(_this);\n\t    _this.updateFilter = _this.updateFilter.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ImagingUploader, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchData();\n\t    }\n\t\n\t    /**\n\t     * Retrive data from the provided URL and save it in state\n\t     * Additionaly add hiddenHeaders to global loris vairable\n\t     * for easy access by columnFormatter.\n\t     */\n\t\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData() {\n\t      $.ajax(this.props.DataURL, {\n\t        method: \"GET\",\n\t        dataType: 'json',\n\t        success: function (data) {\n\t          this.setState({\n\t            Data: data,\n\t            isLoaded: true\n\t          });\n\t        }.bind(this),\n\t        error: function error(_error) {\n\t          console.error(_error);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateFilter',\n\t    value: function updateFilter(filter) {\n\t      this.setState({ filter: filter });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var tabList = [{ id: \"browse\", label: \"Browse\" }, { id: \"upload\", label: \"Upload\" }];\n\t\n\t      return React.createElement(\n\t        _Tabs.Tabs,\n\t        { tabs: tabList, defaultTab: 'browse', updateURL: true },\n\t        React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[0].id },\n\t          React.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-5' },\n\t              React.createElement(\n\t                _FilterForm2.default,\n\t                {\n\t                  Module: 'imaging_uploader',\n\t                  name: 'imaging_filter',\n\t                  id: 'imaging_filter',\n\t                  onUpdate: this.updateFilter,\n\t                  filter: this.state.filter\n\t                },\n\t                React.createElement(TextboxElement, this.state.Data.form.candID),\n\t                React.createElement(TextboxElement, this.state.Data.form.pSCID),\n\t                React.createElement(SelectElement, this.state.Data.form.visitLabel),\n\t                React.createElement(ButtonElement, { type: 'reset', label: 'Clear Filters' })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'col-md-7' },\n\t              React.createElement(_LogPanel2.default, null)\n\t            )\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { id: 'mri_upload_table' },\n\t            React.createElement(StaticDataTable, {\n\t              Data: this.state.Data.Data,\n\t              Headers: this.state.Data.Headers,\n\t              getFormattedCell: _columnFormatter2.default,\n\t              Filter: this.state.filter\n\t            })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[1].id },\n\t          React.createElement(_UploadForm2.default, {\n\t            form: this.state.Data.form,\n\t            mriList: this.state.Data.mriList,\n\t            maxUploadSize: this.state.Data.maxUploadSize\n\t          })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ImagingUploader;\n\t}(React.Component);\n\t\n\tImagingUploader.propTypes = {};\n\tImagingUploader.defaultProps = {};\n\t\n\texports.default = ImagingUploader;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global UploadProgress */\n\t\n\t/**\n\t * Log Panel Component\n\t *\n\t * Panel component that displays logs for a selected MRI upload whether it is\n\t * in progress or already completed or failed.\n\t *\n\t * @author Alex Ilea\n\t * @version 1.0.0\n\t * @since 2017/04/01\n\t *\n\t */\n\tvar LogPanel = function (_React$Component) {\n\t  _inherits(LogPanel, _React$Component);\n\t\n\t  function LogPanel(props) {\n\t    _classCallCheck(this, LogPanel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LogPanel.__proto__ || Object.getPrototypeOf(LogPanel)).call(this, props));\n\t\n\t    _this.state = {\n\t      logText: \"<select a row in the table below to view the upload logs>\",\n\t      logType: \"summary\"\n\t    };\n\t\n\t    _this.initHelper = _this.initHelper.bind(_this);\n\t    _this.onLogTypeChange = _this.onLogTypeChange.bind(_this);\n\t    _this.setServerPolling = _this.setServerPolling.bind(_this);\n\t    _this.monitorProgress = _this.monitorProgress.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(LogPanel, [{\n\t    key: \"componentDidMount\",\n\t    value: function componentDidMount() {\n\t      this.initHelper();\n\t    }\n\t  }, {\n\t    key: \"initHelper\",\n\t    value: function initHelper() {\n\t      var uploadProgress = new UploadProgress();\n\t      this.uploadProgress = uploadProgress;\n\t\n\t      $('#mri_upload_table').on('click', 'tbody tr', function (event) {\n\t        // Stop server polling if any was taking place\n\t        if (uploadProgress.getUploadRow() !== null) {\n\t          $(uploadProgress.getUploadRow()).css('background-color', 'white');\n\t          this.setServerPolling(false);\n\t        }\n\t\n\t        // If user clicked on the same row, it is interpreted as a de-selection:\n\t        // deselect row and set log text to 'nothing selected'\n\t        if (event.currentTarget === uploadProgress.getUploadRow()) {\n\t          uploadProgress.setUploadRow(null);\n\t          uploadProgress.setProgressFromServer(null);\n\t          this.setState({\n\t            logText: '<select a row in the table below to view the upload logs>'\n\t          });\n\t          return;\n\t        }\n\t\n\t        uploadProgress.setUploadRow(event.currentTarget);\n\t        $(event.currentTarget).css('background-color', '#EFEFFB');\n\t        this.monitorProgress(this.state.logType);\n\t      }.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Monitors the progress of an MRI pipeline run on the server by repeatedly\n\t     * issuing POST requests for this information at regular intervals.\n\t     * As soon as the server indicates that the pipeline has finished running, polling\n\t     * will end.\n\t     *\n\t     * @param {string} logType - summary or details\n\t     */\n\t\n\t  }, {\n\t    key: \"monitorProgress\",\n\t    value: function monitorProgress(logType) {\n\t      var summary = logType === \"summary\";\n\t      var uploadProgress = this.uploadProgress;\n\t      var uploadId = uploadProgress.getUploadId();\n\t\n\t      // If no row was selected\n\t      if (!uploadId) {\n\t        return;\n\t      }\n\t\n\t      $.post(loris.BaseURL + \"/imaging_uploader/ajax/getUploadSummary.php\", {\n\t        uploadId: uploadId,\n\t        summary: summary\n\t      }, function (data) {\n\t        uploadProgress.setProgressFromServer(data);\n\t        this.setState({ logText: uploadProgress.getProgressText() });\n\t        // If the pipeline is still running, start polling\n\t        // If the pipeline is not running, end the polling (if any was started)\n\t        this.setServerPolling(uploadProgress.getPipelineStatus() === UploadProgress.PIPELINE_STATUS_RUNNING);\n\t      }.bind(this)); // post call\n\t    }\n\t\n\t    /**\n\t     * Starts/stops polling on the server.\n\t     * @param {bool} poll - pool boolean\n\t     */\n\t\n\t  }, {\n\t    key: \"setServerPolling\",\n\t    value: function setServerPolling(poll) {\n\t      var uploadProgress = this.uploadProgress;\n\t\n\t      if (poll) {\n\t        // START POLLING\n\t        // If there were no POST requests being issued, start issuing some.\n\t        if (!this.setServerPolling.getSummaryInterval) {\n\t          this.setServerPolling.getSummaryInterval = setInterval(this.monitorProgress, 5000);\n\t        }\n\t        // If there were no updates to the string of dots, start updating\n\t        if (!this.setServerPolling.dotUpdateInterval) {\n\t          this.setServerPolling.dotUpdateInterval = setInterval(function () {\n\t            uploadProgress.updateDots();\n\t            this.setState({\n\t              logText: uploadProgress.getProgressText()\n\t            });\n\t          }, 3000);\n\t        }\n\t        // If there were no updates to the animated chars, start updating\n\t        if (!this.setServerPolling.animatedCharInterval) {\n\t          this.setServerPolling.animatedCharInterval = setInterval(function () {\n\t            uploadProgress.updateAnimatedCharIndex();\n\t            this.setState({\n\t              logText: uploadProgress.getProgressText()\n\t            });\n\t          }, 250);\n\t        }\n\t      } else {\n\t        // STOP POLLING\n\t        // Stop issuing POST requests (if any polling was taking place)\n\t        if (this.setServerPolling.getSummaryInterval) {\n\t          clearInterval(this.setServerPolling.getSummaryInterval);\n\t          this.setServerPolling.getSummaryInterval = null;\n\t        }\n\t        // Stop updating the series of dots string (if such an update was going on)\n\t        if (this.setServerPolling.dotUpdateInterval) {\n\t          clearInterval(this.setServerPolling.dotUpdateInterval);\n\t          this.setServerPolling.dotUpdateInterval = null;\n\t        }\n\t        // Stop updating the animated char (if such an update was going on)\n\t        if (this.setServerPolling.animatedCharInterval) {\n\t          clearInterval(this.setServerPolling.animatedCharInterval);\n\t          this.setServerPolling.animatedCharInterval = null;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: \"onLogTypeChange\",\n\t    value: function onLogTypeChange(name, value) {\n\t      // Update log box\n\t      this.monitorProgress(value);\n\t      this.setState({ logType: value });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var logTypes = {\n\t        summary: 'Summary',\n\t        detailed: 'Detailed'\n\t      };\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        { id: \"log_panel\", title: \"Log Viewer\" },\n\t        React.createElement(\n\t          FormElement,\n\t          { name: \"log_form\" },\n\t          React.createElement(SelectElement, {\n\t            name: \"LogType\",\n\t            label: \"Logs to display\",\n\t            options: logTypes,\n\t            onUserInput: this.onLogTypeChange,\n\t            value: this.state.logType,\n\t            emptyOption: false\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: \"UploadLogs\",\n\t            disabled: true,\n\t            id: \"mri_upload_logs\",\n\t            value: this.state.logText,\n\t            rows: 6\n\t          })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return LogPanel;\n\t}(React.Component);\n\t\n\tLogPanel.propTypes = {};\n\tLogPanel.defaultProps = {};\n\t\n\texports.default = LogPanel;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _ProgressBar = __webpack_require__(18);\n\t\n\tvar _ProgressBar2 = _interopRequireDefault(_ProgressBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Imaging Upload Form\n\t *\n\t * Form component allowing to upload MRI images to LORIS\n\t *\n\t * @author Alex Ilea\n\t * @version 1.0.0\n\t * @since 2017/04/01\n\t *\n\t */\n\tvar UploadForm = function (_React$Component) {\n\t  _inherits(UploadForm, _React$Component);\n\t\n\t  function UploadForm(props) {\n\t    _classCallCheck(this, UploadForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (UploadForm.__proto__ || Object.getPrototypeOf(UploadForm)).call(this, props));\n\t\n\t    var form = JSON.parse(JSON.stringify(_this.props.form));\n\t    form.IsPhantom.required = true;\n\t    form.candID.required = true;\n\t    form.pSCID.required = true;\n\t    form.visitLabel.required = true;\n\t    form.mri_file.required = true;\n\t\n\t    _this.state = {\n\t      formData: {},\n\t      form: form,\n\t      uploadProgress: -1\n\t    };\n\t\n\t    _this.onFormChange = _this.onFormChange.bind(_this);\n\t    _this.submitForm = _this.submitForm.bind(_this);\n\t    _this.uploadFile = _this.uploadFile.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(UploadForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Disable fields on initial load\n\t      this.onFormChange(this.state.form.IsPhantom.name, null);\n\t    }\n\t  }, {\n\t    key: 'onFormChange',\n\t    value: function onFormChange(field, value) {\n\t      if (!field) return;\n\t\n\t      var form = JSON.parse(JSON.stringify(this.state.form));\n\t      var formData = Object.assign({}, this.state.formData);\n\t\n\t      if (field === 'IsPhantom') {\n\t        if (value === 'N') {\n\t          form.candID.disabled = false;\n\t          form.pSCID.disabled = false;\n\t          form.visitLabel.disabled = false;\n\t        } else {\n\t          form.candID.disabled = true;\n\t          form.pSCID.disabled = true;\n\t          form.visitLabel.disabled = true;\n\t          delete formData.candID;\n\t          delete formData.pSCID;\n\t          delete formData.visitLabel;\n\t        }\n\t      }\n\t\n\t      formData[field] = value;\n\t\n\t      this.setState({\n\t        form: form,\n\t        formData: formData\n\t      });\n\t    }\n\t  }, {\n\t    key: 'submitForm',\n\t    value: function submitForm() {\n\t      // Validate required fields\n\t      var data = this.state.formData;\n\t      if (!data.mri_file || !data.IsPhantom) {\n\t        return;\n\t      }\n\t\n\t      if (data.IsPhantom === 'N' && (!data.candID || !data.pSCID || !data.visitLabel)) {\n\t        return;\n\t      }\n\t\n\t      // Checks if a file with a given fileName has already been uploaded\n\t      var fileName = data.mri_file.name;\n\t      var mriFile = this.props.mriList.find(function (mriFile) {\n\t        return mriFile.fileName.indexOf(fileName) > -1;\n\t      });\n\t\n\t      // New File\n\t      if (!mriFile) {\n\t        this.uploadFile();\n\t        return;\n\t      }\n\t\n\t      // File uploaded and completed mri pipeline\n\t      if (mriFile.status === \"Success\") {\n\t        swal({\n\t          title: \"File already exists!\",\n\t          text: \"A file with this name has already successfully passed the MRI pipeline!\\n\",\n\t          type: \"error\",\n\t          confirmButtonText: 'OK'\n\t        });\n\t        return;\n\t      }\n\t\n\t      // File in the middle of insertion pipeline\n\t      if (mriFile.status === \"In Progress...\") {\n\t        swal({\n\t          title: \"File is currently processing!\",\n\t          text: \"A file with this name is currently going through the MRI pipeline!\\n\",\n\t          type: \"error\",\n\t          confirmButtonText: 'OK'\n\t        });\n\t        return;\n\t      }\n\t\n\t      // File uploaded but failed during mri pipeline\n\t      if (mriFile.status === \"Failure\") {\n\t        swal({\n\t          title: \"Are you sure?\",\n\t          text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Yes, I am sure!',\n\t          cancelButtonText: \"No, cancel it!\"\n\t        }, function (isConfirm) {\n\t          if (isConfirm) {\n\t            this.uploadFile(true);\n\t          } else {\n\t            swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n\t          }\n\t        }.bind(this));\n\t      }\n\t\n\t      // Pipeline has not been triggered yet\n\t      if (mriFile.status === \"Not Started\") {\n\t        swal({\n\t          title: \"Are you sure?\",\n\t          text: \"A file with this name has been uploaded but has not yet started the MRI pipeline.\" + \"\\n Would you like to override the existing file?\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Yes, I am sure!',\n\t          cancelButtonText: 'No, cancel it!'\n\t        }, function (isConfirm) {\n\t          if (isConfirm) {\n\t            this.uploadFile(true);\n\t          } else {\n\t            swal(\"Cancelled\", \"Your upload has been cancelled.\", \"error\");\n\t          }\n\t        }.bind(this));\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    /*\n\t     Uploads file to the server, listening to the progress\n\t     in order to get the percentage uploaded as value for the progress bar\n\t     */\n\t\n\t  }, {\n\t    key: 'uploadFile',\n\t    value: function uploadFile(overwriteFile) {\n\t      var formData = this.state.formData;\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t      formObj.append(\"fire_away\", \"Upload\");\n\t      if (overwriteFile) {\n\t        formObj.append(\"overwrite\", true);\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: loris.BaseURL + \"/imaging_uploader/\",\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          xhr.upload.addEventListener(\"progress\", function (evt) {\n\t            if (evt.lengthComputable) {\n\t              var percentage = Math.round(evt.loaded / evt.total * 100);\n\t              this.setState({ uploadProgress: percentage });\n\t            }\n\t          }.bind(this), false);\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function success(data) {\n\t          var errMessage = \"The following errors occured while \" + \"attempting to display this page:\";\n\t          // Last remaining part of the old module.\n\t          // Need to update to use proper AJAX request/response\n\t          if (data.indexOf(errMessage) > -1) {\n\t            data = data.replace('history.back()', 'location.reload()');\n\t            document.open();\n\t            document.write(data);\n\t            document.close();\n\t          } else {\n\t            // If no error is shown, assume \"success\" and redirect to main page\n\t            swal({\n\t              title: \"Upload Successful!\",\n\t              type: \"success\"\n\t            }, function () {\n\t              window.location.assign(loris.BaseURL + \"/imaging_uploader/\");\n\t            });\n\t          }\n\t        },\n\t        error: function (err) {\n\t          console.error(err);\n\t          this.setState({\n\t            uploadProgress: -1\n\t          });\n\t        }.bind(this)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Bind form elements to formData\n\t      var form = this.state.form;\n\t      form.IsPhantom.value = this.state.formData.IsPhantom;\n\t      form.candID.value = this.state.formData.candID;\n\t      form.pSCID.value = this.state.formData.pSCID;\n\t      form.visitLabel.value = this.state.formData.visitLabel;\n\t      form.mri_file.value = this.state.formData.mri_file;\n\t\n\t      // Hide button when progress bar is shown\n\t      var btnClass = this.state.uploadProgress > -1 ? \"btn btn-primary hide\" : undefined;\n\t\n\t      var notes = \"File name must be of type .tgz or tar.gz or .zip. \" + \"Uploads cannot exceed \" + this.props.maxUploadSize;\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-md-7' },\n\t          React.createElement(\n\t            'h3',\n\t            null,\n\t            'Upload an imaging scan'\n\t          ),\n\t          React.createElement('br', null),\n\t          React.createElement(\n\t            FormElement,\n\t            {\n\t              name: 'upload_form',\n\t              formElements: form,\n\t              fileUpload: true,\n\t              onUserInput: this.onFormChange\n\t            },\n\t            React.createElement(StaticElement, {\n\t              label: 'Notes',\n\t              text: notes\n\t            }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-sm-9 col-sm-offset-3' },\n\t                React.createElement(_ProgressBar2.default, { value: this.state.uploadProgress })\n\t              )\n\t            ),\n\t            React.createElement(ButtonElement, {\n\t              onUserInput: this.submitForm,\n\t              buttonClass: btnClass\n\t            })\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return UploadForm;\n\t}(React.Component);\n\t\n\tUploadForm.propTypes = {};\n\tUploadForm.defaultProps = {};\n\t\n\texports.default = UploadForm;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * React ProgressBar.\n\t *\n\t * Updates UI automatically when passed a progress value between 0 and 100.\n\t * To hide progress bar before/after upload, set value to -1.\n\t *\n\t * Note: This component relies on Bootstrap 3 progress-bar classes\n\t * (http://getbootstrap.com/components/#progress)\n\t */\n\tvar ProgressBar = function (_React$Component) {\n\t  _inherits(ProgressBar, _React$Component);\n\t\n\t  function ProgressBar() {\n\t    _classCallCheck(this, ProgressBar);\n\t\n\t    return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ProgressBar, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var progressStyle = {\n\t        display: this.props.value < 0 ? 'none' : 'block',\n\t        backgroundColor: '#d3d3d3',\n\t        height: '30px',\n\t        position: 'relative'\n\t      };\n\t\n\t      var labelStyle = {\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        zIndex: 1000,\n\t        width: '100%',\n\t        color: '#fff',\n\t        textAlign: 'center',\n\t        lineHeight: '30px',\n\t        fontWeight: '600'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'progress', style: progressStyle },\n\t        React.createElement('div', {\n\t          className: 'progress-bar progress-bar-striped active',\n\t          role: 'progressbar',\n\t          'aria-valuemin': '0',\n\t          'aria-valuemax': '100',\n\t          'aria-valuenow': this.props.value,\n\t          style: { width: this.props.value + '%' }\n\t        }),\n\t        React.createElement(\n\t          'span',\n\t          { style: labelStyle },\n\t          this.props.value,\n\t          '%'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ProgressBar;\n\t}(React.Component);\n\t\n\tProgressBar.propTypes = {\n\t  value: React.PropTypes.number\n\t};\n\tProgressBar.defaultProps = {\n\t  value: 0\n\t};\n\t\n\texports.default = ProgressBar;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/* exported formatColumn */\n\t\n\tloris.hiddenHeaders = ['PatientName'];\n\t\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  // If a column if set as hidden, don't display it\n\t  if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t    return null;\n\t  }\n\t\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t\n\t  // Default cell style\n\t  var cellStyle = {\n\t    whiteSpace: 'nowrap'\n\t  };\n\t\n\t  if (column === 'Progress') {\n\t    if (cell === 'Failure') {\n\t      cellStyle.color = '#fff';\n\t      return React.createElement(\n\t        'td',\n\t        { className: 'label-danger', style: cellStyle },\n\t        cell\n\t      );\n\t    }\n\t\n\t    if (cell === 'In Progress...') {\n\t      cellStyle.color = '#fff';\n\t      return React.createElement(\n\t        'td',\n\t        { className: 'label-warning', style: cellStyle },\n\t        cell\n\t      );\n\t    }\n\t\n\t    var created = row['Number Of MincCreated'];\n\t    var inserted = row['Number Of MincInserted'];\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      cell,\n\t      ' (',\n\t      inserted,\n\t      ' out of ',\n\t      created,\n\t      ')'\n\t    );\n\t  }\n\t\n\t  if (column === 'Tarchive Info') {\n\t    if (!cell || cell === \"0\") {\n\t      return React.createElement('td', null);\n\t    }\n\t\n\t    var url = loris.BaseURL + '/dicom_archive/viewDetails/?tarchiveID=' + cell;\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      React.createElement(\n\t        'a',\n\t        { href: url },\n\t        'View Details'\n\t      )\n\t    );\n\t  }\n\t\n\t  if (column === 'Number Of MincInserted') {\n\t    if (cell > 0) {\n\t      return React.createElement(\n\t        'td',\n\t        { style: cellStyle },\n\t        React.createElement(\n\t          'a',\n\t          { onClick: handleClick.bind(null, row.CandID) },\n\t          cell\n\t        )\n\t      );\n\t    }\n\t  }\n\t\n\t  if (column === 'Number Of MincCreated') {\n\t    var violatedScans = void 0;\n\t    if (row['Number Of MincCreated'] - row['Number Of MincInserted'] > 0) {\n\t      var numViolatedScans = row['Number Of MincCreated'] - row['Number Of MincInserted'];\n\t\n\t      var patientName = row.PatientName;\n\t      violatedScans = React.createElement(\n\t        'a',\n\t        { onClick: openViolatedScans.bind(null, patientName) },\n\t        '(',\n\t        numViolatedScans,\n\t        ' violated scans)'\n\t      );\n\t    }\n\t\n\t    return React.createElement(\n\t      'td',\n\t      { style: cellStyle },\n\t      cell,\n\t      '\\xA0',\n\t      violatedScans\n\t    );\n\t  }\n\t\n\t  /**\n\t   * Handles clicks on 'Number Of MincInserted' cells\n\t   *\n\t   * @param {string} dccid - dccid\n\t   * @param {object} e - event info\n\t   */\n\t  function handleClick(dccid, e) {\n\t    loris.loadFilteredMenuClickHandler('imaging_browser/', {\n\t      DCCID: dccid\n\t    })(e);\n\t  }\n\t\n\t  /**\n\t   * Opens MRI Violations for when there are violated scans\n\t   *\n\t   * @param {string} patientName - Patient name of the form PSCID_DCCID_VisitLabel\n\t   * @param {object} e - event info\n\t   */\n\t  function openViolatedScans(patientName, e) {\n\t    loris.loadFilteredMenuClickHandler('mri_violations/', {\n\t      PatientName: patientName\n\t    })(e);\n\t  }\n\t\n\t  return React.createElement(\n\t    'td',\n\t    { style: cellStyle },\n\t    cell\n\t  );\n\t}\n\t\n\texports.default = formatColumn;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// modules/imaging_uploader/js/index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2cbc61aff34bad956ada","/* global ReactDOM */\n\nimport ImagingUploader from './ImagingUploader';\n\n/**\n * Render imaging_uploader on page load\n */\n$(function() {\n  const imagingUploader = (\n    <div className=\"page-imaging-uploader\">\n      <ImagingUploader\n        Module=\"imaging_uploader\"\n        DataURL={loris.BaseURL + \"/imaging_uploader/?format=json\"}\n      />\n    </div>\n  );\n\n  ReactDOM.render(imagingUploader, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/index.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  updateURL: false\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n\n    if (key && value) {\n      filter[key] = {};\n      filter[key].value = value;\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure both key/value are string before sending them to querystring\n    if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","import FilterForm from 'FilterForm';\nimport {Tabs, TabPane} from 'Tabs';\n\nimport LogPanel from './LogPanel';\nimport UploadForm from './UploadForm';\nimport formatColumn from './columnFormatter';\n\nclass ImagingUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      filter: {}\n    };\n\n    // Bind component instance to custom methods\n    this.fetchData = this.fetchData.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /**\n   * Retrive data from the provided URL and save it in state\n   * Additionaly add hiddenHeaders to global loris vairable\n   * for easy access by columnFormatter.\n   */\n  fetchData() {\n    $.ajax(this.props.DataURL, {\n      method: \"GET\",\n      dataType: 'json',\n      success: function(data) {\n        this.setState({\n          Data: data,\n          isLoaded: true\n        });\n      }.bind(this),\n      error: function(error) {\n        console.error(error);\n      }\n    });\n  }\n\n  updateFilter(filter) {\n    this.setState({filter});\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    const tabList = [\n      {id: \"browse\", label: \"Browse\"},\n      {id: \"upload\", label: \"Upload\"}\n    ];\n\n    return (\n      <Tabs tabs={tabList} defaultTab=\"browse\" updateURL={true}>\n        <TabPane TabId={tabList[0].id}>\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <FilterForm\n                Module=\"imaging_uploader\"\n                name=\"imaging_filter\"\n                id=\"imaging_filter\"\n                onUpdate={this.updateFilter}\n                filter={this.state.filter}\n              >\n                <TextboxElement {... this.state.Data.form.candID} />\n                <TextboxElement {... this.state.Data.form.pSCID} />\n                <SelectElement {... this.state.Data.form.visitLabel} />\n                <ButtonElement type=\"reset\" label=\"Clear Filters\" />\n              </FilterForm>\n            </div>\n            <div className=\"col-md-7\">\n              <LogPanel />\n            </div>\n          </div>\n          <div id=\"mri_upload_table\">\n            <StaticDataTable\n              Data={this.state.Data.Data}\n              Headers={this.state.Data.Headers}\n              getFormattedCell={formatColumn}\n              Filter={this.state.filter}\n            />\n          </div>\n        </TabPane>\n        <TabPane TabId={tabList[1].id}>\n          <UploadForm\n            form={this.state.Data.form}\n            mriList={this.state.Data.mriList}\n            maxUploadSize={this.state.Data.maxUploadSize}\n          />\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nImagingUploader.propTypes = {};\nImagingUploader.defaultProps = {};\n\nexport default ImagingUploader;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/ImagingUploader.js","/* global UploadProgress */\n\nimport Panel from 'Panel';\n\n/**\n * Log Panel Component\n *\n * Panel component that displays logs for a selected MRI upload whether it is\n * in progress or already completed or failed.\n *\n * @author Alex Ilea\n * @version 1.0.0\n * @since 2017/04/01\n *\n */\nclass LogPanel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logText: \"<select a row in the table below to view the upload logs>\",\n      logType: \"summary\"\n    };\n\n    this.initHelper = this.initHelper.bind(this);\n    this.onLogTypeChange = this.onLogTypeChange.bind(this);\n    this.setServerPolling = this.setServerPolling.bind(this);\n    this.monitorProgress = this.monitorProgress.bind(this);\n  }\n\n  componentDidMount() {\n    this.initHelper();\n  }\n\n  initHelper() {\n    const uploadProgress = new UploadProgress();\n    this.uploadProgress = uploadProgress;\n\n    $('#mri_upload_table').on('click', 'tbody tr', function(event) {\n      // Stop server polling if any was taking place\n      if (uploadProgress.getUploadRow() !== null) {\n        $(uploadProgress.getUploadRow()).css('background-color', 'white');\n        this.setServerPolling(false);\n      }\n\n      // If user clicked on the same row, it is interpreted as a de-selection:\n      // deselect row and set log text to 'nothing selected'\n      if (event.currentTarget === uploadProgress.getUploadRow()) {\n        uploadProgress.setUploadRow(null);\n        uploadProgress.setProgressFromServer(null);\n        this.setState({\n          logText: '<select a row in the table below to view the upload logs>'\n        });\n        return;\n      }\n\n      uploadProgress.setUploadRow(event.currentTarget);\n      $(event.currentTarget).css('background-color', '#EFEFFB');\n      this.monitorProgress(this.state.logType);\n    }.bind(this));\n  }\n\n  /**\n   * Monitors the progress of an MRI pipeline run on the server by repeatedly\n   * issuing POST requests for this information at regular intervals.\n   * As soon as the server indicates that the pipeline has finished running, polling\n   * will end.\n   *\n   * @param {string} logType - summary or details\n   */\n  monitorProgress(logType) {\n    const summary = (logType === \"summary\");\n    const uploadProgress = this.uploadProgress;\n    const uploadId = uploadProgress.getUploadId();\n\n    // If no row was selected\n    if (!uploadId) {\n      return;\n    }\n\n    $.post(loris.BaseURL + \"/imaging_uploader/ajax/getUploadSummary.php\", {\n      uploadId: uploadId,\n      summary: summary\n    }, function(data) {\n      uploadProgress.setProgressFromServer(data);\n      this.setState({logText: uploadProgress.getProgressText()});\n      // If the pipeline is still running, start polling\n      // If the pipeline is not running, end the polling (if any was started)\n      this.setServerPolling(\n        uploadProgress.getPipelineStatus() === UploadProgress.PIPELINE_STATUS_RUNNING\n      );\n    }.bind(this));  // post call\n  }\n\n  /**\n   * Starts/stops polling on the server.\n   * @param {bool} poll - pool boolean\n   */\n  setServerPolling(poll) {\n    const uploadProgress = this.uploadProgress;\n\n    if (poll) {\n      // START POLLING\n      // If there were no POST requests being issued, start issuing some.\n      if (!this.setServerPolling.getSummaryInterval) {\n        this.setServerPolling.getSummaryInterval = setInterval(\n          this.monitorProgress, 5000\n        );\n      }\n      // If there were no updates to the string of dots, start updating\n      if (!this.setServerPolling.dotUpdateInterval) {\n        this.setServerPolling.dotUpdateInterval = setInterval(function() {\n          uploadProgress.updateDots();\n          this.setState({\n            logText: uploadProgress.getProgressText()\n          });\n        }, 3000);\n      }\n      // If there were no updates to the animated chars, start updating\n      if (!this.setServerPolling.animatedCharInterval) {\n        this.setServerPolling.animatedCharInterval = setInterval(function() {\n          uploadProgress.updateAnimatedCharIndex();\n          this.setState({\n            logText: uploadProgress.getProgressText()\n          });\n        }, 250);\n      }\n    } else {\n      // STOP POLLING\n      // Stop issuing POST requests (if any polling was taking place)\n      if (this.setServerPolling.getSummaryInterval) {\n        clearInterval(this.setServerPolling.getSummaryInterval);\n        this.setServerPolling.getSummaryInterval = null;\n      }\n      // Stop updating the series of dots string (if such an update was going on)\n      if (this.setServerPolling.dotUpdateInterval) {\n        clearInterval(this.setServerPolling.dotUpdateInterval);\n        this.setServerPolling.dotUpdateInterval = null;\n      }\n      // Stop updating the animated char (if such an update was going on)\n      if (this.setServerPolling.animatedCharInterval) {\n        clearInterval(this.setServerPolling.animatedCharInterval);\n        this.setServerPolling.animatedCharInterval = null;\n      }\n    }\n  }\n\n  onLogTypeChange(name, value) {\n    // Update log box\n    this.monitorProgress(value);\n    this.setState({logType: value});\n  }\n\n  render() {\n    const logTypes = {\n      summary: 'Summary',\n      detailed: 'Detailed'\n    };\n\n    return (\n      <Panel id=\"log_panel\" title=\"Log Viewer\">\n        <FormElement name=\"log_form\">\n          <SelectElement\n            name=\"LogType\"\n            label=\"Logs to display\"\n            options={logTypes}\n            onUserInput={this.onLogTypeChange}\n            value={this.state.logType}\n            emptyOption={false}\n          />\n          <TextareaElement\n            name=\"UploadLogs\"\n            disabled={true}\n            id=\"mri_upload_logs\"\n            value={this.state.logText}\n            rows={6}\n          />\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nLogPanel.propTypes = {};\nLogPanel.defaultProps = {};\n\nexport default LogPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/LogPanel.js","import ProgressBar from 'ProgressBar';\n\n/**\n * Imaging Upload Form\n *\n * Form component allowing to upload MRI images to LORIS\n *\n * @author Alex Ilea\n * @version 1.0.0\n * @since 2017/04/01\n *\n */\nclass UploadForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const form = JSON.parse(JSON.stringify(this.props.form));\n    form.IsPhantom.required = true;\n    form.candID.required = true;\n    form.pSCID.required = true;\n    form.visitLabel.required = true;\n    form.mri_file.required = true;\n\n    this.state = {\n      formData: {},\n      form: form,\n      uploadProgress: -1\n    };\n\n    this.onFormChange = this.onFormChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  componentDidMount() {\n    // Disable fields on initial load\n    this.onFormChange(this.state.form.IsPhantom.name, null);\n  }\n\n  onFormChange(field, value) {\n    if (!field) return;\n\n    const form = JSON.parse(JSON.stringify(this.state.form));\n    const formData = Object.assign({}, this.state.formData);\n\n    if (field === 'IsPhantom') {\n      if (value === 'N') {\n        form.candID.disabled = false;\n        form.pSCID.disabled = false;\n        form.visitLabel.disabled = false;\n      } else {\n        form.candID.disabled = true;\n        form.pSCID.disabled = true;\n        form.visitLabel.disabled = true;\n        delete formData.candID;\n        delete formData.pSCID;\n        delete formData.visitLabel;\n      }\n    }\n\n    formData[field] = value;\n\n    this.setState({\n      form: form,\n      formData: formData\n    });\n  }\n\n  submitForm() {\n    // Validate required fields\n    const data = this.state.formData;\n    if (!data.mri_file || !data.IsPhantom) {\n      return;\n    }\n\n    if (data.IsPhantom === 'N' && (!data.candID || !data.pSCID || !data.visitLabel)) {\n      return;\n    }\n\n    // Checks if a file with a given fileName has already been uploaded\n    const fileName = data.mri_file.name;\n    const mriFile = this.props.mriList.find(\n      mriFile => mriFile.fileName.indexOf(fileName) > -1\n    );\n\n    // New File\n    if (!mriFile) {\n      this.uploadFile();\n      return;\n    }\n\n    // File uploaded and completed mri pipeline\n    if (mriFile.status === \"Success\") {\n      swal({\n        title: \"File already exists!\",\n        text: \"A file with this name has already successfully passed the MRI pipeline!\\n\",\n        type: \"error\",\n        confirmButtonText: 'OK'\n      });\n      return;\n    }\n\n    // File in the middle of insertion pipeline\n    if (mriFile.status === \"In Progress...\") {\n      swal({\n        title: \"File is currently processing!\",\n        text: \"A file with this name is currently going through the MRI pipeline!\\n\",\n        type: \"error\",\n        confirmButtonText: 'OK'\n      });\n      return;\n    }\n\n    // File uploaded but failed during mri pipeline\n    if (mriFile.status === \"Failure\") {\n      swal({\n        title: \"Are you sure?\",\n        text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes, I am sure!',\n        cancelButtonText: \"No, cancel it!\"\n      }, function(isConfirm) {\n        if (isConfirm) {\n          this.uploadFile(true);\n        } else {\n          swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n        }\n      }.bind(this));\n    }\n\n    // Pipeline has not been triggered yet\n    if (mriFile.status === \"Not Started\") {\n      swal({\n        title: \"Are you sure?\",\n        text: \"A file with this name has been uploaded but has not yet started the MRI pipeline.\" +\n          \"\\n Would you like to override the existing file?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes, I am sure!',\n        cancelButtonText: 'No, cancel it!'\n      }, function(isConfirm) {\n        if (isConfirm) {\n          this.uploadFile(true);\n        } else {\n          swal(\"Cancelled\", \"Your upload has been cancelled.\", \"error\");\n        }\n      }.bind(this));\n    }\n\n    return;\n  }\n\n  /*\n   Uploads file to the server, listening to the progress\n   in order to get the percentage uploaded as value for the progress bar\n   */\n  uploadFile(overwriteFile) {\n    const formData = this.state.formData;\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n    formObj.append(\"fire_away\", \"Upload\");\n    if (overwriteFile) {\n      formObj.append(\"overwrite\", true);\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: loris.BaseURL + \"/imaging_uploader/\",\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        const xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n          if (evt.lengthComputable) {\n            const percentage = Math.round((evt.loaded / evt.total) * 100);\n            this.setState({uploadProgress: percentage});\n          }\n        }.bind(this), false);\n        return xhr;\n      }.bind(this),\n      success: function(data) {\n        const errMessage = \"The following errors occured while \" +\n          \"attempting to display this page:\";\n        // Last remaining part of the old module.\n        // Need to update to use proper AJAX request/response\n        if (data.indexOf(errMessage) > -1) {\n          data = data.replace('history.back()', 'location.reload()');\n          document.open();\n          document.write(data);\n          document.close();\n        } else {\n          // If no error is shown, assume \"success\" and redirect to main page\n          swal({\n            title: \"Upload Successful!\",\n            type: \"success\"\n          }, function() {\n            window.location.assign(loris.BaseURL + \"/imaging_uploader/\");\n          });\n        }\n      },\n      error: function(err) {\n        console.error(err);\n        this.setState({\n          uploadProgress: -1\n        });\n      }.bind(this)\n    });\n  }\n\n  render() {\n    // Bind form elements to formData\n    const form = this.state.form;\n    form.IsPhantom.value = this.state.formData.IsPhantom;\n    form.candID.value = this.state.formData.candID;\n    form.pSCID.value = this.state.formData.pSCID;\n    form.visitLabel.value = this.state.formData.visitLabel;\n    form.mri_file.value = this.state.formData.mri_file;\n\n    // Hide button when progress bar is shown\n    const btnClass = (\n      (this.state.uploadProgress > -1) ? \"btn btn-primary hide\" : undefined\n    );\n\n    const notes = \"File name must be of type .tgz or tar.gz or .zip. \" +\n      \"Uploads cannot exceed \" + this.props.maxUploadSize;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <h3>Upload an imaging scan</h3>\n          <br/>\n          <FormElement\n            name=\"upload_form\"\n            formElements={form}\n            fileUpload={true}\n            onUserInput={this.onFormChange}\n          >\n            <StaticElement\n              label=\"Notes\"\n              text={notes}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-9 col-sm-offset-3\">\n                <ProgressBar value={this.state.uploadProgress}/>\n              </div>\n            </div>\n            <ButtonElement\n              onUserInput={this.submitForm}\n              buttonClass={btnClass}\n            />\n          </FormElement>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadForm.propTypes = {};\nUploadForm.defaultProps = {};\n\nexport default UploadForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/UploadForm.js","/**\n * React ProgressBar.\n *\n * Updates UI automatically when passed a progress value between 0 and 100.\n * To hide progress bar before/after upload, set value to -1.\n *\n * Note: This component relies on Bootstrap 3 progress-bar classes\n * (http://getbootstrap.com/components/#progress)\n */\nclass ProgressBar extends React.Component {\n  render() {\n    const progressStyle = {\n      display: (this.props.value < 0 ? 'none' : 'block'),\n      backgroundColor: '#d3d3d3',\n      height: '30px',\n      position: 'relative'\n    };\n\n    const labelStyle = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1000,\n      width: '100%',\n      color: '#fff',\n      textAlign: 'center',\n      lineHeight: '30px',\n      fontWeight: '600'\n    };\n\n    return (\n      <div className=\"progress\" style={progressStyle}>\n        <div\n          className=\"progress-bar progress-bar-striped active\"\n          role=\"progressbar\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          aria-valuenow={this.props.value}\n          style={{width: (this.props.value + '%')}}\n        >\n        </div>\n        <span style={labelStyle}>{this.props.value}%</span>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: React.PropTypes.number\n};\nProgressBar.defaultProps = {\n  value: 0\n};\n\nexport default ProgressBar;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/ProgressBar.js","/* exported formatColumn */\n\nloris.hiddenHeaders = ['PatientName'];\n\n/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  const row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  // Default cell style\n  const cellStyle = {\n    whiteSpace: 'nowrap'\n  };\n\n  if (column === 'Progress') {\n    if (cell === 'Failure') {\n      cellStyle.color = '#fff';\n      return (\n        <td className=\"label-danger\" style={cellStyle}>\n          {cell}\n        </td>\n      );\n    }\n\n    if (cell === 'In Progress...') {\n      cellStyle.color = '#fff';\n      return (\n        <td className=\"label-warning\" style={cellStyle}>\n          {cell}\n        </td>\n      );\n    }\n\n    const created = row['Number Of MincCreated'];\n    const inserted = row['Number Of MincInserted'];\n    return (\n      <td style={cellStyle}>\n        {cell} ({inserted} out of {created})\n      </td>\n    );\n  }\n\n  if (column === 'Tarchive Info') {\n    if (!cell || cell === \"0\") {\n      return (<td></td>);\n    }\n\n    const url = loris.BaseURL + '/dicom_archive/viewDetails/?tarchiveID=' + cell;\n    return (\n      <td style={cellStyle}>\n        <a href={url}>View Details</a>\n      </td>\n    );\n  }\n\n  if (column === 'Number Of MincInserted') {\n    if (cell > 0) {\n      return (\n        <td style={cellStyle}>\n          <a onClick={handleClick.bind(null, row.CandID)}>{cell}</a>\n        </td>\n      );\n    }\n  }\n\n  if (column === 'Number Of MincCreated') {\n    let violatedScans;\n    if (row['Number Of MincCreated'] - row['Number Of MincInserted'] > 0) {\n      let numViolatedScans =\n           row['Number Of MincCreated'] - row['Number Of MincInserted'];\n\n      let patientName = row.PatientName;\n      violatedScans = <a onClick={openViolatedScans.bind(null, patientName)}>\n         ({numViolatedScans} violated scans)\n       </a>;\n    }\n\n    return (\n         <td style={cellStyle}>\n             {cell}\n             &nbsp;\n             {violatedScans}\n         </td>\n    );\n  }\n\n  /**\n   * Handles clicks on 'Number Of MincInserted' cells\n   *\n   * @param {string} dccid - dccid\n   * @param {object} e - event info\n   */\n  function handleClick(dccid, e) {\n    loris.loadFilteredMenuClickHandler('imaging_browser/', {\n      DCCID: dccid\n    })(e);\n  }\n\n    /**\n     * Opens MRI Violations for when there are violated scans\n     *\n     * @param {string} patientName - Patient name of the form PSCID_DCCID_VisitLabel\n     * @param {object} e - event info\n     */\n  function openViolatedScans(patientName, e) {\n    loris.loadFilteredMenuClickHandler('mri_violations/', {\n      PatientName: patientName\n    })(e);\n  }\n\n  return (<td style={cellStyle}>{cell}</td>);\n}\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/imaging_uploader/jsx/columnFormatter.js"],"sourceRoot":""}