{"version":3,"sources":["webpack:///modules/media/js/mediaIndex.js","webpack:///webpack/bootstrap 2cbc61aff34bad956ada?d79a************************************","webpack:///./modules/media/jsx/mediaIndex.js","webpack:///./jsx/Panel.js?b4c8***","webpack:///./jsx/Tabs.js?82f5***","webpack:///./jsx/FilterForm.js?52c5**","webpack:///./jsx/ProgressBar.js?bc90","webpack:///./modules/media/jsx/uploadForm.js","webpack:///./modules/media/jsx/columnFormatter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_FilterForm","_FilterForm2","_Tabs","_uploadForm","_uploadForm2","_columnFormatter","_columnFormatter2","MediaIndex","_React$Component","this","_this","getPrototypeOf","loris","hiddenHeaders","state","isLoaded","filter","fetchData","bind","updateFilter","resetFilters","$","ajax","DataURL","method","dataType","success","data","setState","Data","error","console","refs","mediaFilter","clearFilter","React","createElement","className","uploadTab","tabList","label","userHasPermission","push","TabPane","TabId","BaseURL","action","maxUploadSize","Tabs","tabs","defaultTab","updateURL","Module","name","ref","columns","formElements","form","onUpdate","ButtonElement","type","onUserInput","StaticDataTable","Headers","Filter","getFormattedCell","freezeColumn","Component","mediaIndex","ReactDOM","render","document","getElementById","2","Panel","collapsed","initCollapsed","panelClass","toggleCollapsed","glyphClass","panelHeading","title","onClick","data-toggle","data-target","style","cursor","role","height","children","propTypes","PropTypes","string","defaultProps","9","hash","window","location","activeTab","substr","handleClick","getTabs","getTabPanes","tabId","e","onTabChange","scrollDistance","scrollTop","map","tab","tabClass","href","tabID","tabPanes","Children","child","cloneElement","tabStyle","marginLeft","marginBottom","array","isRequired","bool","_React$Component2","apply","arguments","classList","Title","13","_Panel","_Panel2","FilterForm","getFormChildren","setFilter","onElementUpdate","queryString","QueryString","get","keys","forEach","filterKey","exactMatch","clear","formChildren","isValidElement","callbackFunc","callbackName","elementName","displayName","queryFieldName","filterValue","JSON","parse","stringify","fieldName","fieldValue","set","FormElement","warn","object","func","18","ProgressBar","progressStyle","display","backgroundColor","position","labelStyle","top","left","zIndex","width","color","textAlign","lineHeight","fontWeight","aria-valuemin","aria-valuemax","aria-valuenow","number","23","_ProgressBar","_ProgressBar2","MediaUploadForm","formData","uploadResult","errorMessage","loadedData","uploadProgress","getValidFileName","handleSubmit","isValidFileName","isValidForm","setFormData","uploadFile","errorCode","errorMsg","undefined","helpText","fileUpload","onSubmit","StaticElement","text","SelectElement","options","candidates","hasError","required","pscid","visits","visitLabel","sites","forSite","instruments","instrument","DateElement","minYear","maxYear","dateTaken","TextareaElement","comments","FileElement","file","fileName","preventDefault","formRefs","mediaFiles","replace","requiredFileName","swal","isDuplicate","indexOf","showCancelButton","confirmButtonText","cancelButtonText","isConfirm","formObj","FormData","append","url","cache","contentType","processData","xhr","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","percentage","Math","round","total","event","CustomEvent","dispatchEvent","err","msg","responseJSON","message","requiredFields","field","forceUpdate","formElement","sessionData","all","24","formatColumn","column","cell","rowData","rowHeaders","row","header","index","classes","join","hasWritePermission","downloadURL","download","sessionURL","editURL"],"mappings":"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","file":"./modules/media/js/mediaIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _FilterForm = __webpack_require__(13);\n\t\n\tvar _FilterForm2 = _interopRequireDefault(_FilterForm);\n\t\n\tvar _Tabs = __webpack_require__(9);\n\t\n\tvar _uploadForm = __webpack_require__(23);\n\t\n\tvar _uploadForm2 = _interopRequireDefault(_uploadForm);\n\t\n\tvar _columnFormatter = __webpack_require__(24);\n\t\n\tvar _columnFormatter2 = _interopRequireDefault(_columnFormatter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediaIndex = function (_React$Component) {\n\t  _inherits(MediaIndex, _React$Component);\n\t\n\t  function MediaIndex(props) {\n\t    _classCallCheck(this, MediaIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, (MediaIndex.__proto__ || Object.getPrototypeOf(MediaIndex)).call(this, props));\n\t\n\t    loris.hiddenHeaders = ['Cand ID', 'Session ID', 'Hide File', 'File Type'];\n\t\n\t    _this.state = {\n\t      isLoaded: false,\n\t      filter: {}\n\t    };\n\t\n\t    // Bind component instance to custom methods\n\t    _this.fetchData = _this.fetchData.bind(_this);\n\t    _this.updateFilter = _this.updateFilter.bind(_this);\n\t    _this.resetFilters = _this.resetFilters.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(MediaIndex, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.fetchData();\n\t    }\n\t\n\t    /**\n\t     * Retrive data from the provided URL and save it in state\n\t     * Additionaly add hiddenHeaders to global loris vairable\n\t     * for easy access by columnFormatter.\n\t     */\n\t\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData() {\n\t      $.ajax(this.props.DataURL, {\n\t        method: \"GET\",\n\t        dataType: 'json',\n\t        success: function (data) {\n\t          this.setState({\n\t            Data: data,\n\t            isLoaded: true\n\t          });\n\t        }.bind(this),\n\t        error: function error(_error) {\n\t          console.error(_error);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateFilter',\n\t    value: function updateFilter(filter) {\n\t      this.setState({ filter: filter });\n\t    }\n\t  }, {\n\t    key: 'resetFilters',\n\t    value: function resetFilters() {\n\t      this.refs.mediaFilter.clearFilter();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Waiting for async data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var uploadTab = void 0;\n\t      var tabList = [{ id: \"browse\", label: \"Browse\" }];\n\t\n\t      if (loris.userHasPermission('media_write')) {\n\t        tabList.push({ id: \"upload\", label: \"Upload\" });\n\t        uploadTab = React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[1].id },\n\t          React.createElement(_uploadForm2.default, {\n\t            DataURL: loris.BaseURL + '/media/ajax/FileUpload.php?action=getData',\n\t            action: loris.BaseURL + '/media/ajax/FileUpload.php?action=upload',\n\t            maxUploadSize: this.state.Data.maxUploadSize\n\t          })\n\t        );\n\t      }\n\t      return React.createElement(\n\t        _Tabs.Tabs,\n\t        { tabs: tabList, defaultTab: 'browse', updateURL: true },\n\t        React.createElement(\n\t          _Tabs.TabPane,\n\t          { TabId: tabList[0].id },\n\t          React.createElement(\n\t            _FilterForm2.default,\n\t            {\n\t              Module: 'media',\n\t              name: 'media_filter',\n\t              id: 'media_filter_form',\n\t              ref: 'mediaFilter',\n\t              columns: 3,\n\t              formElements: this.state.Data.form,\n\t              onUpdate: this.updateFilter,\n\t              filter: this.state.filter\n\t            },\n\t            React.createElement('br', null),\n\t            React.createElement(ButtonElement, { label: 'Clear Filters', type: 'reset', onUserInput: this.resetFilters })\n\t          ),\n\t          React.createElement(StaticDataTable, {\n\t            Data: this.state.Data.Data,\n\t            Headers: this.state.Data.Headers,\n\t            Filter: this.state.filter,\n\t            getFormattedCell: _columnFormatter2.default,\n\t            freezeColumn: 'File Name'\n\t          })\n\t        ),\n\t        uploadTab\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return MediaIndex;\n\t}(React.Component);\n\t\n\t$(function () {\n\t  var mediaIndex = React.createElement(\n\t    'div',\n\t    { className: 'page-media' },\n\t    React.createElement(MediaIndex, { DataURL: loris.BaseURL + '/media/?format=json' })\n\t  );\n\t\n\t  ReactDOM.render(mediaIndex, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React component for Panel\n\t *\n\t * @author Alex I.\n\t * @version 1.0.0\n\t *\n\t */\n\t\n\t/**\n\t * Panel component\n\t * Wraps children in a collapsible bootstrap panel\n\t */\n\tvar Panel = function (_React$Component) {\n\t  _inherits(Panel, _React$Component);\n\t\n\t  function Panel(props) {\n\t    _classCallCheck(this, Panel);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this, props));\n\t\n\t    _this.state = {\n\t      collapsed: _this.props.initCollapsed\n\t    };\n\t\n\t    // Initialize panel class based on collapsed status\n\t    _this.panelClass = _this.props.initCollapsed ? \"panel-collapse collapse\" : \"panel-collapse collapse in\";\n\t\n\t    _this.toggleCollapsed = _this.toggleCollapsed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Panel, [{\n\t    key: \"toggleCollapsed\",\n\t    value: function toggleCollapsed() {\n\t      this.setState({ collapsed: !this.state.collapsed });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // Change arrow direction based on collapse status\n\t      var glyphClass = this.state.collapsed ? \"glyphicon pull-right glyphicon-chevron-down\" : \"glyphicon pull-right glyphicon-chevron-up\";\n\t\n\t      // Add panel header, if title is set\n\t      var panelHeading = this.props.title ? React.createElement(\n\t        \"div\",\n\t        {\n\t          className: \"panel-heading\",\n\t          onClick: this.toggleCollapsed,\n\t          \"data-toggle\": \"collapse\",\n\t          \"data-target\": '#' + this.props.id,\n\t          style: { cursor: 'pointer' }\n\t        },\n\t        this.props.title,\n\t        React.createElement(\"span\", { className: glyphClass })\n\t      ) : '';\n\t\n\t      return React.createElement(\n\t        \"div\",\n\t        { className: \"panel panel-primary\" },\n\t        panelHeading,\n\t        React.createElement(\n\t          \"div\",\n\t          { id: this.props.id, className: this.panelClass, role: \"tabpanel\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"panel-body\", style: { height: this.props.height } },\n\t            this.props.children\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Panel;\n\t}(React.Component);\n\t\n\tPanel.propTypes = {\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string\n\t};\n\tPanel.defaultProps = {\n\t  initCollapsed: false,\n\t  id: 'default-panel',\n\t  height: '100%'\n\t};\n\t\n\texports.default = Panel;\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * This file contains React components for Tabs component.\n\t *\n\t * @author Loris Team\n\t * @version 1.1.0\n\t *\n\t */\n\t\n\t/**\n\t * Tabs Component.\n\t * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n\t * and corresponding tab panes.\n\t *\n\t * ================================================\n\t * Usage:\n\t *\n\t * 1. Define an array of tabs with IDs and labels\n\t *\n\t * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n\t *\n\t * 2. Pass tabList as <Tab> property and <TabPane> as child\n\t *  ```\n\t * <Tabs tabs={tabList} defaultTab=\"tab1\">\n\t *   <TabPane TabId={tabList[0].id}>\n\t *     // Tab content goes here\n\t *   </TabPane>\n\t * </Tabs>\n\t * ```\n\t * =================================================\n\t *\n\t */\n\tvar Tabs = function (_React$Component) {\n\t  _inherits(Tabs, _React$Component);\n\t\n\t  function Tabs(props) {\n\t    _classCallCheck(this, Tabs);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));\n\t\n\t    var hash = window.location.hash;\n\t    var activeTab = \"\";\n\t\n\t    /**\n\t     * Determine the initial active tab in this order\n\t     * 1. Try to infer from the URL, otherwise\n\t     * 2. Try to infer from the defaultTab prop, otherwise\n\t     * 3. Set to be the first tab of the list\n\t     */\n\t    if (_this.props.updateURL && hash) {\n\t      activeTab = hash.substr(1);\n\t    } else if (_this.props.defaultTab) {\n\t      activeTab = _this.props.defaultTab;\n\t    } else if (_this.props.tabs.length > 0) {\n\t      activeTab = _this.props.tabs[0].id;\n\t    }\n\t\n\t    _this.state = {\n\t      activeTab: activeTab\n\t    };\n\t\n\t    _this.handleClick = _this.handleClick.bind(_this);\n\t    _this.getTabs = _this.getTabs.bind(_this);\n\t    _this.getTabPanes = _this.getTabPanes.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Tabs, [{\n\t    key: 'handleClick',\n\t    value: function handleClick(tabId, e) {\n\t      this.setState({ activeTab: tabId });\n\t      this.props.onTabChange(tabId);\n\t\n\t      // Add tab href to URL querystring and scroll the page to top\n\t      if (this.props.updateURL) {\n\t        var scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n\t        window.location.hash = e.target.hash;\n\t        $('html,body').scrollTop(scrollDistance);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabs',\n\t    value: function getTabs() {\n\t      var tabs = this.props.tabs.map(function (tab) {\n\t        var tabClass = this.state.activeTab === tab.id ? 'active' : null;\n\t        var href = \"#\" + tab.id;\n\t        var tabID = \"tab-\" + tab.id;\n\t        return React.createElement(\n\t          'li',\n\t          {\n\t            role: 'presentation',\n\t            className: tabClass,\n\t            key: tab.id\n\t          },\n\t          React.createElement(\n\t            'a',\n\t            { id: tabID,\n\t              href: href,\n\t              role: 'tab',\n\t              'data-toggle': 'tab',\n\t              onClick: this.handleClick.bind(null, tab.id)\n\t            },\n\t            tab.label\n\t          )\n\t        );\n\t      }.bind(this));\n\t\n\t      return tabs;\n\t    }\n\t  }, {\n\t    key: 'getTabPanes',\n\t    value: function getTabPanes() {\n\t      var tabPanes = React.Children.map(this.props.children, function (child, key) {\n\t        if (child) {\n\t          return React.cloneElement(child, {\n\t            activeTab: this.state.activeTab,\n\t            key: key\n\t          });\n\t        }\n\t      }.bind(this));\n\t\n\t      return tabPanes;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var tabs = this.getTabs();\n\t      var tabPanes = this.getTabPanes();\n\t      var tabStyle = {\n\t        marginLeft: 0,\n\t        marginBottom: '5px'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'ul',\n\t          { className: 'nav nav-tabs', role: 'tablist', style: tabStyle },\n\t          tabs\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'tab-content' },\n\t          tabPanes\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Tabs;\n\t}(React.Component);\n\t\n\tTabs.propTypes = {\n\t  tabs: React.PropTypes.array.isRequired,\n\t  defaultTab: React.PropTypes.string,\n\t  updateURL: React.PropTypes.bool\n\t};\n\tTabs.defaultProps = {\n\t  onTabChange: function onTabChange() {},\n\t  updateURL: false\n\t};\n\t\n\t/*\n\t * TabPane component.\n\t * Used to wrap content for every tab.\n\t */\n\t\n\tvar TabPane = function (_React$Component2) {\n\t  _inherits(TabPane, _React$Component2);\n\t\n\t  function TabPane() {\n\t    _classCallCheck(this, TabPane);\n\t\n\t    return _possibleConstructorReturn(this, (TabPane.__proto__ || Object.getPrototypeOf(TabPane)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(TabPane, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var classList = \"tab-pane\";\n\t      var title = void 0;\n\t\n\t      if (this.props.TabId === this.props.activeTab) {\n\t        classList += \" active\";\n\t      }\n\t      if (this.props.Title) {\n\t        title = React.createElement(\n\t          'h1',\n\t          null,\n\t          this.props.Title\n\t        );\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { role: 'tabpanel', className: classList, id: this.props.TabId },\n\t        title,\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TabPane;\n\t}(React.Component);\n\t\n\tTabPane.propTypes = {\n\t  TabId: React.PropTypes.string.isRequired,\n\t  Title: React.PropTypes.string,\n\t  activeTab: React.PropTypes.string\n\t};\n\t\n\texports.Tabs = Tabs;\n\texports.TabPane = TabPane;\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Panel = __webpack_require__(2);\n\t\n\tvar _Panel2 = _interopRequireDefault(_Panel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file contains React component for FilterForm\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author Loris Team\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @version 1.1.0\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * FilterForm component.\n\t * A wrapper for form elements inside a selection filter.\n\t *\n\t * Adds necessary filter callbacks to all children and passes them to FormElement\n\t * for proper rendering.\n\t *\n\t * Keeps track of filter object and sends it to parent on every update.\n\t *\n\t * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n\t * making it impossible to use it for selection filters. This components renames\n\t * all `candID` fields to `candidateID` automatically before appending them to URL.\n\t *\n\t */\n\tvar FilterForm = function (_React$Component) {\n\t  _inherits(FilterForm, _React$Component);\n\t\n\t  function FilterForm(props) {\n\t    _classCallCheck(this, FilterForm);\n\t\n\t    // Bind component instance to custom methods\n\t    var _this = _possibleConstructorReturn(this, (FilterForm.__proto__ || Object.getPrototypeOf(FilterForm)).call(this, props));\n\t\n\t    _this.clearFilter = _this.clearFilter.bind(_this);\n\t    _this.getFormChildren = _this.getFormChildren.bind(_this);\n\t    _this.setFilter = _this.setFilter.bind(_this);\n\t    _this.onElementUpdate = _this.onElementUpdate.bind(_this);\n\t\n\t    // Keeps track of querystring values\n\t    // Saved as class variable instead of keeping in state\n\t    _this.queryString = QueryString.get();\n\t    return _this;\n\t  }\n\t\n\t  _createClass(FilterForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var filter = {};\n\t      var queryString = this.queryString;\n\t\n\t      // Initiaze filter using querystring value\n\t      Object.keys(queryString).forEach(function (key) {\n\t        var filterKey = key === 'candidateID' ? 'candID' : key;\n\t        filter[filterKey] = {\n\t          value: queryString[key],\n\t          exactMatch: false\n\t        };\n\t      });\n\t\n\t      // Update parent component\n\t      this.props.onUpdate(filter);\n\t    }\n\t\n\t    /**\n\t     * Clear the filter object, querystring and input fields\n\t     */\n\t\n\t  }, {\n\t    key: 'clearFilter',\n\t    value: function clearFilter() {\n\t      this.queryString = QueryString.clear(this.props.Module);\n\t      this.props.onUpdate({});\n\t    }\n\t\n\t    /**\n\t     * Itterates through FilterForm children, sets necessary callback functions\n\t     * and initializes filterTable\n\t     *\n\t     * @return {Array} formChildren - array of children with necessary props\n\t     */\n\t\n\t  }, {\n\t    key: 'getFormChildren',\n\t    value: function getFormChildren() {\n\t      var formChildren = [];\n\t      React.Children.forEach(this.props.children, function (child, key) {\n\t        // If child is a React component (i.e not a simple DOM element)\n\t        if (React.isValidElement(child) && typeof child.type === \"function\" && child.props.onUserInput) {\n\t          var callbackFunc = child.props.onUserInput;\n\t          var callbackName = callbackFunc.name;\n\t          var elementName = child.type.displayName;\n\t          var queryFieldName = child.props.name === 'candID' ? 'candidateID' : child.props.name;\n\t          var filterValue = this.queryString[queryFieldName];\n\t          // If callback function was not set, set it to onElementUpdate() for form\n\t          // elements and to clearFilter() for <ButtonElement type='reset'/>.\n\t          if (callbackName === \"onUserInput\") {\n\t            if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n\t              callbackFunc = this.clearFilter;\n\t            } else {\n\t              callbackFunc = this.onElementUpdate.bind(null, elementName);\n\t            }\n\t          }\n\t          // Pass onUserInput and value props to all children\n\t          formChildren.push(React.cloneElement(child, {\n\t            onUserInput: callbackFunc,\n\t            value: filterValue ? filterValue : '',\n\t            key: key\n\t          }));\n\t          // Initialize filter for StaticDataTable\n\t          this.setFilter(elementName, child.props.name, filterValue);\n\t        } else {\n\t          formChildren.push(React.cloneElement(child, { key: key }));\n\t        }\n\t      }.bind(this));\n\t\n\t      return formChildren;\n\t    }\n\t\n\t    /**\n\t     * Appends entry to filter object or deletes it if value is\n\t     * empty.\n\t     *\n\t     * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n\t     * in order to force StaticDataTable to do exact comparaison\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} key - the name of the form element\n\t     * @param {string} value - the value of the form element\n\t     *\n\t     * @return {{}} filter - filterData\n\t     */\n\t\n\t  }, {\n\t    key: 'setFilter',\n\t    value: function setFilter(type, key, value) {\n\t      var filter = {};\n\t      if (this.props.filter) {\n\t        filter = JSON.parse(JSON.stringify(this.props.filter));\n\t      }\n\t\n\t      if (key && value) {\n\t        filter[key] = {};\n\t        filter[key].value = value;\n\t        filter[key].exactMatch = type === \"SelectElement\";\n\t      } else if (filter && key && value === '') {\n\t        delete filter[key];\n\t      }\n\t\n\t      return filter;\n\t    }\n\t\n\t    /**\n\t     * Sets filter object and querystring to reflect values of input fields\n\t     *\n\t     * @param {string} type - form element type (i.e component name)\n\t     * @param {string} fieldName - the name of the form element\n\t     * @param {string} fieldValue - the value of the form element\n\t     */\n\t\n\t  }, {\n\t    key: 'onElementUpdate',\n\t    value: function onElementUpdate(type, fieldName, fieldValue) {\n\t      // Make sure both key/value are string before sending them to querystring\n\t      if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n\t        return;\n\t      }\n\t\n\t      // Update query string\n\t      var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t      this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\t\n\t      // Update filter and get new filter object\n\t      var filter = this.setFilter(type, fieldName, fieldValue);\n\t      this.props.onUpdate(filter);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Get formatted children\n\t      var formChildren = this.getFormChildren();\n\t      var formElements = this.props.formElements;\n\t\n\t      if (formElements) {\n\t        Object.keys(formElements).forEach(function (fieldName) {\n\t          var queryFieldName = fieldName === 'candID' ? 'candidateID' : fieldName;\n\t          formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n\t          formElements[fieldName].value = this.queryString[queryFieldName];\n\t        }.bind(this));\n\t      }\n\t\n\t      return React.createElement(\n\t        _Panel2.default,\n\t        {\n\t          id: this.props.id,\n\t          height: this.props.height,\n\t          title: this.props.title\n\t        },\n\t        React.createElement(\n\t          FormElement,\n\t          this.props,\n\t          formChildren\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return FilterForm;\n\t}(React.Component);\n\t\n\tFilterForm.defaultProps = {\n\t  id: 'selection-filter',\n\t  height: '100%',\n\t  title: 'Selection Filter',\n\t  onUpdate: function onUpdate() {\n\t    console.warn('onUpdate() callback is not set!');\n\t  }\n\t};\n\tFilterForm.propTypes = {\n\t  Module: React.PropTypes.string.isRequired,\n\t  filter: React.PropTypes.object.isRequired,\n\t  id: React.PropTypes.string,\n\t  height: React.PropTypes.string,\n\t  title: React.PropTypes.string,\n\t  onUpdate: React.PropTypes.func\n\t};\n\t\n\texports.default = FilterForm;\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * React ProgressBar.\n\t *\n\t * Updates UI automatically when passed a progress value between 0 and 100.\n\t * To hide progress bar before/after upload, set value to -1.\n\t *\n\t * Note: This component relies on Bootstrap 3 progress-bar classes\n\t * (http://getbootstrap.com/components/#progress)\n\t */\n\tvar ProgressBar = function (_React$Component) {\n\t  _inherits(ProgressBar, _React$Component);\n\t\n\t  function ProgressBar() {\n\t    _classCallCheck(this, ProgressBar);\n\t\n\t    return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ProgressBar, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var progressStyle = {\n\t        display: this.props.value < 0 ? 'none' : 'block',\n\t        backgroundColor: '#d3d3d3',\n\t        height: '30px',\n\t        position: 'relative'\n\t      };\n\t\n\t      var labelStyle = {\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        zIndex: 1000,\n\t        width: '100%',\n\t        color: '#fff',\n\t        textAlign: 'center',\n\t        lineHeight: '30px',\n\t        fontWeight: '600'\n\t      };\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'progress', style: progressStyle },\n\t        React.createElement('div', {\n\t          className: 'progress-bar progress-bar-striped active',\n\t          role: 'progressbar',\n\t          'aria-valuemin': '0',\n\t          'aria-valuemax': '100',\n\t          'aria-valuenow': this.props.value,\n\t          style: { width: this.props.value + '%' }\n\t        }),\n\t        React.createElement(\n\t          'span',\n\t          { style: labelStyle },\n\t          this.props.value,\n\t          '%'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ProgressBar;\n\t}(React.Component);\n\t\n\tProgressBar.propTypes = {\n\t  value: React.PropTypes.number\n\t};\n\tProgressBar.defaultProps = {\n\t  value: 0\n\t};\n\t\n\texports.default = ProgressBar;\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _ProgressBar = __webpack_require__(18);\n\t\n\tvar _ProgressBar2 = _interopRequireDefault(_ProgressBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Media Upload Form\n\t *\n\t * Fetches data from Loris backend and displays a form allowing\n\t * to upload a media file attached to a specific instrument\n\t *\n\t * @author Alex Ilea\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar MediaUploadForm = function (_React$Component) {\n\t  _inherits(MediaUploadForm, _React$Component);\n\t\n\t  function MediaUploadForm(props) {\n\t    _classCallCheck(this, MediaUploadForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (MediaUploadForm.__proto__ || Object.getPrototypeOf(MediaUploadForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      Data: {},\n\t      formData: {},\n\t      uploadResult: null,\n\t      errorMessage: null,\n\t      isLoaded: false,\n\t      loadedData: 0,\n\t      uploadProgress: -1\n\t    };\n\t\n\t    _this.getValidFileName = _this.getValidFileName.bind(_this);\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.isValidFileName = _this.isValidFileName.bind(_this);\n\t    _this.isValidForm = _this.isValidForm.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.uploadFile = _this.uploadFile.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(MediaUploadForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var self = this;\n\t      $.ajax(this.props.DataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          self.setState({\n\t            Data: data,\n\t            isLoaded: true\n\t          });\n\t        },\n\t        error: function error(data, errorCode, errorMsg) {\n\t          console.error(data, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var helpText = React.createElement(\n\t        'span',\n\t        null,\n\t        'File name must begin with ',\n\t        React.createElement(\n\t          'b',\n\t          null,\n\t          '[PSCID]_[Visit Label]_[Instrument]'\n\t        ),\n\t        React.createElement('br', null),\n\t        'For example, for candidate ',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          'ABC123'\n\t        ),\n\t        ', visit ',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          'V1'\n\t        ),\n\t        ' for',\n\t        React.createElement(\n\t          'i',\n\t          null,\n\t          'Body Mass Index'\n\t        ),\n\t        ' the file name should be prefixed by:',\n\t        React.createElement(\n\t          'b',\n\t          null,\n\t          ' ABC123_V1_Body_Mass_Index'\n\t        ),\n\t        React.createElement('br', null),\n\t        'File cannot exceed ',\n\t        this.props.maxUploadSize\n\t      );\n\t\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'row' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'col-md-8 col-lg-7' },\n\t          React.createElement(\n\t            FormElement,\n\t            {\n\t              name: 'mediaUpload',\n\t              fileUpload: true,\n\t              onSubmit: this.handleSubmit,\n\t              ref: 'form'\n\t            },\n\t            React.createElement(\n\t              'h3',\n\t              null,\n\t              'Upload a media file'\n\t            ),\n\t            React.createElement('br', null),\n\t            React.createElement(StaticElement, {\n\t              label: 'Note',\n\t              text: helpText\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'pscid',\n\t              label: 'PSCID',\n\t              options: this.state.Data.candidates,\n\t              onUserInput: this.setFormData,\n\t              ref: 'pscid',\n\t              hasError: false,\n\t              required: true,\n\t              value: this.state.formData.pscid\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'visitLabel',\n\t              label: 'Visit Label',\n\t              options: this.state.Data.visits,\n\t              onUserInput: this.setFormData,\n\t              ref: 'visitLabel',\n\t              required: true,\n\t              value: this.state.formData.visitLabel\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'forSite',\n\t              label: 'Site',\n\t              options: this.state.Data.sites,\n\t              onUserInput: this.setFormData,\n\t              ref: 'forSite',\n\t              required: true,\n\t              value: this.state.formData.forSite\n\t            }),\n\t            React.createElement(SelectElement, {\n\t              name: 'instrument',\n\t              label: 'Instrument',\n\t              options: this.state.Data.instruments,\n\t              onUserInput: this.setFormData,\n\t              ref: 'instrument',\n\t              value: this.state.formData.instrument\n\t            }),\n\t            React.createElement(DateElement, {\n\t              name: 'dateTaken',\n\t              label: 'Date of Administration',\n\t              minYear: '2000',\n\t              maxYear: '2017',\n\t              onUserInput: this.setFormData,\n\t              ref: 'dateTaken',\n\t              value: this.state.formData.dateTaken\n\t            }),\n\t            React.createElement(TextareaElement, {\n\t              name: 'comments',\n\t              label: 'Comments',\n\t              onUserInput: this.setFormData,\n\t              ref: 'comments',\n\t              value: this.state.formData.comments\n\t            }),\n\t            React.createElement(FileElement, {\n\t              name: 'file',\n\t              id: 'mediaUploadEl',\n\t              onUserInput: this.setFormData,\n\t              ref: 'file',\n\t              label: 'File to upload',\n\t              required: true,\n\t              value: this.state.formData.file\n\t            }),\n\t            React.createElement(ButtonElement, { label: 'Upload File' }),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'row' },\n\t              React.createElement(\n\t                'div',\n\t                { className: 'col-sm-9 col-sm-offset-3' },\n\t                React.createElement(_ProgressBar2.default, { value: this.state.uploadProgress })\n\t              )\n\t            )\n\t          )\n\t        )\n\t      );\n\t    }\n\t\n\t    /** *******************************************************************************\n\t     *                      ******     Helper methods     *******\n\t     *********************************************************************************/\n\t\n\t    /**\n\t     * Returns a valid name for the file to be uploaded\n\t     *\n\t     * @param {string} pscid - PSCID selected from the dropdown\n\t     * @param {string} visitLabel - Visit label selected from the dropdown\n\t     * @param {string} instrument - Instrument selected from the dropdown\n\t     * @return {string} - Generated valid filename for the current selection\n\t     */\n\t\n\t  }, {\n\t    key: 'getValidFileName',\n\t    value: function getValidFileName(pscid, visitLabel, instrument) {\n\t      var fileName = pscid + \"_\" + visitLabel;\n\t      if (instrument) fileName += \"_\" + instrument;\n\t\n\t      return fileName;\n\t    }\n\t\n\t    /**\n\t     * Handle form submission\n\t     * @param {object} e - Form submission event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      var formData = this.state.formData;\n\t      var formRefs = this.refs;\n\t      var mediaFiles = this.state.Data.mediaFiles ? this.state.Data.mediaFiles : [];\n\t\n\t      // Validate the form\n\t      if (!this.isValidForm(formRefs, formData)) {\n\t        return;\n\t      }\n\t\n\t      // Validate uploaded file name\n\t      var instrument = formData.instrument ? formData.instrument : null;\n\t      var fileName = formData.file ? formData.file.name.replace(/\\s+/g, '_') : null;\n\t      var requiredFileName = this.getValidFileName(formData.pscid, formData.visitLabel, instrument);\n\t      if (!this.isValidFileName(requiredFileName, fileName)) {\n\t        swal(\"Invalid file name!\", \"File name should begin with: \" + requiredFileName, \"error\");\n\t        return;\n\t      }\n\t\n\t      // Check for duplicate file names\n\t      var isDuplicate = mediaFiles.indexOf(fileName);\n\t      if (isDuplicate >= 0) {\n\t        swal({\n\t          title: \"Are you sure?\",\n\t          text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n\t          type: \"warning\",\n\t          showCancelButton: true,\n\t          confirmButtonText: 'Yes, I am sure!',\n\t          cancelButtonText: \"No, cancel it!\"\n\t        }, function (isConfirm) {\n\t          if (isConfirm) {\n\t            this.uploadFile();\n\t          } else {\n\t            swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n\t          }\n\t        }.bind(this));\n\t      } else {\n\t        this.uploadFile();\n\t      }\n\t    }\n\t\n\t    /*\n\t     * Uploads the file to the server\n\t     */\n\t\n\t  }, {\n\t    key: 'uploadFile',\n\t    value: function uploadFile() {\n\t      // Set form data and upload the media file\n\t      var formData = this.state.formData;\n\t      var formObj = new FormData();\n\t      for (var key in formData) {\n\t        if (formData[key] !== \"\") {\n\t          formObj.append(key, formData[key]);\n\t        }\n\t      }\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: this.props.action,\n\t        data: formObj,\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function () {\n\t          var xhr = new window.XMLHttpRequest();\n\t          xhr.upload.addEventListener(\"progress\", function (evt) {\n\t            if (evt.lengthComputable) {\n\t              var percentage = Math.round(evt.loaded / evt.total * 100);\n\t              this.setState({ uploadProgress: percentage });\n\t            }\n\t          }.bind(this), false);\n\t          return xhr;\n\t        }.bind(this),\n\t        success: function () {\n\t          // Add git pfile to the list of exiting files\n\t          var mediaFiles = JSON.parse(JSON.stringify(this.state.Data.mediaFiles));\n\t          mediaFiles.push(formData.file.name);\n\t\n\t          // Trigger an update event to update all observers (i.e DataTable)\n\t          var event = new CustomEvent('update-datatable');\n\t          window.dispatchEvent(event);\n\t\n\t          this.setState({\n\t            mediaFiles: mediaFiles,\n\t            formData: {}, // reset form data after successful file upload\n\t            uploadProgress: -1\n\t          });\n\t          swal(\"Upload Successful!\", \"\", \"success\");\n\t        }.bind(this),\n\t        error: function (err) {\n\t          console.error(err);\n\t          var msg = err.responseJSON ? err.responseJSON.message : \"Upload error!\";\n\t          this.setState({\n\t            errorMessage: msg,\n\t            uploadProgress: -1\n\t          });\n\t          swal(msg, \"\", \"error\");\n\t        }.bind(this)\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Checks if the inputted file name is valid\n\t     *\n\t     * @param {string} requiredFileName - Required file name\n\t     * @param {string} fileName - Provided file name\n\t     * @return {boolean} - true if fileName starts with requiredFileName, false\n\t     *   otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidFileName',\n\t    value: function isValidFileName(requiredFileName, fileName) {\n\t      if (fileName === null || requiredFileName === null) {\n\t        return false;\n\t      }\n\t\n\t      return fileName.indexOf(requiredFileName) === 0;\n\t    }\n\t\n\t    /**\n\t     * Validate the form\n\t     *\n\t     * @param {object} formRefs - Object containing references to React form elements\n\t     * @param {object} formData - Object containing form data inputed by user\n\t     * @return {boolean} - true if all required fields are filled, false otherwise\n\t     */\n\t\n\t  }, {\n\t    key: 'isValidForm',\n\t    value: function isValidForm(formRefs, formData) {\n\t      var isValidForm = true;\n\t\n\t      var requiredFields = {\n\t        pscid: null,\n\t        visitLabel: null,\n\t        file: null\n\t      };\n\t\n\t      Object.keys(requiredFields).map(function (field) {\n\t        if (formData[field]) {\n\t          requiredFields[field] = formData[field];\n\t        } else if (formRefs[field]) {\n\t          formRefs[field].props.hasError = true;\n\t          isValidForm = false;\n\t        }\n\t      });\n\t      this.forceUpdate();\n\t\n\t      return isValidForm;\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      // Only display visits and sites available for the current pscid\n\t      var visitLabel = this.state.formData.visitLabel;\n\t      var pscid = this.state.formData.pscid;\n\t\n\t      if (formElement === \"pscid\" && value !== \"\") {\n\t        this.state.Data.visits = this.state.Data.sessionData[value].visits;\n\t        this.state.Data.sites = this.state.Data.sessionData[value].sites;\n\t        if (visitLabel) {\n\t          this.state.Data.instruments = this.state.Data.sessionData[value].instruments[visitLabel];\n\t        } else {\n\t          this.state.Data.instruments = this.state.Data.sessionData[value].instruments.all;\n\t        }\n\t      }\n\t\n\t      if (formElement === \"visitLabel\" && value !== \"\" && pscid) {\n\t        this.state.Data.instruments = this.state.Data.sessionData[pscid].instruments[value];\n\t      }\n\t\n\t      var formData = this.state.formData;\n\t      formData[formElement] = value;\n\t\n\t      this.setState({\n\t        formData: formData\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return MediaUploadForm;\n\t}(React.Component);\n\t\n\tMediaUploadForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired\n\t};\n\t\n\texports.default = MediaUploadForm;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Modify behaviour of specified column cells in the Data Table component\n\t * @param {string} column - column name\n\t * @param {string} cell - cell content\n\t * @param {arrray} rowData - array of cell contents for a specific row\n\t * @param {arrray} rowHeaders - array of table headers (column names)\n\t * @return {*} a formated table cell for a given column\n\t */\n\tfunction formatColumn(column, cell, rowData, rowHeaders) {\n\t  // If a column if set as hidden, don't display it\n\t  if (loris.hiddenHeaders.indexOf(column) > -1) {\n\t    return null;\n\t  }\n\t\n\t  // Create the mapping between rowHeaders and rowData in a row object.\n\t  var row = {};\n\t  rowHeaders.forEach(function (header, index) {\n\t    row[header] = rowData[index];\n\t  }, this);\n\t\n\t  // create array of classes to be added to td tag\n\t  var classes = [];\n\t  if (row['Hide File'] === '1') {\n\t    classes.push(\"bg-danger\");\n\t  }\n\t  // convert array to string, with blank space separator\n\t  classes = classes.join(\" \");\n\t\n\t  var hasWritePermission = loris.userHasPermission('media_write');\n\t  if (column === 'File Name' && hasWritePermission === true) {\n\t    var downloadURL = loris.BaseURL + \"/media/ajax/FileDownload.php?File=\" + row['File Name'];\n\t    return React.createElement(\n\t      'td',\n\t      { className: classes },\n\t      React.createElement(\n\t        'a',\n\t        { href: downloadURL, target: '_blank', download: row['File Name'] },\n\t        cell\n\t      )\n\t    );\n\t  }\n\t\n\t  if (column === 'Visit Label') {\n\t    if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n\t      var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" + row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n\t      return React.createElement(\n\t        'td',\n\t        { className: classes },\n\t        React.createElement(\n\t          'a',\n\t          { href: sessionURL },\n\t          cell\n\t        )\n\t      );\n\t    }\n\t  }\n\t\n\t  if (column === 'Edit Metadata') {\n\t    var editURL = loris.BaseURL + \"/media/edit/?id=\" + row['Edit Metadata'];\n\t    return React.createElement(\n\t      'td',\n\t      { className: classes },\n\t      React.createElement(\n\t        'a',\n\t        { href: editURL },\n\t        'Edit'\n\t      )\n\t    );\n\t  }\n\t\n\t  return React.createElement(\n\t    'td',\n\t    { className: classes },\n\t    cell\n\t  );\n\t}\n\t\n\texports.default = formatColumn;\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// modules/media/js/mediaIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2cbc61aff34bad956ada","import FilterForm from 'FilterForm';\nimport {Tabs, TabPane} from 'Tabs';\n\nimport MediaUploadForm from './uploadForm';\nimport formatColumn from './columnFormatter';\n\nclass MediaIndex extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    loris.hiddenHeaders = ['Cand ID', 'Session ID', 'Hide File', 'File Type'];\n\n    this.state = {\n      isLoaded: false,\n      filter: {}\n    };\n\n    // Bind component instance to custom methods\n    this.fetchData = this.fetchData.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  /**\n   * Retrive data from the provided URL and save it in state\n   * Additionaly add hiddenHeaders to global loris vairable\n   * for easy access by columnFormatter.\n   */\n  fetchData() {\n    $.ajax(this.props.DataURL, {\n      method: \"GET\",\n      dataType: 'json',\n      success: function(data) {\n        this.setState({\n          Data: data,\n          isLoaded: true\n        });\n      }.bind(this),\n      error: function(error) {\n        console.error(error);\n      }\n    });\n  }\n\n  updateFilter(filter) {\n    this.setState({filter});\n  }\n\n  resetFilters() {\n    this.refs.mediaFilter.clearFilter();\n  }\n\n  render() {\n    // Waiting for async data to load\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    let uploadTab;\n    let tabList = [\n      {id: \"browse\", label: \"Browse\"}\n    ];\n\n    if (loris.userHasPermission('media_write')) {\n      tabList.push({id: \"upload\", label: \"Upload\"});\n      uploadTab = (\n        <TabPane TabId={tabList[1].id}>\n          <MediaUploadForm\n            DataURL={`${loris.BaseURL}/media/ajax/FileUpload.php?action=getData`}\n            action={`${loris.BaseURL}/media/ajax/FileUpload.php?action=upload`}\n            maxUploadSize={this.state.Data.maxUploadSize}\n          />\n        </TabPane>\n      );\n    }\n    return (\n      <Tabs tabs={tabList} defaultTab=\"browse\" updateURL={true}>\n        <TabPane TabId={tabList[0].id}>\n          <FilterForm\n            Module=\"media\"\n            name=\"media_filter\"\n            id=\"media_filter_form\"\n            ref=\"mediaFilter\"\n            columns={3}\n            formElements={this.state.Data.form}\n            onUpdate={this.updateFilter}\n            filter={this.state.filter}\n          >\n            <br/>\n            <ButtonElement label=\"Clear Filters\" type=\"reset\" onUserInput={this.resetFilters}/>\n          </FilterForm>\n          <StaticDataTable\n            Data={this.state.Data.Data}\n            Headers={this.state.Data.Headers}\n            Filter={this.state.filter}\n            getFormattedCell={formatColumn}\n            freezeColumn=\"File Name\"\n          />\n        </TabPane>\n        {uploadTab}\n      </Tabs>\n    );\n  }\n}\n\n$(function() {\n  const mediaIndex = (\n    <div className=\"page-media\">\n      <MediaIndex DataURL={`${loris.BaseURL}/media/?format=json`} />\n    </div>\n  );\n\n  ReactDOM.render(mediaIndex, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/media/jsx/mediaIndex.js","/**\n * This file contains React component for Panel\n *\n * @author Alex I.\n * @version 1.0.0\n *\n */\n\n/**\n * Panel component\n * Wraps children in a collapsible bootstrap panel\n */\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: this.props.initCollapsed\n    };\n\n    // Initialize panel class based on collapsed status\n    this.panelClass = (\n      this.props.initCollapsed ?\n        \"panel-collapse collapse\" :\n        \"panel-collapse collapse in\"\n    );\n\n    this.toggleCollapsed = this.toggleCollapsed.bind(this);\n  }\n\n  toggleCollapsed() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    // Change arrow direction based on collapse status\n    let glyphClass = (\n      this.state.collapsed ?\n        \"glyphicon pull-right glyphicon-chevron-down\" :\n        \"glyphicon pull-right glyphicon-chevron-up\"\n    );\n\n    // Add panel header, if title is set\n    const panelHeading = this.props.title ? (\n      <div\n        className=\"panel-heading\"\n        onClick={this.toggleCollapsed}\n        data-toggle=\"collapse\"\n        data-target={'#' + this.props.id}\n        style={{cursor: 'pointer'}}\n      >\n        {this.props.title}\n        <span className={glyphClass}></span>\n      </div>\n    ) : '';\n\n    return (\n      <div className=\"panel panel-primary\">\n        {panelHeading}\n        <div id={this.props.id} className={this.panelClass} role=\"tabpanel\">\n          <div className=\"panel-body\" style={{height: this.props.height}}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string\n};\nPanel.defaultProps = {\n  initCollapsed: false,\n  id: 'default-panel',\n  height: '100%'\n};\n\nexport default Panel;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Panel.js","/**\n * This file contains React components for Tabs component.\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\n/**\n * Tabs Component.\n * React wrapper for Bootstrap tabs. Allows to dynamically render tabs\n * and corresponding tab panes.\n *\n * ================================================\n * Usage:\n *\n * 1. Define an array of tabs with IDs and labels\n *\n * `let tabList = [{id: \"tab1\", label: \"This is tab title\"}];`\n *\n * 2. Pass tabList as <Tab> property and <TabPane> as child\n *  ```\n * <Tabs tabs={tabList} defaultTab=\"tab1\">\n *   <TabPane TabId={tabList[0].id}>\n *     // Tab content goes here\n *   </TabPane>\n * </Tabs>\n * ```\n * =================================================\n *\n */\nclass Tabs extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const hash = window.location.hash;\n    let activeTab = \"\";\n\n    /**\n     * Determine the initial active tab in this order\n     * 1. Try to infer from the URL, otherwise\n     * 2. Try to infer from the defaultTab prop, otherwise\n     * 3. Set to be the first tab of the list\n     */\n    if (this.props.updateURL && hash) {\n      activeTab = hash.substr(1);\n    } else if (this.props.defaultTab) {\n      activeTab = this.props.defaultTab;\n    } else if (this.props.tabs.length > 0) {\n      activeTab = this.props.tabs[0].id;\n    }\n\n    this.state = {\n      activeTab: activeTab\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getTabs = this.getTabs.bind(this);\n    this.getTabPanes = this.getTabPanes.bind(this);\n  }\n\n  handleClick(tabId, e) {\n    this.setState({activeTab: tabId});\n    this.props.onTabChange(tabId);\n\n    // Add tab href to URL querystring and scroll the page to top\n    if (this.props.updateURL) {\n      const scrollDistance = $('body').scrollTop() || $('html').scrollTop();\n      window.location.hash = e.target.hash;\n      $('html,body').scrollTop(scrollDistance);\n    }\n  }\n\n  getTabs() {\n    let tabs = (this.props.tabs).map(function(tab) {\n      let tabClass = this.state.activeTab === tab.id ? 'active' : null;\n      let href = \"#\" + tab.id;\n      let tabID = \"tab-\" + tab.id;\n      return (\n        <li\n          role=\"presentation\"\n          className={tabClass}\n          key={tab.id}\n        >\n          <a id={tabID}\n             href={href}\n             role=\"tab\"\n             data-toggle=\"tab\"\n             onClick={this.handleClick.bind(null, tab.id)}\n          >\n            {tab.label}\n          </a>\n        </li>\n      );\n    }.bind(this));\n\n    return tabs;\n  }\n\n  getTabPanes() {\n    let tabPanes = React.Children.map(this.props.children, function(child, key) {\n      if (child) {\n        return React.cloneElement(child, {\n          activeTab: this.state.activeTab,\n          key: key\n        });\n      }\n    }.bind(this));\n\n    return tabPanes;\n  }\n\n  render() {\n    let tabs = this.getTabs();\n    let tabPanes = this.getTabPanes();\n    let tabStyle = {\n      marginLeft: 0,\n      marginBottom: '5px'\n    };\n\n    return (\n      <div>\n        <ul className=\"nav nav-tabs\" role=\"tablist\" style={tabStyle}>\n          {tabs}\n        </ul>\n        <div className=\"tab-content\">\n          {tabPanes}\n        </div>\n      </div>\n    );\n  }\n}\nTabs.propTypes = {\n  tabs: React.PropTypes.array.isRequired,\n  defaultTab: React.PropTypes.string,\n  updateURL: React.PropTypes.bool\n};\nTabs.defaultProps = {\n  onTabChange: function() {},\n  updateURL: false\n};\n\n/*\n * TabPane component.\n * Used to wrap content for every tab.\n */\nclass TabPane extends React.Component {\n  render() {\n    let classList = \"tab-pane\";\n    let title;\n\n    if (this.props.TabId === this.props.activeTab) {\n      classList += \" active\";\n    }\n    if (this.props.Title) {\n      title = <h1>{this.props.Title}</h1>;\n    }\n\n    return (\n      <div role=\"tabpanel\" className={classList} id={this.props.TabId}>\n        {title}\n        {this.props.children}\n      </div>\n    );\n  }\n}\nTabPane.propTypes = {\n  TabId: React.PropTypes.string.isRequired,\n  Title: React.PropTypes.string,\n  activeTab: React.PropTypes.string\n};\n\nexport {\n  Tabs,\n  TabPane\n};\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/Tabs.js","/**\n * This file contains React component for FilterForm\n *\n * @author Loris Team\n * @version 1.1.0\n *\n */\n\nimport Panel from 'Panel';\n\n/**\n * FilterForm component.\n * A wrapper for form elements inside a selection filter.\n *\n * Adds necessary filter callbacks to all children and passes them to FormElement\n * for proper rendering.\n *\n * Keeps track of filter object and sends it to parent on every update.\n *\n * //HACK/NOTE: Loris has special behaviour for `candID` attribute in the query string,\n * making it impossible to use it for selection filters. This components renames\n * all `candID` fields to `candidateID` automatically before appending them to URL.\n *\n */\nclass FilterForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // Bind component instance to custom methods\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFormChildren = this.getFormChildren.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.onElementUpdate = this.onElementUpdate.bind(this);\n\n    // Keeps track of querystring values\n    // Saved as class variable instead of keeping in state\n    this.queryString = QueryString.get();\n  }\n\n  componentDidMount() {\n    let filter = {};\n    let queryString = this.queryString;\n\n    // Initiaze filter using querystring value\n    Object.keys(queryString).forEach(function(key) {\n      let filterKey = (key === 'candidateID') ? 'candID' : key;\n      filter[filterKey] = {\n        value: queryString[key],\n        exactMatch: false\n      };\n    });\n\n    // Update parent component\n    this.props.onUpdate(filter);\n  }\n\n  /**\n   * Clear the filter object, querystring and input fields\n   */\n  clearFilter() {\n    this.queryString = QueryString.clear(this.props.Module);\n    this.props.onUpdate({});\n  }\n\n  /**\n   * Itterates through FilterForm children, sets necessary callback functions\n   * and initializes filterTable\n   *\n   * @return {Array} formChildren - array of children with necessary props\n   */\n  getFormChildren() {\n    let formChildren = [];\n    React.Children.forEach(this.props.children, function(child, key) {\n      // If child is a React component (i.e not a simple DOM element)\n      if (React.isValidElement(child) &&\n        typeof child.type === \"function\" &&\n        child.props.onUserInput\n      ) {\n        let callbackFunc = child.props.onUserInput;\n        let callbackName = callbackFunc.name;\n        let elementName = child.type.displayName;\n        let queryFieldName = (child.props.name === 'candID') ? 'candidateID' : child.props.name;\n        let filterValue = this.queryString[queryFieldName];\n        // If callback function was not set, set it to onElementUpdate() for form\n        // elements and to clearFilter() for <ButtonElement type='reset'/>.\n        if (callbackName === \"onUserInput\") {\n          if (elementName === \"ButtonElement\" && child.props.type === \"reset\") {\n            callbackFunc = this.clearFilter;\n          } else {\n            callbackFunc = this.onElementUpdate.bind(null, elementName);\n          }\n        }\n        // Pass onUserInput and value props to all children\n        formChildren.push(React.cloneElement(child, {\n          onUserInput: callbackFunc,\n          value: filterValue ? filterValue : '',\n          key: key\n        }));\n        // Initialize filter for StaticDataTable\n        this.setFilter(elementName, child.props.name, filterValue);\n      } else {\n        formChildren.push(React.cloneElement(child, {key: key}));\n      }\n    }.bind(this));\n\n    return formChildren;\n  }\n\n  /**\n   * Appends entry to filter object or deletes it if value is\n   * empty.\n   *\n   * Sets exactMatch to true for all SelectElements (i.e dropdowns)\n   * in order to force StaticDataTable to do exact comparaison\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} key - the name of the form element\n   * @param {string} value - the value of the form element\n   *\n   * @return {{}} filter - filterData\n   */\n  setFilter(type, key, value) {\n    let filter = {};\n    if (this.props.filter) {\n      filter = JSON.parse(JSON.stringify(this.props.filter));\n    }\n\n    if (key && value) {\n      filter[key] = {};\n      filter[key].value = value;\n      filter[key].exactMatch = (type === \"SelectElement\");\n    } else if (filter && key && value === '') {\n      delete filter[key];\n    }\n\n    return filter;\n  }\n\n  /**\n   * Sets filter object and querystring to reflect values of input fields\n   *\n   * @param {string} type - form element type (i.e component name)\n   * @param {string} fieldName - the name of the form element\n   * @param {string} fieldValue - the value of the form element\n   */\n  onElementUpdate(type, fieldName, fieldValue) {\n    // Make sure both key/value are string before sending them to querystring\n    if (typeof fieldName !== \"string\" || typeof fieldValue !== \"string\") {\n      return;\n    }\n\n    // Update query string\n    let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n    this.queryString = QueryString.set(this.queryString, queryFieldName, fieldValue);\n\n    // Update filter and get new filter object\n    let filter = this.setFilter(type, fieldName, fieldValue);\n    this.props.onUpdate(filter);\n  }\n\n  render() {\n    // Get formatted children\n    let formChildren = this.getFormChildren();\n    let formElements = this.props.formElements;\n\n    if (formElements) {\n      Object.keys(formElements).forEach(function(fieldName) {\n        let queryFieldName = (fieldName === 'candID') ? 'candidateID' : fieldName;\n        formElements[fieldName].onUserInput = this.onElementUpdate.bind(null, fieldName);\n        formElements[fieldName].value = this.queryString[queryFieldName];\n      }.bind(this));\n    }\n\n    return (\n      <Panel\n        id={this.props.id}\n        height={this.props.height}\n        title={this.props.title}\n      >\n        <FormElement {...this.props}>\n          {formChildren}\n        </FormElement>\n      </Panel>\n    );\n  }\n}\n\nFilterForm.defaultProps = {\n  id: 'selection-filter',\n  height: '100%',\n  title: 'Selection Filter',\n  onUpdate: function() {\n    console.warn('onUpdate() callback is not set!');\n  }\n};\nFilterForm.propTypes = {\n  Module: React.PropTypes.string.isRequired,\n  filter: React.PropTypes.object.isRequired,\n  id: React.PropTypes.string,\n  height: React.PropTypes.string,\n  title: React.PropTypes.string,\n  onUpdate: React.PropTypes.func\n};\n\nexport default FilterForm;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/FilterForm.js","/**\n * React ProgressBar.\n *\n * Updates UI automatically when passed a progress value between 0 and 100.\n * To hide progress bar before/after upload, set value to -1.\n *\n * Note: This component relies on Bootstrap 3 progress-bar classes\n * (http://getbootstrap.com/components/#progress)\n */\nclass ProgressBar extends React.Component {\n  render() {\n    const progressStyle = {\n      display: (this.props.value < 0 ? 'none' : 'block'),\n      backgroundColor: '#d3d3d3',\n      height: '30px',\n      position: 'relative'\n    };\n\n    const labelStyle = {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1000,\n      width: '100%',\n      color: '#fff',\n      textAlign: 'center',\n      lineHeight: '30px',\n      fontWeight: '600'\n    };\n\n    return (\n      <div className=\"progress\" style={progressStyle}>\n        <div\n          className=\"progress-bar progress-bar-striped active\"\n          role=\"progressbar\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          aria-valuenow={this.props.value}\n          style={{width: (this.props.value + '%')}}\n        >\n        </div>\n        <span style={labelStyle}>{this.props.value}%</span>\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: React.PropTypes.number\n};\nProgressBar.defaultProps = {\n  value: 0\n};\n\nexport default ProgressBar;\n\n\n\n// WEBPACK FOOTER //\n// ./jsx/ProgressBar.js","import ProgressBar from 'ProgressBar';\n\n/**\n * Media Upload Form\n *\n * Fetches data from Loris backend and displays a form allowing\n * to upload a media file attached to a specific instrument\n *\n * @author Alex Ilea\n * @version 1.0.0\n *\n * */\nclass MediaUploadForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Data: {},\n      formData: {},\n      uploadResult: null,\n      errorMessage: null,\n      isLoaded: false,\n      loadedData: 0,\n      uploadProgress: -1\n    };\n\n    this.getValidFileName = this.getValidFileName.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isValidFileName = this.isValidFileName.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    $.ajax(this.props.DataURL, {\n      dataType: 'json',\n      success: function(data) {\n        self.setState({\n          Data: data,\n          isLoaded: true\n        });\n      },\n      error: function(data, errorCode, errorMsg) {\n        console.error(data, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    var helpText = (\n      <span>\n        File name must begin with <b>[PSCID]_[Visit Label]_[Instrument]</b><br/>\n        For example, for candidate <i>ABC123</i>, visit <i>V1</i> for\n        <i>Body Mass Index</i> the file name should be prefixed by:\n        <b> ABC123_V1_Body_Mass_Index</b><br/>\n        File cannot exceed {this.props.maxUploadSize}\n      </span>\n    );\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-8 col-lg-7\">\n          <FormElement\n            name=\"mediaUpload\"\n            fileUpload={true}\n            onSubmit={this.handleSubmit}\n            ref=\"form\"\n          >\n            <h3>Upload a media file</h3><br/>\n            <StaticElement\n              label=\"Note\"\n              text={helpText}\n            />\n            <SelectElement\n              name=\"pscid\"\n              label=\"PSCID\"\n              options={this.state.Data.candidates}\n              onUserInput={this.setFormData}\n              ref=\"pscid\"\n              hasError={false}\n              required={true}\n              value={this.state.formData.pscid}\n            />\n            <SelectElement\n              name=\"visitLabel\"\n              label=\"Visit Label\"\n              options={this.state.Data.visits}\n              onUserInput={this.setFormData}\n              ref=\"visitLabel\"\n              required={true}\n              value={this.state.formData.visitLabel}\n            />\n            <SelectElement\n              name=\"forSite\"\n              label=\"Site\"\n              options={this.state.Data.sites}\n              onUserInput={this.setFormData}\n              ref=\"forSite\"\n              required={true}\n              value={this.state.formData.forSite}\n            />\n            <SelectElement\n              name=\"instrument\"\n              label=\"Instrument\"\n              options={this.state.Data.instruments}\n              onUserInput={this.setFormData}\n              ref=\"instrument\"\n              value={this.state.formData.instrument}\n            />\n            <DateElement\n              name=\"dateTaken\"\n              label=\"Date of Administration\"\n              minYear=\"2000\"\n              maxYear=\"2017\"\n              onUserInput={this.setFormData}\n              ref=\"dateTaken\"\n              value={this.state.formData.dateTaken}\n            />\n            <TextareaElement\n              name=\"comments\"\n              label=\"Comments\"\n              onUserInput={this.setFormData}\n              ref=\"comments\"\n              value={this.state.formData.comments}\n            />\n            <FileElement\n              name=\"file\"\n              id=\"mediaUploadEl\"\n              onUserInput={this.setFormData}\n              ref=\"file\"\n              label=\"File to upload\"\n              required={true}\n              value={this.state.formData.file}\n            />\n            <ButtonElement label=\"Upload File\"/>\n            <div className=\"row\">\n              <div className=\"col-sm-9 col-sm-offset-3\">\n                <ProgressBar value={this.state.uploadProgress}/>\n              </div>\n            </div>\n          </FormElement>\n        </div>\n      </div>\n    );\n  }\n\n/** *******************************************************************************\n *                      ******     Helper methods     *******\n *********************************************************************************/\n\n  /**\n   * Returns a valid name for the file to be uploaded\n   *\n   * @param {string} pscid - PSCID selected from the dropdown\n   * @param {string} visitLabel - Visit label selected from the dropdown\n   * @param {string} instrument - Instrument selected from the dropdown\n   * @return {string} - Generated valid filename for the current selection\n   */\n  getValidFileName(pscid, visitLabel, instrument) {\n    var fileName = pscid + \"_\" + visitLabel;\n    if (instrument) fileName += \"_\" + instrument;\n\n    return fileName;\n  }\n\n  /**\n   * Handle form submission\n   * @param {object} e - Form submission event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let formData = this.state.formData;\n    let formRefs = this.refs;\n    let mediaFiles = this.state.Data.mediaFiles ? this.state.Data.mediaFiles : [];\n\n    // Validate the form\n    if (!this.isValidForm(formRefs, formData)) {\n      return;\n    }\n\n    // Validate uploaded file name\n    let instrument = formData.instrument ? formData.instrument : null;\n    let fileName = formData.file ? formData.file.name.replace(/\\s+/g, '_') : null;\n    let requiredFileName = this.getValidFileName(\n      formData.pscid, formData.visitLabel, instrument\n    );\n    if (!this.isValidFileName(requiredFileName, fileName)) {\n      swal(\n        \"Invalid file name!\",\n        \"File name should begin with: \" + requiredFileName,\n        \"error\"\n      );\n      return;\n    }\n\n    // Check for duplicate file names\n    let isDuplicate = mediaFiles.indexOf(fileName);\n    if (isDuplicate >= 0) {\n      swal({\n        title: \"Are you sure?\",\n        text: \"A file with this name already exists!\\n Would you like to override existing file?\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes, I am sure!',\n        cancelButtonText: \"No, cancel it!\"\n      }, function(isConfirm) {\n        if (isConfirm) {\n          this.uploadFile();\n        } else {\n          swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n        }\n      }.bind(this));\n    } else {\n      this.uploadFile();\n    }\n  }\n\n  /*\n   * Uploads the file to the server\n   */\n  uploadFile() {\n    // Set form data and upload the media file\n    let formData = this.state.formData;\n    let formObj = new FormData();\n    for (let key in formData) {\n      if (formData[key] !== \"\") {\n        formObj.append(key, formData[key]);\n      }\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: this.props.action,\n      data: formObj,\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        let xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n          if (evt.lengthComputable) {\n            let percentage = Math.round((evt.loaded / evt.total) * 100);\n            this.setState({uploadProgress: percentage});\n          }\n        }.bind(this), false);\n        return xhr;\n      }.bind(this),\n      success: function() {\n        // Add git pfile to the list of exiting files\n        let mediaFiles = JSON.parse(JSON.stringify(this.state.Data.mediaFiles));\n        mediaFiles.push(formData.file.name);\n\n        // Trigger an update event to update all observers (i.e DataTable)\n        let event = new CustomEvent('update-datatable');\n        window.dispatchEvent(event);\n\n        this.setState({\n          mediaFiles: mediaFiles,\n          formData: {}, // reset form data after successful file upload\n          uploadProgress: -1\n        });\n        swal(\"Upload Successful!\", \"\", \"success\");\n      }.bind(this),\n      error: function(err) {\n        console.error(err);\n        let msg = err.responseJSON ? err.responseJSON.message : \"Upload error!\";\n        this.setState({\n          errorMessage: msg,\n          uploadProgress: -1\n        });\n        swal(msg, \"\", \"error\");\n      }.bind(this)\n    });\n  }\n\n  /**\n   * Checks if the inputted file name is valid\n   *\n   * @param {string} requiredFileName - Required file name\n   * @param {string} fileName - Provided file name\n   * @return {boolean} - true if fileName starts with requiredFileName, false\n   *   otherwise\n   */\n  isValidFileName(requiredFileName, fileName) {\n    if (fileName === null || requiredFileName === null) {\n      return false;\n    }\n\n    return (fileName.indexOf(requiredFileName) === 0);\n  }\n\n  /**\n   * Validate the form\n   *\n   * @param {object} formRefs - Object containing references to React form elements\n   * @param {object} formData - Object containing form data inputed by user\n   * @return {boolean} - true if all required fields are filled, false otherwise\n   */\n  isValidForm(formRefs, formData) {\n    var isValidForm = true;\n\n    var requiredFields = {\n      pscid: null,\n      visitLabel: null,\n      file: null\n    };\n\n    Object.keys(requiredFields).map(function(field) {\n      if (formData[field]) {\n        requiredFields[field] = formData[field];\n      } else if (formRefs[field]) {\n        formRefs[field].props.hasError = true;\n        isValidForm = false;\n      }\n    });\n    this.forceUpdate();\n\n    return isValidForm;\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    // Only display visits and sites available for the current pscid\n    let visitLabel = this.state.formData.visitLabel;\n    let pscid = this.state.formData.pscid;\n\n    if (formElement === \"pscid\" && value !== \"\") {\n      this.state.Data.visits = this.state.Data.sessionData[value].visits;\n      this.state.Data.sites = this.state.Data.sessionData[value].sites;\n      if (visitLabel) {\n        this.state.Data.instruments =\n          this.state.Data.sessionData[value].instruments[visitLabel];\n      } else {\n        this.state.Data.instruments =\n          this.state.Data.sessionData[value].instruments.all;\n      }\n    }\n\n    if (formElement === \"visitLabel\" && value !== \"\" && pscid) {\n      this.state.Data.instruments =\n        this.state.Data.sessionData[pscid].instruments[value];\n    }\n\n    var formData = this.state.formData;\n    formData[formElement] = value;\n\n    this.setState({\n      formData: formData\n    });\n  }\n}\n\nMediaUploadForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired\n};\n\nexport default MediaUploadForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/media/jsx/uploadForm.js","/**\n * Modify behaviour of specified column cells in the Data Table component\n * @param {string} column - column name\n * @param {string} cell - cell content\n * @param {arrray} rowData - array of cell contents for a specific row\n * @param {arrray} rowHeaders - array of table headers (column names)\n * @return {*} a formated table cell for a given column\n */\nfunction formatColumn(column, cell, rowData, rowHeaders) {\n  // If a column if set as hidden, don't display it\n  if (loris.hiddenHeaders.indexOf(column) > -1) {\n    return null;\n  }\n\n  // Create the mapping between rowHeaders and rowData in a row object.\n  var row = {};\n  rowHeaders.forEach(function(header, index) {\n    row[header] = rowData[index];\n  }, this);\n\n  // create array of classes to be added to td tag\n  var classes = [];\n  if (row['Hide File'] === '1') {\n    classes.push(\"bg-danger\");\n  }\n  // convert array to string, with blank space separator\n  classes = classes.join(\" \");\n\n  const hasWritePermission = loris.userHasPermission('media_write');\n  if (column === 'File Name' && hasWritePermission === true) {\n    var downloadURL = loris.BaseURL + \"/media/ajax/FileDownload.php?File=\" + row['File Name'];\n    return (\n      <td className= {classes}>\n        <a href={downloadURL} target=\"_blank\" download={row['File Name']}>\n          {cell}\n        </a>\n      </td>\n    );\n  }\n\n  if (column === 'Visit Label') {\n    if (row[\"Cand ID\"] !== null && row[\"Session ID\"]) {\n      var sessionURL = loris.BaseURL + \"/instrument_list/?candID=\" +\n        row[\"Cand ID\"] + \"&sessionID=\" + row[\"Session ID\"];\n      return <td className={classes}><a href={sessionURL}>{cell}</a></td>;\n    }\n  }\n\n  if (column === 'Edit Metadata') {\n    var editURL = loris.BaseURL + \"/media/edit/?id=\" + row['Edit Metadata'];\n    return <td className={classes}><a href={editURL}>Edit</a></td>;\n  }\n\n  return <td className={classes}>{cell}</td>;\n}\n\nexport default formatColumn;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/media/jsx/columnFormatter.js"],"sourceRoot":""}