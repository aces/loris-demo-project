{"version":3,"sources":["webpack:///modules/media/js/editFormIndex.js","webpack:///webpack/bootstrap c878362fe357f08fbab2?15e8************************************","webpack:///./modules/media/jsx/editFormIndex.js","webpack:///./modules/media/jsx/editForm.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_editForm","_editForm2","args","QueryString","get","document","currentScript","src","$","mediaEditForm","React","createElement","className","DataURL","loris","BaseURL","action","ReactDOM","render","getElementById","22","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","MediaEditForm","_React$Component","this","_this","getPrototypeOf","state","Data","formData","uploadResult","isLoaded","loadedData","handleSubmit","bind","setFormData","showAlertMessage","ajax","dataType","success","data","idMediaFile","mediaData","forSite","dateTaken","comments","hideFile","setState","error","errorCode","errorMsg","console","undefined","alertMessage","alertClass","backURL","concat","role","ref","href","FormElement","name","onSubmit","SelectElement","label","options","candidates","onUserInput","required","disabled","pscid","visits","visitLabel","sites","instruments","instrument","DateElement","minYear","maxYear","TextareaElement","FileElement","fileName","emptyOption","ButtonElement","e","preventDefault","myFormData","hide","removeClass","type","url","JSON","stringify","cache","contentType","processData","xhr","window","XMLHttpRequest","upload","addEventListener","evt","lengthComputable","progressbar","progresslabel","percent","Math","round","total","width","html","attr","addClass","err","formElement","refs","alertMsg","fadeTo","delay","slideUp","Component","propTypes","PropTypes","string","isRequired","RMediaEditForm","createFactory"],"mappings":"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","file":"./modules/media/js/editFormIndex.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _editForm = __webpack_require__(22);\n\t\n\tvar _editForm2 = _interopRequireDefault(_editForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar args = QueryString.get(document.currentScript.src); /* global ReactDOM */\n\t\n\t$(function () {\n\t  var mediaEditForm = React.createElement(\n\t    \"div\",\n\t    { className: \"page-edit-form\" },\n\t    React.createElement(\n\t      \"div\",\n\t      { className: \"row\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"col-md-9 col-lg-7\" },\n\t        React.createElement(_editForm2.default, {\n\t          DataURL: loris.BaseURL + \"/media/ajax/FileUpload.php?action=getData&idMediaFile=\" + args.id,\n\t          action: loris.BaseURL + \"/media/ajax/FileUpload.php?action=edit\"\n\t        })\n\t      )\n\t    )\n\t  );\n\t\n\t  ReactDOM.render(mediaEditForm, document.getElementById(\"lorisworkspace\"));\n\t});\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/* exported RMediaEditForm */\n\t\n\t/**\n\t * Media Edit Form\n\t *\n\t * Fetches data corresponding to a given file from Loris backend and\n\t * displays a form allowing meta information of the media file\n\t *\n\t * @author Alex Ilea\n\t * @version 1.0.0\n\t *\n\t * */\n\tvar MediaEditForm = function (_React$Component) {\n\t  _inherits(MediaEditForm, _React$Component);\n\t\n\t  function MediaEditForm(props) {\n\t    _classCallCheck(this, MediaEditForm);\n\t\n\t    var _this = _possibleConstructorReturn(this, (MediaEditForm.__proto__ || Object.getPrototypeOf(MediaEditForm)).call(this, props));\n\t\n\t    _this.state = {\n\t      Data: {},\n\t      formData: {},\n\t      uploadResult: null,\n\t      isLoaded: false,\n\t      loadedData: 0\n\t    };\n\t\n\t    _this.handleSubmit = _this.handleSubmit.bind(_this);\n\t    _this.setFormData = _this.setFormData.bind(_this);\n\t    _this.showAlertMessage = _this.showAlertMessage.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(MediaEditForm, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      var self = this;\n\t      $.ajax(this.props.DataURL, {\n\t        dataType: 'json',\n\t        success: function success(data) {\n\t          var formData = {\n\t            idMediaFile: data.mediaData.id,\n\t            forSite: data.mediaData.forSite,\n\t            dateTaken: data.mediaData.dateTaken,\n\t            comments: data.mediaData.comments,\n\t            hideFile: data.mediaData.hideFile\n\t          };\n\t\n\t          self.setState({\n\t            Data: data,\n\t            isLoaded: true,\n\t            mediaData: data.mediaData,\n\t            formData: formData\n\t          });\n\t        },\n\t        error: function error(_error, errorCode, errorMsg) {\n\t          console.error(_error, errorCode, errorMsg);\n\t          self.setState({\n\t            error: 'An error occurred when loading the form!'\n\t          });\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Data loading error\n\t      if (this.state.error !== undefined) {\n\t        return React.createElement(\n\t          'div',\n\t          { className: 'alert alert-danger text-center' },\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            this.state.error\n\t          )\n\t        );\n\t      }\n\t\n\t      // Waiting for data to load\n\t      if (!this.state.isLoaded) {\n\t        return React.createElement(\n\t          'button',\n\t          { className: 'btn-info has-spinner' },\n\t          'Loading',\n\t          React.createElement('span', {\n\t            className: 'glyphicon glyphicon-refresh glyphicon-refresh-animate' })\n\t        );\n\t      }\n\t\n\t      var alertMessage = \"\";\n\t      var alertClass = \"alert text-center hide\";\n\t      var backURL = loris.BaseURL.concat('/media/');\n\t\n\t      if (this.state.uploadResult) {\n\t        if (this.state.uploadResult === \"success\") {\n\t          alertClass = \"alert alert-success text-center\";\n\t          alertMessage = \"Update Successful!\";\n\t        } else if (this.state.uploadResult === \"error\") {\n\t          alertClass = \"alert alert-danger text-center\";\n\t          alertMessage = \"Failed to update the file\";\n\t        }\n\t      }\n\t\n\t      return React.createElement(\n\t        'div',\n\t        null,\n\t        React.createElement(\n\t          'div',\n\t          { className: alertClass, role: 'alert', ref: 'alert-message' },\n\t          alertMessage\n\t        ),\n\t        this.state.uploadResult === \"success\" ? React.createElement(\n\t          'a',\n\t          { className: 'btn btn-primary', href: backURL },\n\t          'Back to media'\n\t        ) : null,\n\t        React.createElement(\n\t          FormElement,\n\t          {\n\t            name: 'mediaEdit',\n\t            onSubmit: this.handleSubmit,\n\t            ref: 'form'\n\t          },\n\t          React.createElement(\n\t            'h3',\n\t            null,\n\t            'Edit Media File'\n\t          ),\n\t          React.createElement('br', null),\n\t          React.createElement(SelectElement, {\n\t            name: 'pscid',\n\t            label: 'PSCID',\n\t            options: this.state.Data.candidates,\n\t            onUserInput: this.setFormData,\n\t            ref: 'pscid',\n\t            required: true,\n\t            disabled: true,\n\t            value: this.state.mediaData.pscid\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'visitLabel',\n\t            label: 'Visit Label',\n\t            options: this.state.Data.visits,\n\t            onUserInput: this.setFormData,\n\t            ref: 'visitLabel',\n\t            required: true,\n\t            disabled: true,\n\t            value: this.state.mediaData.visitLabel\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'forSite',\n\t            label: 'Site',\n\t            options: this.state.Data.sites,\n\t            onUserInput: this.setFormData,\n\t            ref: 'forSite',\n\t            disabled: true,\n\t            value: this.state.mediaData.forSite\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'instrument',\n\t            label: 'Instrument',\n\t            options: this.state.Data.instruments,\n\t            onUserInput: this.setFormData,\n\t            ref: 'instrument',\n\t            disabled: true,\n\t            value: this.state.mediaData.instrument\n\t          }),\n\t          React.createElement(DateElement, {\n\t            name: 'dateTaken',\n\t            label: 'Date of Administration',\n\t            minYear: '2000',\n\t            maxYear: '2017',\n\t            onUserInput: this.setFormData,\n\t            ref: 'dateTaken',\n\t            value: this.state.formData.dateTaken\n\t          }),\n\t          React.createElement(TextareaElement, {\n\t            name: 'comments',\n\t            label: 'Comments',\n\t            onUserInput: this.setFormData,\n\t            ref: 'comments',\n\t            value: this.state.formData.comments\n\t          }),\n\t          React.createElement(FileElement, {\n\t            name: 'file',\n\t            id: 'mediaEditEl',\n\t            onUserInput: this.setFormData,\n\t            required: true,\n\t            disabled: true,\n\t            ref: 'file',\n\t            label: 'Uploaded file',\n\t            value: this.state.mediaData.fileName\n\t          }),\n\t          React.createElement(SelectElement, {\n\t            name: 'hideFile',\n\t            label: 'Hide File',\n\t            emptyOption: false,\n\t            options: [\"No\", \"Yes\"],\n\t            onUserInput: this.setFormData,\n\t            ref: 'hideFile',\n\t            value: this.state.formData.hideFile\n\t          }),\n\t          React.createElement(ButtonElement, { label: 'Update File' })\n\t        )\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Handles form submission\n\t     * @param {event} e - Form submition event\n\t     */\n\t\n\t  }, {\n\t    key: 'handleSubmit',\n\t    value: function handleSubmit(e) {\n\t      e.preventDefault();\n\t\n\t      var self = this;\n\t      var myFormData = this.state.formData;\n\t\n\t      $('#mediaEditEl').hide();\n\t      $(\"#file-progress\").removeClass('hide');\n\t\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: self.props.action,\n\t        data: JSON.stringify(myFormData),\n\t        cache: false,\n\t        contentType: false,\n\t        processData: false,\n\t        xhr: function xhr() {\n\t          var xhr = new window.XMLHttpRequest();\n\t          xhr.upload.addEventListener(\"progress\", function (evt) {\n\t            if (evt.lengthComputable) {\n\t              var progressbar = $(\"#progressbar\");\n\t              var progresslabel = $(\"#progresslabel\");\n\t              var percent = Math.round(evt.loaded / evt.total * 100);\n\t              $(progressbar).width(percent + \"%\");\n\t              $(progresslabel).html(percent + \"%\");\n\t              progressbar.attr('aria-valuenow', percent);\n\t            }\n\t          }, false);\n\t          return xhr;\n\t        },\n\t        success: function success(data) {\n\t          $(\"#file-progress\").addClass('hide');\n\t          self.setState({\n\t            uploadResult: \"success\"\n\t          });\n\t          self.showAlertMessage();\n\t        },\n\t        error: function error(err) {\n\t          console.error(err);\n\t          self.setState({\n\t            uploadResult: \"error\"\n\t          });\n\t          self.showAlertMessage();\n\t        }\n\t\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Set the form data based on state values of child elements/componenets\n\t     *\n\t     * @param {string} formElement - name of the selected element\n\t     * @param {string} value - selected value for corresponding form element\n\t     */\n\t\n\t  }, {\n\t    key: 'setFormData',\n\t    value: function setFormData(formElement, value) {\n\t      var formData = this.state.formData;\n\t\n\t      if (value === \"\") {\n\t        formData[formElement] = null;\n\t      } else {\n\t        formData[formElement] = value;\n\t      }\n\t\n\t      this.setState({\n\t        formData: formData\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Display a success/error alert message after form submission\n\t     */\n\t\n\t  }, {\n\t    key: 'showAlertMessage',\n\t    value: function showAlertMessage() {\n\t      var self = this;\n\t\n\t      if (this.refs[\"alert-message\"] === null) {\n\t        return;\n\t      }\n\t\n\t      var alertMsg = this.refs[\"alert-message\"];\n\t      $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function () {\n\t        self.setState({\n\t          uploadResult: null\n\t        });\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return MediaEditForm;\n\t}(React.Component);\n\t\n\tMediaEditForm.propTypes = {\n\t  DataURL: React.PropTypes.string.isRequired,\n\t  action: React.PropTypes.string.isRequired\n\t};\n\t\n\tvar RMediaEditForm = React.createFactory(MediaEditForm);\n\t\n\twindow.MediaEditForm = MediaEditForm;\n\twindow.RMediaEditForm = RMediaEditForm;\n\t\n\texports.default = MediaEditForm;\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// modules/media/js/editFormIndex.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c878362fe357f08fbab2","/* global ReactDOM */\n\nimport MediaEditForm from './editForm';\nconst args = QueryString.get(document.currentScript.src);\n\n$(function() {\n  const mediaEditForm = (\n    <div className=\"page-edit-form\">\n      <div className=\"row\">\n        <div className=\"col-md-9 col-lg-7\">\n          <MediaEditForm\n            DataURL={`${loris.BaseURL}/media/ajax/FileUpload.php?action=getData&idMediaFile=${args.id}`}\n            action={`${loris.BaseURL}/media/ajax/FileUpload.php?action=edit`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  ReactDOM.render(mediaEditForm, document.getElementById(\"lorisworkspace\"));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/media/jsx/editFormIndex.js","/* exported RMediaEditForm */\n\n/**\n * Media Edit Form\n *\n * Fetches data corresponding to a given file from Loris backend and\n * displays a form allowing meta information of the media file\n *\n * @author Alex Ilea\n * @version 1.0.0\n *\n * */\nclass MediaEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Data: {},\n      formData: {},\n      uploadResult: null,\n      isLoaded: false,\n      loadedData: 0\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setFormData = this.setFormData.bind(this);\n    this.showAlertMessage = this.showAlertMessage.bind(this);\n  }\n\n  componentDidMount() {\n    var self = this;\n    $.ajax(this.props.DataURL, {\n      dataType: 'json',\n      success: function(data) {\n        var formData = {\n          idMediaFile: data.mediaData.id,\n          forSite: data.mediaData.forSite,\n          dateTaken: data.mediaData.dateTaken,\n          comments: data.mediaData.comments,\n          hideFile: data.mediaData.hideFile\n        };\n\n        self.setState({\n          Data: data,\n          isLoaded: true,\n          mediaData: data.mediaData,\n          formData: formData\n        });\n      },\n      error: function(error, errorCode, errorMsg) {\n        console.error(error, errorCode, errorMsg);\n        self.setState({\n          error: 'An error occurred when loading the form!'\n        });\n      }\n    });\n  }\n\n  render() {\n    // Data loading error\n    if (this.state.error !== undefined) {\n      return (\n        <div className=\"alert alert-danger text-center\">\n          <strong>\n            {this.state.error}\n          </strong>\n        </div>\n      );\n    }\n\n    // Waiting for data to load\n    if (!this.state.isLoaded) {\n      return (\n        <button className=\"btn-info has-spinner\">\n          Loading\n          <span\n            className=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\">\n          </span>\n        </button>\n      );\n    }\n\n    var alertMessage = \"\";\n    var alertClass = \"alert text-center hide\";\n    var backURL = loris.BaseURL.concat('/media/');\n\n    if (this.state.uploadResult) {\n      if (this.state.uploadResult === \"success\") {\n        alertClass = \"alert alert-success text-center\";\n        alertMessage = \"Update Successful!\";\n      } else if (this.state.uploadResult === \"error\") {\n        alertClass = \"alert alert-danger text-center\";\n        alertMessage = \"Failed to update the file\";\n      }\n    }\n\n    return (\n      <div>\n        <div className={alertClass} role=\"alert\" ref=\"alert-message\">\n          {alertMessage}\n        </div>\n        {\n          this.state.uploadResult === \"success\" ?\n          <a className=\"btn btn-primary\" href={backURL}>Back to media</a> :\n          null\n        }\n        <FormElement\n          name=\"mediaEdit\"\n          onSubmit={this.handleSubmit}\n          ref=\"form\"\n        >\n          <h3>Edit Media File</h3>\n          <br />\n          <SelectElement\n            name=\"pscid\"\n            label=\"PSCID\"\n            options={this.state.Data.candidates}\n            onUserInput={this.setFormData}\n            ref=\"pscid\"\n            required={true}\n            disabled={true}\n            value={this.state.mediaData.pscid}\n          />\n          <SelectElement\n            name=\"visitLabel\"\n            label=\"Visit Label\"\n            options={this.state.Data.visits}\n            onUserInput={this.setFormData}\n            ref=\"visitLabel\"\n            required={true}\n            disabled={true}\n            value={this.state.mediaData.visitLabel}\n          />\n          <SelectElement\n            name=\"forSite\"\n            label=\"Site\"\n            options={this.state.Data.sites}\n            onUserInput={this.setFormData}\n            ref=\"forSite\"\n            disabled={true}\n            value={this.state.mediaData.forSite}\n          />\n          <SelectElement\n            name=\"instrument\"\n            label=\"Instrument\"\n            options={this.state.Data.instruments}\n            onUserInput={this.setFormData}\n            ref=\"instrument\"\n            disabled={true}\n            value={this.state.mediaData.instrument}\n          />\n          <DateElement\n            name=\"dateTaken\"\n            label=\"Date of Administration\"\n            minYear=\"2000\"\n            maxYear=\"2017\"\n            onUserInput={this.setFormData}\n            ref=\"dateTaken\"\n            value={this.state.formData.dateTaken}\n          />\n          <TextareaElement\n            name=\"comments\"\n            label=\"Comments\"\n            onUserInput={this.setFormData}\n            ref=\"comments\"\n            value={this.state.formData.comments}\n          />\n          <FileElement\n            name=\"file\"\n            id=\"mediaEditEl\"\n            onUserInput={this.setFormData}\n            required={true}\n            disabled={true}\n            ref=\"file\"\n            label=\"Uploaded file\"\n            value={this.state.mediaData.fileName}\n          />\n          <SelectElement\n            name=\"hideFile\"\n            label=\"Hide File\"\n            emptyOption={false}\n            options={[\"No\", \"Yes\"]}\n            onUserInput={this.setFormData}\n            ref=\"hideFile\"\n            value={this.state.formData.hideFile}\n          />\n          <ButtonElement label=\"Update File\"/>\n        </FormElement>\n      </div>\n    );\n  }\n\n  /**\n   * Handles form submission\n   * @param {event} e - Form submition event\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n\n    var self = this;\n    var myFormData = this.state.formData;\n\n    $('#mediaEditEl').hide();\n    $(\"#file-progress\").removeClass('hide');\n\n    $.ajax({\n      type: 'POST',\n      url: self.props.action,\n      data: JSON.stringify(myFormData),\n      cache: false,\n      contentType: false,\n      processData: false,\n      xhr: function() {\n        var xhr = new window.XMLHttpRequest();\n        xhr.upload.addEventListener(\"progress\", function(evt) {\n          if (evt.lengthComputable) {\n            var progressbar = $(\"#progressbar\");\n            var progresslabel = $(\"#progresslabel\");\n            var percent = Math.round((evt.loaded / evt.total) * 100);\n            $(progressbar).width(percent + \"%\");\n            $(progresslabel).html(percent + \"%\");\n            progressbar.attr('aria-valuenow', percent);\n          }\n        }, false);\n        return xhr;\n      },\n      success: function(data) {\n        $(\"#file-progress\").addClass('hide');\n        self.setState({\n          uploadResult: \"success\"\n        });\n        self.showAlertMessage();\n      },\n      error: function(err) {\n        console.error(err);\n        self.setState({\n          uploadResult: \"error\"\n        });\n        self.showAlertMessage();\n      }\n\n    });\n  }\n\n  /**\n   * Set the form data based on state values of child elements/componenets\n   *\n   * @param {string} formElement - name of the selected element\n   * @param {string} value - selected value for corresponding form element\n   */\n  setFormData(formElement, value) {\n    var formData = this.state.formData;\n\n    if (value === \"\") {\n      formData[formElement] = null;\n    } else {\n      formData[formElement] = value;\n    }\n\n    this.setState({\n      formData: formData\n    });\n  }\n\n  /**\n   * Display a success/error alert message after form submission\n   */\n  showAlertMessage() {\n    var self = this;\n\n    if (this.refs[\"alert-message\"] === null) {\n      return;\n    }\n\n    var alertMsg = this.refs[\"alert-message\"];\n    $(alertMsg).fadeTo(2000, 500).delay(3000).slideUp(500, function() {\n      self.setState({\n        uploadResult: null\n      });\n    });\n  }\n\n}\n\nMediaEditForm.propTypes = {\n  DataURL: React.PropTypes.string.isRequired,\n  action: React.PropTypes.string.isRequired\n};\n\nvar RMediaEditForm = React.createFactory(MediaEditForm);\n\nwindow.MediaEditForm = MediaEditForm;\nwindow.RMediaEditForm = RMediaEditForm;\n\nexport default MediaEditForm;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/media/jsx/editForm.js"],"sourceRoot":""}